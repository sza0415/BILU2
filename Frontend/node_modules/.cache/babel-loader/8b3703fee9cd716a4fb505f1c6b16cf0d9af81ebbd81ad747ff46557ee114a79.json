{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport secrecyTemplateApi from '@/api/secrecyTemplate';\nimport message from '@/utils/message';\nexport default {\n  name: 'TemplateManagement',\n  data() {\n    return {\n      activeTab: 'secrecy_system',\n      showAddModal: false,\n      showImportModal: false,\n      showNewCategoryFields: false,\n      editingTemplate: null,\n      selectedFile: null,\n      loading: false,\n      templateForm: {\n        templateType: '',\n        question: '',\n        sortOrder: 0\n      },\n      newCategoryForm: {\n        key: ''\n      },\n      templateTypes: [],\n      templates: {}\n    };\n  },\n  methods: {\n    // UI交互方法\n    switchTab(tabKey) {\n      // 添加标签切换动画效果\n      const tabContent = document.querySelector('.tab-content');\n      if (tabContent) {\n        tabContent.style.animation = 'none';\n        setTimeout(() => {\n          this.activeTab = tabKey;\n          tabContent.style.animation = 'fadeIn 0.5s ease-in-out';\n        }, 10);\n      } else {\n        this.activeTab = tabKey;\n      }\n    },\n    confirmDeleteTemplate(id) {\n      if (!id) {\n        this.showToast('错误', '无法获取问题ID，请刷新页面重试', 'error');\n        return;\n      }\n\n      // 使用浏览器原生确认对话框（可以后续替换为更美观的组件）\n      if (confirm('确定要删除这个问题吗？删除后将无法恢复！')) {\n        this.deleteTemplate(id);\n      }\n    },\n    confirmDeleteTemplateType() {\n      const typeName = this.getCurrentTypeName();\n      if (confirm(`确定要删除整个\"${typeName}\"类型的所有模板吗？删除后将无法恢复\"${typeName}\"类型下的所有问题！`)) {\n        this.deleteTemplateType();\n      }\n    },\n    confirmImportTemplates() {\n      if (!this.selectedFile) {\n        this.showToast('错误', '请选择文件', 'error');\n        return;\n      }\n      if (confirm('确定要导入模板吗？这将覆盖数据库中的现有数据！')) {\n        this.importTemplates();\n      }\n    },\n    showToast(title, messageText, type) {\n      // 简化的消息提示，可以后续替换为更美观的组件\n      if (type === 'success') {\n        message.success(messageText);\n      } else if (type === 'error') {\n        message.error(messageText);\n      } else if (type === 'warning') {\n        message.warning(messageText);\n      }\n    },\n    toggleNewCategory() {\n      this.showNewCategoryFields = !this.showNewCategoryFields;\n      if (this.showNewCategoryFields) {\n        // 清空模板类型选择\n        this.templateForm.templateType = '';\n        // 添加动画效果\n        this.$nextTick(() => {\n          const newCategoryFields = document.querySelector('.new-category-fields');\n          if (newCategoryFields) {\n            newCategoryFields.style.animation = 'fadeIn 0.3s ease-in-out';\n          }\n        });\n      } else {\n        // 清空新类别输入框\n        this.newCategoryForm.key = '';\n      }\n    },\n    validateNewCategory() {\n      const newTypeKey = this.newCategoryForm.key.trim();\n      if (!newTypeKey) {\n        this.showToast('错误', '新类别名称不能为空', 'error');\n        return false;\n      }\n\n      // 验证类别名称格式（不能包含空格等特殊字符）\n      if (!/^[\\u4e00-\\u9fa5a-zA-Z0-9_-]+$/.test(newTypeKey)) {\n        this.showToast('错误', '类别名称只能包含中文、英文、数字、下划线和连字符，不能包含空格', 'error');\n        return false;\n      }\n      return true;\n    },\n    // API调用方法\n    async loadTemplateTypes() {\n      try {\n        const response = await secrecyTemplateApi.getAllTemplateTypes();\n        if (response.data.code === 200) {\n          const types = response.data.data;\n          // 将字符串类型转换为对象格式\n          this.templateTypes = types.map(type => ({\n            key: type,\n            name: this.getTemplateTypeName(type)\n          }));\n\n          // 初始化templates对象\n          types.forEach(type => {\n            this.templates[type] = [];\n          });\n\n          // 设置默认激活标签\n          if (types.length > 0) {\n            this.activeTab = types[0];\n          }\n        } else {\n          message.error(response.data.message || '加载模板类型失败');\n        }\n      } catch (error) {\n        console.error('加载模板类型失败:', error);\n        message.error('加载模板类型失败');\n      }\n    },\n    // 获取模板类型的显示名称\n    getTemplateTypeName(type) {\n      return type;\n    },\n    async loadTemplates(templateType = null) {\n      try {\n        this.loading = true;\n        if (templateType) {\n          // 加载指定类型的模板\n          const response = await secrecyTemplateApi.getAllTemplates(templateType);\n          if (response.data.code === 200) {\n            this.templates[templateType] = response.data.data;\n          } else {\n            message.error(response.data.message || '加载模板失败');\n          }\n        } else {\n          // 为每个模板类型分别加载数据\n          for (const type of this.templateTypes) {\n            const response = await secrecyTemplateApi.getAllTemplates(type.key);\n            if (response.data.code === 200) {\n              this.templates[type.key] = response.data.data;\n            } else {\n              console.error(`加载类型 ${type.key} 的模板失败:`, response.data.message);\n              this.templates[type.key] = [];\n            }\n          }\n        }\n      } catch (error) {\n        console.error('加载模板失败:', error);\n        message.error('加载模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async saveTemplate() {\n      try {\n        // 检查是否是新类别\n        const isNewCategory = this.showNewCategoryFields;\n        let templateType = this.templateForm.templateType;\n        if (isNewCategory) {\n          // 验证新类别输入\n          if (!this.validateNewCategory()) {\n            return;\n          }\n          templateType = this.newCategoryForm.key.trim();\n        }\n        if (!templateType || !this.templateForm.question) {\n          message.warning('请填写完整信息');\n          return;\n        }\n        this.loading = true;\n        let response;\n        if (this.editingTemplate) {\n          // 编辑模板\n          response = await secrecyTemplateApi.editTemplate(this.editingTemplate.id, {\n            templateType: templateType,\n            question: this.templateForm.question,\n            sortOrder: this.templateForm.sortOrder || 0\n          });\n        } else {\n          // 添加模板（使用新类别或现有类别）\n          response = await secrecyTemplateApi.addTemplateWithCategory(templateType, this.templateForm.question, this.templateForm.sortOrder || 0);\n        }\n        if (response.data.code === 200) {\n          message.success(this.editingTemplate ? '更新成功' : '问题已成功添加');\n          this.closeAddModal();\n\n          // 如果是新类别，需要重新加载模板类型和模板数据\n          if (isNewCategory) {\n            await this.loadTemplateTypes();\n            await this.loadTemplates();\n            // 切换到新创建的类别\n            this.activeTab = templateType;\n          } else {\n            await this.loadTemplates(templateType);\n          }\n        } else {\n          message.error(response.data.message || '操作失败');\n        }\n      } catch (error) {\n        console.error('保存模板失败:', error);\n        message.error('保存模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async deleteTemplate(id) {\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.deleteTemplate(id);\n        if (response.data.code === 200) {\n          // 添加行删除动画效果\n          const rowElement = this.$refs[`row-${id}`];\n          if (rowElement && rowElement[0]) {\n            // 添加淡出动画\n            rowElement[0].style.transition = 'opacity 0.3s ease';\n            rowElement[0].style.opacity = '0';\n            setTimeout(() => {\n              message.success('问题已成功删除');\n              this.loadTemplates(this.activeTab);\n            }, 300);\n          } else {\n            message.success('删除成功');\n            await this.loadTemplates(this.activeTab);\n          }\n        } else {\n          message.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        console.error('删除模板失败:', error);\n        message.error('删除模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async deleteTemplateType() {\n      const typeName = this.getCurrentTypeName();\n      if (!confirm(`确定要删除整个\"${typeName}\"类型的所有模板吗？`)) {\n        return;\n      }\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.deleteTemplateType(this.activeTab);\n        if (response.data.code === 200) {\n          message.success('删除类型成功');\n          await this.loadTemplates(this.activeTab);\n        } else {\n          message.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        console.error('删除模板类型失败:', error);\n        message.error('删除模板类型失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async importTemplates() {\n      if (!this.selectedFile) {\n        message.warning('请选择文件');\n        return;\n      }\n      try {\n        this.loading = true;\n        let response;\n        if (this.selectedFile.name.endsWith('.csv')) {\n          response = await secrecyTemplateApi.importCsvTemplate(this.selectedFile);\n        } else {\n          response = await secrecyTemplateApi.importTemplate(this.selectedFile);\n        }\n        if (response.data.code === 200) {\n          message.success(`成功导入${response.data.data}条数据`);\n          this.showImportModal = false;\n          this.selectedFile = null;\n          await this.loadTemplates();\n        } else {\n          message.error(response.data.message || '导入失败');\n        }\n      } catch (error) {\n        console.error('导入模板失败:', error);\n        message.error('导入模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async exportTemplates() {\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.exportTemplates(this.activeTab);\n\n        // 创建下载链接\n        const blob = new Blob([response.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `secrecy_templates_${this.activeTab || 'all'}.xlsx`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n\n        // 延迟恢复按钮状态（因为是下载操作，没有完成回调）\n        setTimeout(() => {\n          this.loading = false;\n          message.success('模板导出请求已发送');\n        }, 1000);\n      } catch (error) {\n        console.error('导出模板失败:', error);\n        message.error('导出模板失败');\n        this.loading = false;\n      }\n    },\n    handleFileSelect(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    closeAddModal() {\n      this.showAddModal = false;\n      this.showNewCategoryFields = false;\n      this.editingTemplate = null;\n      this.templateForm = {\n        templateType: '',\n        question: '',\n        sortOrder: 0\n      };\n      this.newCategoryForm = {\n        key: ''\n      };\n    },\n    // UI辅助方法\n    getCurrentTemplates() {\n      return this.templates[this.activeTab] || [];\n    },\n    getCurrentTypeName() {\n      const type = this.templateTypes.find(t => t.key === this.activeTab);\n      return type ? type.name : '';\n    },\n    getTemplateCount(typeKey) {\n      return this.templates[typeKey] ? this.templates[typeKey].length : 0;\n    },\n    editTemplate(template) {\n      this.editingTemplate = template;\n      this.templateForm = {\n        templateType: this.activeTab,\n        question: template.question,\n        sortOrder: template.sortOrder\n      };\n      this.showAddModal = true;\n    },\n    formatDate(dateStr) {\n      return new Date(dateStr).toLocaleString('zh-CN');\n    }\n  },\n  watch: {\n    activeTab(newTab) {\n      // 当切换标签时，如果该类型的模板还没有加载，则加载\n      if (!this.templates[newTab] || this.templates[newTab].length === 0) {\n        this.loadTemplates(newTab);\n      }\n    }\n  },\n  async mounted() {\n    console.log('模版管理页面已加载');\n    // 先加载模板类型，然后加载模板数据\n    await this.loadTemplateTypes();\n    await this.loadTemplates();\n  }\n};","map":{"version":3,"names":["secrecyTemplateApi","message","name","data","activeTab","showAddModal","showImportModal","showNewCategoryFields","editingTemplate","selectedFile","loading","templateForm","templateType","question","sortOrder","newCategoryForm","key","templateTypes","templates","methods","switchTab","tabKey","tabContent","document","querySelector","style","animation","setTimeout","confirmDeleteTemplate","id","showToast","confirm","deleteTemplate","confirmDeleteTemplateType","typeName","getCurrentTypeName","deleteTemplateType","confirmImportTemplates","importTemplates","title","messageText","type","success","error","warning","toggleNewCategory","$nextTick","newCategoryFields","validateNewCategory","newTypeKey","trim","test","loadTemplateTypes","response","getAllTemplateTypes","code","types","map","getTemplateTypeName","forEach","length","console","loadTemplates","getAllTemplates","saveTemplate","isNewCategory","editTemplate","addTemplateWithCategory","closeAddModal","rowElement","$refs","transition","opacity","endsWith","importCsvTemplate","importTemplate","exportTemplates","blob","Blob","url","window","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleFileSelect","event","target","files","getCurrentTemplates","find","t","getTemplateCount","typeKey","template","formatDate","dateStr","Date","toLocaleString","watch","newTab","mounted","log"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/views/TemplateManagement.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <!-- 页面标题区域 -->\n    <div class=\"row mb-4\">\n      <div class=\"col-12 text-center\">\n        <h2 class=\"display-5 fw-bold text-primary\">保密问答模板管理</h2>\n        <p class=\"text-muted\">管理和维护各类保密审查问题模板</p>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card border-0 shadow-lg rounded-4 overflow-hidden\">\n          <!-- 操作按钮区域 -->\n          <div class=\"card-header bg-white border-0 p-4\">\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div>\n                <h4 class=\"fw-bold text-primary mb-0\">\n                  <i class=\"bi bi-gear me-2\"></i>模板管理\n                </h4>\n              </div>\n              <div class=\"btn-group\">\n                <button class=\"btn btn-primary\" @click=\"showAddModal = true\" :disabled=\"loading\">\n                  <i class=\"bi bi-plus-circle me-2\"></i>添加模板类别\n                </button>\n                <button class=\"btn btn-success\" @click=\"showImportModal = true\" :disabled=\"loading\">\n                  <i class=\"bi bi-upload me-2\"></i>导入模板\n                </button>\n                <button class=\"btn btn-info\" @click=\"exportTemplates\" :disabled=\"loading\">\n                  <i class=\"bi bi-download me-2\"></i>\n                  <span v-if=\"loading\">\n                    <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    导出中...\n                  </span>\n                  <span v-else>导出模板</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 标签导航 -->\n          <div class=\"card-header bg-white border-0 p-0\">\n            <ul class=\"nav nav-tabs nav-fill custom-tabs\" role=\"tablist\">\n              <li class=\"nav-item\" role=\"presentation\" v-for=\"type in templateTypes\" :key=\"type.key\">\n                <button \n                  class=\"nav-link\" \n                  :class=\"{ active: activeTab === type.key }\"\n                  @click=\"switchTab(type.key)\"\n                  type=\"button\" \n                  role=\"tab\"\n                >\n                  <i class=\"fas fa-shield-alt me-2\"></i>{{ type.name }}\n                  <span class=\"badge bg-primary rounded-pill ms-2\">{{ getTemplateCount(type.key) }}</span>\n                </button>\n              </li>\n            </ul>\n          </div>\n          \n          <!-- 标签内容 -->\n          <div class=\"card-body p-4\">\n            <div class=\"tab-content\">\n              <div class=\"tab-pane fade show active\">\n                <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                  <div>\n                    <h3 class=\"fw-bold text-primary mb-0\">\n                      <i class=\"fas fa-list-alt me-2\"></i>{{ getCurrentTypeName() }}\n                      <span class=\"badge bg-primary rounded-pill ms-2\">{{ getCurrentTemplates().length }}</span>\n                    </h3>\n                    <div class=\"border-bottom border-2 border-primary mt-2\" style=\"width: 50px;\"></div>\n                  </div>\n                  <div class=\"btn-group\">\n                    <button \n                      class=\"btn btn-primary px-4 py-2 d-flex align-items-center shadow-sm\" \n                      @click=\"showAddModal = true\"\n                      :disabled=\"loading\"\n                    >\n                      <i class=\"fas fa-plus-circle me-2\"></i> 添加问题\n                    </button>\n                    <button \n                      v-if=\"getCurrentTemplates().length > 0\"\n                      class=\"btn btn-danger px-4 py-2 d-flex align-items-center shadow-sm\" \n                      @click=\"confirmDeleteTemplateType\"\n                      :disabled=\"loading\"\n                    >\n                      <i class=\"fas fa-trash-alt me-2\"></i> 删除类型\n                    </button>\n                  </div>\n                </div>\n                \n                <!-- 问题列表 -->\n                <div class=\"table-responsive rounded-4 shadow-sm\" style=\"min-height: 400px;\">\n                  <table class=\"table table-hover mb-0\">\n                    <thead>\n                      <tr class=\"bg-light\">\n                        <th width=\"5%\" class=\"py-3 ps-4 text-primary\">序号</th>\n                        <th width=\"80%\" class=\"py-3 text-primary\">问题</th>\n                        <th width=\"15%\" class=\"py-3 text-center text-primary\">操作</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr \n                        v-for=\"(template, index) in getCurrentTemplates()\" \n                        :key=\"template.id\" \n                        class=\"border-bottom question-item\"\n                        :ref=\"'row-' + template.id\"\n                      >\n                        <td class=\"py-3 ps-4 fw-bold text-muted\">{{ index + 1 }}</td>\n                        <td class=\"py-3 question-text\">{{ template.question }}</td>\n                        <td class=\"py-3 text-center\">\n                          <div class=\"btn-group\">\n                            <button \n                              class=\"btn btn-sm btn-outline-primary edit-btn\" \n                              @click=\"editTemplate(template)\"\n                              :disabled=\"loading\"\n                            >\n                              <i class=\"fas fa-edit me-1\"></i> 编辑\n                            </button>\n                            <button \n                              class=\"btn btn-sm btn-outline-danger delete-btn\" \n                              @click=\"confirmDeleteTemplate(template.id)\"\n                              :disabled=\"loading\"\n                            >\n                              <i class=\"fas fa-trash-alt me-1\"></i> 删除\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                      <tr v-if=\"getCurrentTemplates().length === 0\">\n                        <td colspan=\"3\" class=\"text-center py-5\">\n                          <div class=\"empty-state\">\n                            <i class=\"fas fa-inbox fa-3x mb-3 text-secondary opacity-50\"></i>\n                            <h5 class=\"text-secondary\">暂无问题模板</h5>\n                            <p class=\"text-muted\">点击\"添加问题\"按钮创建新的问题模板</p>\n                          </div>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 添加/编辑模板模态框 -->\n    <div class=\"modal fade\" :class=\"{ show: showAddModal }\" :style=\"{ display: showAddModal ? 'block' : 'none' }\" tabindex=\"-1\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"bi bi-plus-circle me-2\"></i>{{ editingTemplate ? '编辑模板' : '添加模板类别' }}\n            </h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"closeAddModal\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"saveTemplate\">\n              <div class=\"mb-3\">\n                <label for=\"templateType\" class=\"form-label\">模板类型</label>\n                <div class=\"d-flex align-items-center mb-2\">\n                  <div class=\"input-group\">\n                    <select class=\"form-select\" id=\"templateType\" v-model=\"templateForm.templateType\" :disabled=\"showNewCategoryFields\" required>\n                      <option value=\"\">请选择模板类型</option>\n                      <option v-for=\"type in templateTypes\" :key=\"type.key\" :value=\"type.key\">\n                        {{ type.name }}\n                      </option>\n                    </select>\n                    <button type=\"button\" class=\"btn btn-outline-primary\" @click=\"toggleNewCategory\">\n                      <i class=\"fas fa-plus\" v-if=\"!showNewCategoryFields\"></i>\n                      <i class=\"fas fa-minus\" v-else></i>\n                      {{ showNewCategoryFields ? ' 取消新类别' : ' 新类别' }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- 新类别输入字段 -->\n              <div v-if=\"showNewCategoryFields\" class=\"mb-3 new-category-fields\">\n                <div class=\"card border-primary p-3 mb-3\">\n                  <div class=\"mb-3\">\n                    <label for=\"newTypeKey\" class=\"form-label\">类别名称</label>\n                    <div class=\"input-group\">\n                      <span class=\"input-group-text\"><i class=\"fas fa-code\"></i></span>\n                      <input type=\"text\" class=\"form-control\" id=\"newTypeKey\" v-model=\"newCategoryForm.key\" placeholder=\"例如：信息安全\">\n                    </div>\n                    <div class=\"form-text text-muted\">\n                      <i class=\"fas fa-info-circle me-1\"></i>\n                      类别名称只能包含中文、英文、数字、下划线和连字符，不能包含空格\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"question\" class=\"form-label\">问题内容</label>\n                <textarea \n                  class=\"form-control\" \n                  id=\"question\" \n                  rows=\"4\" \n                  v-model=\"templateForm.question\" \n                  placeholder=\"请输入问题内容\"\n                  required\n                ></textarea>\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"sortOrder\" class=\"form-label\">排序</label>\n                <input \n                  type=\"number\" \n                  class=\"form-control\" \n                  id=\"sortOrder\" \n                  v-model=\"templateForm.sortOrder\" \n                  placeholder=\"排序号（数字越小越靠前）\"\n                />\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeAddModal\" :disabled=\"loading\">取消</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"saveTemplate\" :disabled=\"loading\">\n              <i class=\"bi bi-check-circle me-2\"></i>\n              <span v-if=\"loading\">\n                <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                保存中...\n              </span>\n              <span v-else>保存</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 导入模板模态框 -->\n    <div class=\"modal fade\" :class=\"{ show: showImportModal }\" :style=\"{ display: showImportModal ? 'block' : 'none' }\" tabindex=\"-1\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"bi bi-upload me-2\"></i>导入模板\n            </h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showImportModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"mb-3\">\n              <label for=\"importFile\" class=\"form-label\">选择文件</label>\n              <input \n                type=\"file\" \n                class=\"form-control\" \n                id=\"importFile\" \n                @change=\"handleFileSelect\"\n                accept=\".xlsx,.xls,.csv\"\n              />\n              <div class=\"form-text\">支持Excel (.xlsx, .xls) 和CSV (.csv) 格式</div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showImportModal = false\" :disabled=\"loading\">取消</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"confirmImportTemplates\" :disabled=\"!selectedFile || loading\">\n              <i class=\"bi bi-upload me-2\"></i>\n              <span v-if=\"loading\">\n                <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                导入中...\n              </span>\n              <span v-else>导入</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 模态框背景 -->\n    <div v-if=\"showAddModal || showImportModal\" class=\"modal-backdrop fade show\"></div>\n  </div>\n</template>\n\n<script>\nimport secrecyTemplateApi from '@/api/secrecyTemplate'\nimport message from '@/utils/message'\n\nexport default {\n  name: 'TemplateManagement',\n  data() {\n    return {\n      activeTab: 'secrecy_system',\n      showAddModal: false,\n      showImportModal: false,\n      showNewCategoryFields: false,\n      editingTemplate: null,\n      selectedFile: null,\n      loading: false,\n      templateForm: {\n        templateType: '',\n        question: '',\n        sortOrder: 0\n      },\n      newCategoryForm: {\n        key: ''\n      },\n      templateTypes: [],\n      templates: {}\n    }\n  },\n  methods: {\n    // UI交互方法\n    switchTab(tabKey) {\n      // 添加标签切换动画效果\n      const tabContent = document.querySelector('.tab-content');\n      if (tabContent) {\n        tabContent.style.animation = 'none';\n        setTimeout(() => {\n          this.activeTab = tabKey;\n          tabContent.style.animation = 'fadeIn 0.5s ease-in-out';\n        }, 10);\n      } else {\n        this.activeTab = tabKey;\n      }\n    },\n\n    confirmDeleteTemplate(id) {\n      if (!id) {\n        this.showToast('错误', '无法获取问题ID，请刷新页面重试', 'error');\n        return;\n      }\n\n      // 使用浏览器原生确认对话框（可以后续替换为更美观的组件）\n      if (confirm('确定要删除这个问题吗？删除后将无法恢复！')) {\n        this.deleteTemplate(id);\n      }\n    },\n\n    confirmDeleteTemplateType() {\n      const typeName = this.getCurrentTypeName();\n      if (confirm(`确定要删除整个\"${typeName}\"类型的所有模板吗？删除后将无法恢复\"${typeName}\"类型下的所有问题！`)) {\n        this.deleteTemplateType();\n      }\n    },\n\n    confirmImportTemplates() {\n      if (!this.selectedFile) {\n        this.showToast('错误', '请选择文件', 'error');\n        return;\n      }\n\n      if (confirm('确定要导入模板吗？这将覆盖数据库中的现有数据！')) {\n        this.importTemplates();\n      }\n    },\n\n    showToast(title, messageText, type) {\n      // 简化的消息提示，可以后续替换为更美观的组件\n      if (type === 'success') {\n        message.success(messageText);\n      } else if (type === 'error') {\n        message.error(messageText);\n      } else if (type === 'warning') {\n        message.warning(messageText);\n      }\n    },\n\n    toggleNewCategory() {\n      this.showNewCategoryFields = !this.showNewCategoryFields;\n      if (this.showNewCategoryFields) {\n        // 清空模板类型选择\n        this.templateForm.templateType = '';\n        // 添加动画效果\n        this.$nextTick(() => {\n          const newCategoryFields = document.querySelector('.new-category-fields');\n          if (newCategoryFields) {\n            newCategoryFields.style.animation = 'fadeIn 0.3s ease-in-out';\n          }\n        });\n      } else {\n        // 清空新类别输入框\n        this.newCategoryForm.key = '';\n      }\n    },\n\n    validateNewCategory() {\n      const newTypeKey = this.newCategoryForm.key.trim();\n      \n      if (!newTypeKey) {\n        this.showToast('错误', '新类别名称不能为空', 'error');\n        return false;\n      }\n      \n      // 验证类别名称格式（不能包含空格等特殊字符）\n      if (!/^[\\u4e00-\\u9fa5a-zA-Z0-9_-]+$/.test(newTypeKey)) {\n        this.showToast('错误', '类别名称只能包含中文、英文、数字、下划线和连字符，不能包含空格', 'error');\n        return false;\n      }\n      \n      return true;\n    },\n\n    // API调用方法\n    async loadTemplateTypes() {\n      try {\n        const response = await secrecyTemplateApi.getAllTemplateTypes();\n        \n        if (response.data.code === 200) {\n          const types = response.data.data;\n          // 将字符串类型转换为对象格式\n          this.templateTypes = types.map(type => ({\n            key: type,\n            name: this.getTemplateTypeName(type)\n          }));\n          \n          // 初始化templates对象\n          types.forEach(type => {\n            this.templates[type] = [];\n          });\n          \n          // 设置默认激活标签\n          if (types.length > 0) {\n            this.activeTab = types[0];\n          }\n        } else {\n          message.error(response.data.message || '加载模板类型失败');\n        }\n      } catch (error) {\n        console.error('加载模板类型失败:', error);\n        message.error('加载模板类型失败');\n      }\n    },\n\n    // 获取模板类型的显示名称\n    getTemplateTypeName(type) {\n      return type;\n    },\n\n    async loadTemplates(templateType = null) {\n      try {\n        this.loading = true;\n        \n        if (templateType) {\n          // 加载指定类型的模板\n          const response = await secrecyTemplateApi.getAllTemplates(templateType);\n          if (response.data.code === 200) {\n             this.templates[templateType] = response.data.data;\n          } else {\n            message.error(response.data.message || '加载模板失败');\n          }\n        } else {\n          // 为每个模板类型分别加载数据\n          for (const type of this.templateTypes) {\n            const response = await secrecyTemplateApi.getAllTemplates(type.key);\n            if (response.data.code === 200) {\n               this.templates[type.key] = response.data.data;\n             } else {\n               console.error(`加载类型 ${type.key} 的模板失败:`, response.data.message);\n               this.templates[type.key] = [];\n            }\n          }\n        }\n      } catch (error) {\n        console.error('加载模板失败:', error);\n        message.error('加载模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async saveTemplate() {\n      try {\n        // 检查是否是新类别\n        const isNewCategory = this.showNewCategoryFields;\n        let templateType = this.templateForm.templateType;\n        \n        if (isNewCategory) {\n          // 验证新类别输入\n          if (!this.validateNewCategory()) {\n            return;\n          }\n          templateType = this.newCategoryForm.key.trim();\n        }\n        \n        if (!templateType || !this.templateForm.question) {\n          message.warning('请填写完整信息');\n          return;\n        }\n\n        this.loading = true;\n        let response;\n        \n        if (this.editingTemplate) {\n          // 编辑模板\n          response = await secrecyTemplateApi.editTemplate(this.editingTemplate.id, {\n            templateType: templateType,\n            question: this.templateForm.question,\n            sortOrder: this.templateForm.sortOrder || 0\n          });\n        } else {\n          // 添加模板（使用新类别或现有类别）\n          response = await secrecyTemplateApi.addTemplateWithCategory(\n            templateType,\n            this.templateForm.question,\n            this.templateForm.sortOrder || 0\n          );\n        }\n\n        if (response.data.code === 200) {\n          message.success(this.editingTemplate ? '更新成功' : '问题已成功添加');\n          this.closeAddModal();\n          \n          // 如果是新类别，需要重新加载模板类型和模板数据\n          if (isNewCategory) {\n            await this.loadTemplateTypes();\n            await this.loadTemplates();\n            // 切换到新创建的类别\n            this.activeTab = templateType;\n          } else {\n            await this.loadTemplates(templateType);\n          }\n        } else {\n          message.error(response.data.message || '操作失败');\n        }\n      } catch (error) {\n        console.error('保存模板失败:', error);\n        message.error('保存模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async deleteTemplate(id) {\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.deleteTemplate(id);\n\n        if (response.data.code === 200) {\n          // 添加行删除动画效果\n          const rowElement = this.$refs[`row-${id}`];\n          if (rowElement && rowElement[0]) {\n            // 添加淡出动画\n            rowElement[0].style.transition = 'opacity 0.3s ease';\n            rowElement[0].style.opacity = '0';\n            \n            setTimeout(() => {\n              message.success('问题已成功删除');\n              this.loadTemplates(this.activeTab);\n            }, 300);\n          } else {\n            message.success('删除成功');\n            await this.loadTemplates(this.activeTab);\n          }\n        } else {\n          message.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        console.error('删除模板失败:', error);\n        message.error('删除模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async deleteTemplateType() {\n      const typeName = this.getCurrentTypeName();\n      if (!confirm(`确定要删除整个\"${typeName}\"类型的所有模板吗？`)) {\n        return;\n      }\n\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.deleteTemplateType(this.activeTab);\n\n        if (response.data.code === 200) {\n          message.success('删除类型成功');\n          await this.loadTemplates(this.activeTab);\n        } else {\n          message.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        console.error('删除模板类型失败:', error);\n        message.error('删除模板类型失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async importTemplates() {\n      if (!this.selectedFile) {\n        message.warning('请选择文件');\n        return;\n      }\n\n      try {\n        this.loading = true;\n        let response;\n        \n        if (this.selectedFile.name.endsWith('.csv')) {\n          response = await secrecyTemplateApi.importCsvTemplate(this.selectedFile);\n        } else {\n          response = await secrecyTemplateApi.importTemplate(this.selectedFile);\n        }\n\n        if (response.data.code === 200) {\n          message.success(`成功导入${response.data.data}条数据`);\n          this.showImportModal = false;\n          this.selectedFile = null;\n          await this.loadTemplates();\n        } else {\n          message.error(response.data.message || '导入失败');\n        }\n      } catch (error) {\n        console.error('导入模板失败:', error);\n        message.error('导入模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async exportTemplates() {\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.exportTemplates(this.activeTab);\n\n        // 创建下载链接\n        const blob = new Blob([response.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `secrecy_templates_${this.activeTab || 'all'}.xlsx`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n\n        // 延迟恢复按钮状态（因为是下载操作，没有完成回调）\n        setTimeout(() => {\n          this.loading = false;\n          message.success('模板导出请求已发送');\n        }, 1000);\n      } catch (error) {\n        console.error('导出模板失败:', error);\n        message.error('导出模板失败');\n        this.loading = false;\n      }\n    },\n\n    handleFileSelect(event) {\n      this.selectedFile = event.target.files[0];\n    },\n\n    closeAddModal() {\n      this.showAddModal = false;\n      this.showNewCategoryFields = false;\n      this.editingTemplate = null;\n      this.templateForm = {\n        templateType: '',\n        question: '',\n        sortOrder: 0\n      };\n      this.newCategoryForm = {\n        key: ''\n      };\n    },\n\n    // UI辅助方法\n    getCurrentTemplates() {\n      return this.templates[this.activeTab] || [];\n    },\n\n    getCurrentTypeName() {\n      const type = this.templateTypes.find(t => t.key === this.activeTab);\n      return type ? type.name : '';\n    },\n\n    getTemplateCount(typeKey) {\n      return this.templates[typeKey] ? this.templates[typeKey].length : 0;\n    },\n\n    editTemplate(template) {\n      this.editingTemplate = template;\n      this.templateForm = {\n        templateType: this.activeTab,\n        question: template.question,\n        sortOrder: template.sortOrder\n      };\n      this.showAddModal = true;\n    },\n\n    formatDate(dateStr) {\n      return new Date(dateStr).toLocaleString('zh-CN');\n    }\n  },\n  watch: {\n    activeTab(newTab) {\n      // 当切换标签时，如果该类型的模板还没有加载，则加载\n      if (!this.templates[newTab] || this.templates[newTab].length === 0) {\n        this.loadTemplates(newTab);\n      }\n    }\n  },\n  async mounted() {\n    console.log('模版管理页面已加载');\n    // 先加载模板类型，然后加载模板数据\n    await this.loadTemplateTypes();\n    await this.loadTemplates();\n  }\n}\n</script>\n\n<style scoped>\n/* 自定义标签样式 */\n.custom-tabs {\n  border-bottom: none;\n  background: linear-gradient(to right, #f8f9fa, #e9ecef);\n}\n\n.custom-tabs .nav-link {\n  border: none;\n  padding: 1rem 1.5rem;\n  font-weight: 500;\n  color: #6c757d;\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.custom-tabs .nav-link:hover {\n  color: #4361ee;\n}\n\n.custom-tabs .nav-link.active {\n  color: #4361ee;\n  background-color: transparent;\n}\n\n.custom-tabs .nav-link::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 3px;\n  background-color: #4361ee;\n  transform: scaleX(0);\n  transition: transform 0.3s ease;\n}\n\n.custom-tabs .nav-link.active::after,\n.custom-tabs .nav-link:hover::after {\n  transform: scaleX(1);\n}\n\n/* 表格样式 */\n.table {\n  border-collapse: separate;\n  border-spacing: 0;\n}\n\n.table thead th {\n  font-weight: 600;\n  border-top: none;\n  border-bottom: 2px solid #e0e0e0;\n}\n\n.table tbody tr {\n  transition: all 0.3s ease;\n}\n\n.table tbody tr:hover {\n  background-color: rgba(67, 97, 238, 0.05);\n}\n\n/* 问题项动画 */\n.question-item {\n  transition: all 0.3s ease;\n}\n\n.question-text {\n  line-height: 1.5;\n}\n\n/* 按钮样式 */\n.btn-outline-primary {\n  color: #4361ee;\n  border-color: #4361ee;\n}\n\n.btn-outline-primary:hover {\n  background-color: #4361ee;\n  border-color: #4361ee;\n}\n\n.btn-primary {\n  background-color: #4361ee;\n  border-color: #4361ee;\n}\n\n.btn-primary:hover {\n  background-color: #3f37c9;\n  border-color: #3f37c9;\n}\n\n.btn {\n  transition: all 0.3s ease;\n}\n\n.btn:hover {\n  transform: translateY(-1px);\n}\n\n/* 表单控件样式 */\n.form-control:focus, .form-select:focus {\n  border-color: #4361ee;\n  box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);\n}\n\n/* 模态框样式 */\n.modal {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.modal-content {\n  border-radius: 0.75rem;\n  overflow: hidden;\n}\n\n.modal-header {\n  padding: 1.25rem 1.5rem;\n}\n\n/* 空状态样式 */\n.empty-state {\n  padding: 2rem;\n  text-align: center;\n}\n\n/* 卡片悬停效果 */\n.card {\n  transition: all 0.3s ease;\n}\n\n.template-card {\n  transition: all 0.3s ease;\n}\n\n.template-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.badge {\n  font-size: 0.75rem;\n}\n\n.stats-card {\n  transition: all 0.3s ease;\n}\n\n.stats-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.stats-icon {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  margin: 0 auto;\n}\n\n/* 动画效果 */\n@keyframes fadeIn {\n  from { \n    opacity: 0; \n    transform: translateY(20px); \n  }\n  to { \n    opacity: 1; \n    transform: translateY(0); \n  }\n}\n\n.tab-content {\n  animation: fadeIn 0.5s ease-in-out;\n}\n\n/* 加载状态样式 */\n.spinner-border-sm {\n  width: 1rem;\n  height: 1rem;\n}\n\n/* 新类别字段样式 */\n.new-category-fields {\n  animation: fadeIn 0.3s ease-in-out;\n}\n\n.new-category-fields .card {\n  border: 1px solid #4361ee;\n  background-color: rgba(67, 97, 238, 0.05);\n}\n\n.new-category-fields .form-text {\n  font-size: 0.875rem;\n}\n\n.input-group-text {\n  background-color: #f8f9fa;\n  border-color: #dee2e6;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}