{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { searchRecords } from '@/api/record';\nimport { RecordList } from '@/components/record';\nexport default {\n  name: 'RecordManagement',\n  components: {\n    RecordList\n  },\n  data() {\n    return {\n      records: [],\n      loading: false,\n      showAdvanced: false,\n      searchParams: {\n        q: '',\n        location: '',\n        inquirer: '',\n        assistant: '',\n        start_date: '',\n        end_date: '',\n        page: 1,\n        size: 10\n      },\n      pagination: {\n        page: 1,\n        size: 10,\n        total: 0\n      }\n    };\n  },\n  mounted() {\n    // 从URL参数中恢复搜索条件\n    this.restoreSearchParams();\n\n    // 加载笔录列表\n    this.searchRecords();\n  },\n  methods: {\n    // 切换高级搜索选项\n    toggleAdvanced() {\n      this.showAdvanced = !this.showAdvanced;\n    },\n    // 搜索笔录\n    async searchRecords() {\n      this.loading = true;\n      try {\n        // 更新URL参数\n        this.updateUrlParams();\n        const response = await searchRecords(this.searchParams);\n        if (response.data && response.data.code === 200) {\n          if (Array.isArray(response.data.data)) {\n            // 直接返回数组\n            this.records = response.data.data;\n            this.pagination.total = response.data.data.length;\n          } else if (response.data.data && response.data.data.records) {\n            // 返回分页对象\n            this.records = response.data.data.records;\n            this.pagination.total = response.data.data.total;\n            this.pagination.page = response.data.data.current || 1;\n            this.pagination.size = response.data.data.size || 10;\n          } else {\n            this.records = [];\n            this.pagination.total = 0;\n          }\n        } else {\n          console.error('搜索笔录返回数据格式不正确:', response.data);\n          this.records = [];\n          this.pagination.total = 0;\n        }\n      } catch (error) {\n        console.error('搜索笔录失败:', error);\n        this.records = [];\n        this.pagination.total = 0;\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 创建新笔录\n    createRecord() {\n      this.$router.push('/record/edit');\n    },\n    // 查看笔录详情\n    viewRecordDetail(id) {\n      console.log('从RecordManagement跳转到笔录详情, ID:', id);\n      this.$router.push(`/record/${id}`);\n    },\n    // 编辑笔录\n    editRecord(id) {\n      this.$router.push(`/record/edit/${id}`);\n    },\n    // 处理笔录删除事件\n    handleRecordDeleted(id) {\n      // 从列表中移除已删除的笔录\n      this.records = this.records.filter(record => record.id !== id);\n      this.pagination.total--;\n    },\n    // 处理页码变更\n    handlePageChanged(pageInfo) {\n      this.searchParams.page = pageInfo.page;\n      this.searchParams.size = pageInfo.size;\n      this.searchRecords();\n    },\n    // 更新URL参数\n    updateUrlParams() {\n      const query = {};\n\n      // 只添加有值的参数\n      Object.keys(this.searchParams).forEach(key => {\n        if (this.searchParams[key]) {\n          query[key] = this.searchParams[key];\n        }\n      });\n\n      // 更新路由查询参数，但不触发路由变化\n      this.$router.replace({\n        query\n      });\n    },\n    // 从URL参数中恢复搜索条件\n    restoreSearchParams() {\n      const query = this.$route.query;\n\n      // 恢复搜索参数\n      Object.keys(this.searchParams).forEach(key => {\n        if (query[key]) {\n          this.searchParams[key] = query[key];\n\n          // 如果有高级搜索参数，展开高级搜索区域\n          if (['start_date', 'end_date', 'assistant'].includes(key) && query[key]) {\n            this.showAdvanced = true;\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["searchRecords","RecordList","name","components","data","records","loading","showAdvanced","searchParams","q","location","inquirer","assistant","start_date","end_date","page","size","pagination","total","mounted","restoreSearchParams","methods","toggleAdvanced","updateUrlParams","response","code","Array","isArray","length","current","console","error","createRecord","$router","push","viewRecordDetail","id","log","editRecord","handleRecordDeleted","filter","record","handlePageChanged","pageInfo","query","Object","keys","forEach","key","replace","$route","includes"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/views/RecordManagement.vue"],"sourcesContent":["<template>\n  <div class=\"record-management\">\n    <div class=\"container-fluid py-3\">\n      <!-- 页面标题 -->\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\n        <h2 class=\"mb-0\">\n          <i class=\"bi bi-file-text me-2\"></i>笔录管理\n        </h2>\n        <button class=\"btn btn-primary\" @click=\"createRecord\">\n          <i class=\"bi bi-plus-circle me-1\"></i>新建笔录\n        </button>\n      </div>\n      \n      <!-- 搜索过滤区域 -->\n      <div class=\"card shadow-sm mb-4\">\n        <div class=\"card-body\">\n          <form @submit.prevent=\"searchRecords\">\n            <div class=\"row g-3\">\n              <div class=\"col-md-4\">\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\"><i class=\"bi bi-search\"></i></span>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    v-model=\"searchParams.q\"\n                    placeholder=\"搜索笔录名称、内容...\"\n                  >\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\"><i class=\"bi bi-geo-alt\"></i></span>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    v-model=\"searchParams.location\"\n                    placeholder=\"询问地点\"\n                  >\n                </div>\n              </div>\n              <div class=\"col-md-3\">\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\"><i class=\"bi bi-person\"></i></span>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    v-model=\"searchParams.inquirer\"\n                    placeholder=\"被询问人\"\n                  >\n                </div>\n              </div>\n              <div class=\"col-md-2\">\n                <button type=\"submit\" class=\"btn btn-primary w-100\">\n                  <i class=\"bi bi-search me-1\"></i>搜索\n                </button>\n              </div>\n            </div>\n            \n            <!-- 高级搜索选项 -->\n            <div class=\"row g-3 mt-2\" v-if=\"showAdvanced\">\n              <div class=\"col-md-4\">\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\"><i class=\"bi bi-calendar-event\"></i></span>\n                  <input\n                    type=\"date\"\n                    class=\"form-control\"\n                    v-model=\"searchParams.start_date\"\n                    placeholder=\"开始日期\"\n                  >\n                </div>\n              </div>\n              <div class=\"col-md-4\">\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\"><i class=\"bi bi-calendar-event\"></i></span>\n                  <input\n                    type=\"date\"\n                    class=\"form-control\"\n                    v-model=\"searchParams.end_date\"\n                    placeholder=\"结束日期\"\n                  >\n                </div>\n              </div>\n              <div class=\"col-md-4\">\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\"><i class=\"bi bi-person-badge\"></i></span>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    v-model=\"searchParams.assistant\"\n                    placeholder=\"询问员\"\n                  >\n                </div>\n              </div>\n            </div>\n            \n            <!-- 高级搜索切换 -->\n            <div class=\"mt-2\">\n              <button type=\"button\" class=\"btn btn-link p-0\" @click=\"toggleAdvanced\">\n                <i class=\"bi\" :class=\"showAdvanced ? 'bi-chevron-up' : 'bi-chevron-down'\"></i>\n                {{ showAdvanced ? '收起高级搜索' : '展开高级搜索' }}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n      \n      <!-- 笔录列表 -->\n      <record-list\n        :record-list=\"records\"\n        :auto-load=\"false\"\n        :pagination=\"pagination\"\n        @view-detail=\"viewRecordDetail\"\n        @edit-record=\"editRecord\"\n        @record-deleted=\"handleRecordDeleted\"\n        @page-changed=\"handlePageChanged\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { searchRecords } from '@/api/record'\nimport { RecordList } from '@/components/record'\n\nexport default {\n  name: 'RecordManagement',\n  components: {\n    RecordList\n  },\n  data() {\n    return {\n      records: [],\n      loading: false,\n      showAdvanced: false,\n      searchParams: {\n        q: '',\n        location: '',\n        inquirer: '',\n        assistant: '',\n        start_date: '',\n        end_date: '',\n        page: 1,\n        size: 10\n      },\n      pagination: {\n        page: 1,\n        size: 10,\n        total: 0\n      }\n    }\n  },\n  mounted() {\n    // 从URL参数中恢复搜索条件\n    this.restoreSearchParams()\n    \n    // 加载笔录列表\n    this.searchRecords()\n  },\n  methods: {\n    // 切换高级搜索选项\n    toggleAdvanced() {\n      this.showAdvanced = !this.showAdvanced\n    },\n    \n    // 搜索笔录\n    async searchRecords() {\n      this.loading = true\n      \n      try {\n        // 更新URL参数\n        this.updateUrlParams()\n        \n        const response = await searchRecords(this.searchParams)\n        if (response.data && response.data.code === 200) {\n          if (Array.isArray(response.data.data)) {\n            // 直接返回数组\n            this.records = response.data.data\n            this.pagination.total = response.data.data.length\n          } else if (response.data.data && response.data.data.records) {\n            // 返回分页对象\n            this.records = response.data.data.records\n            this.pagination.total = response.data.data.total\n            this.pagination.page = response.data.data.current || 1\n            this.pagination.size = response.data.data.size || 10\n          } else {\n            this.records = []\n            this.pagination.total = 0\n          }\n        } else {\n          console.error('搜索笔录返回数据格式不正确:', response.data)\n          this.records = []\n          this.pagination.total = 0\n        }\n      } catch (error) {\n        console.error('搜索笔录失败:', error)\n        this.records = []\n        this.pagination.total = 0\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 创建新笔录\n    createRecord() {\n      this.$router.push('/record/edit')\n    },\n    \n    // 查看笔录详情\n    viewRecordDetail(id) {\n      console.log('从RecordManagement跳转到笔录详情, ID:', id)\n      this.$router.push(`/record/${id}`)\n    },\n    \n    // 编辑笔录\n    editRecord(id) {\n      this.$router.push(`/record/edit/${id}`)\n    },\n    \n    // 处理笔录删除事件\n    handleRecordDeleted(id) {\n      // 从列表中移除已删除的笔录\n      this.records = this.records.filter(record => record.id !== id)\n      this.pagination.total--\n    },\n    \n    // 处理页码变更\n    handlePageChanged(pageInfo) {\n      this.searchParams.page = pageInfo.page\n      this.searchParams.size = pageInfo.size\n      this.searchRecords()\n    },\n    \n    // 更新URL参数\n    updateUrlParams() {\n      const query = {}\n      \n      // 只添加有值的参数\n      Object.keys(this.searchParams).forEach(key => {\n        if (this.searchParams[key]) {\n          query[key] = this.searchParams[key]\n        }\n      })\n      \n      // 更新路由查询参数，但不触发路由变化\n      this.$router.replace({ query })\n    },\n    \n    // 从URL参数中恢复搜索条件\n    restoreSearchParams() {\n      const query = this.$route.query\n      \n      // 恢复搜索参数\n      Object.keys(this.searchParams).forEach(key => {\n        if (query[key]) {\n          this.searchParams[key] = query[key]\n          \n          // 如果有高级搜索参数，展开高级搜索区域\n          if (['start_date', 'end_date', 'assistant'].includes(key) && query[key]) {\n            this.showAdvanced = true\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.btn-link {\n  text-decoration: none;\n  color: #0d6efd;\n}\n\n.card {\n  transition: box-shadow 0.3s ease;\n}\n\n.card:hover {\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .card-body {\n    padding: 1rem;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}