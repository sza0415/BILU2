{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { Modal } from 'bootstrap';\nimport { getCaseDetail } from '@/api/case';\nexport default {\n  name: 'CaseDetailModal',\n  emits: ['edit'],\n  setup(props, {\n    emit\n  }) {\n    // 案件详情数据\n    const caseDetail = ref(null);\n    const loading = ref(false);\n\n    // 模态框实例\n    let modalInstance = null;\n\n    // 初始化模态框\n    const initModal = () => {\n      const modalEl = document.getElementById('caseDetailModal');\n      if (modalEl) {\n        // 销毁旧实例\n        if (modalInstance) {\n          modalInstance.dispose();\n        }\n        // 创建新实例\n        modalInstance = new Modal(modalEl, {\n          backdrop: 'static',\n          keyboard: false\n        });\n      }\n    };\n\n    // 加载案件详情\n    const loadCaseDetail = async id => {\n      if (!id) return;\n      console.log('开始加载案件详情, ID:', id);\n      loading.value = true;\n      try {\n        const response = await getCaseDetail(id);\n        console.log('API响应:', response);\n        if (response.data && response.data.code === 200) {\n          console.log('案件详情数据:', response.data.data);\n          // 后端返回的数据结构是一个包含 'case' 和 'records' 两个键的 Map\n          // 我们需要将 'case' 对象和 'records' 数组合并到 caseDetail 中\n          const responseData = response.data.data;\n          if (responseData && responseData.case) {\n            // 将 case 对象的属性复制到 caseDetail\n            caseDetail.value = {\n              ...responseData.case,\n              // 将 records 数组添加到 caseDetail\n              records: responseData.records || []\n            };\n            console.log('设置后的caseDetail值:', caseDetail.value);\n          } else {\n            caseDetail.value = null;\n            console.error('案件详情数据格式不正确');\n          }\n        } else {\n          caseDetail.value = null;\n          console.error('加载案件详情失败:', response.data ? response.data.msg : '未知错误');\n        }\n      } catch (error) {\n        console.error('加载案件详情异常:', error);\n        caseDetail.value = null;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 显示模态框\n    const showModal = id => {\n      // 重置数据\n      caseDetail.value = null;\n\n      // 确保模态框实例存在\n      if (!modalInstance) {\n        initModal();\n      }\n\n      // 显示模态框\n      modalInstance.show();\n\n      // 加载案件详情\n      loadCaseDetail(id);\n    };\n\n    // 隐藏模态框\n    const hideModal = () => {\n      if (modalInstance) {\n        modalInstance.hide();\n      }\n    };\n\n    // 编辑案件\n    const editCase = () => {\n      emit('edit', caseDetail.value);\n      hideModal();\n    };\n\n    // 格式化日期\n    const formatDate = dateString => {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toISOString().split('T')[0];\n    };\n\n    // 格式化日期时间\n    const formatDateTime = dateTimeString => {\n      if (!dateTimeString) return '';\n      const date = new Date(dateTimeString);\n      return `${date.toISOString().split('T')[0]} ${date.toTimeString().split(' ')[0]}`;\n    };\n\n    // 组件挂载时初始化模态框\n    onMounted(() => {\n      initModal();\n    });\n    return {\n      caseDetail,\n      loading,\n      showModal,\n      hideModal,\n      editCase,\n      formatDate,\n      formatDateTime\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","Modal","getCaseDetail","name","emits","setup","props","emit","caseDetail","loading","modalInstance","initModal","modalEl","document","getElementById","dispose","backdrop","keyboard","loadCaseDetail","id","console","log","value","response","data","code","responseData","case","records","error","msg","showModal","show","hideModal","hide","editCase","formatDate","dateString","date","Date","toISOString","split","formatDateTime","dateTimeString","toTimeString"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/components/case/modals/CaseDetailModal.vue"],"sourcesContent":["<template>\n  <div class=\"modal fade\" id=\"caseDetailModal\" tabindex=\"-1\" aria-labelledby=\"caseDetailModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"caseDetailModalLabel\">案件详情</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <div v-if=\"loading\" class=\"text-center py-5\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n              <span class=\"visually-hidden\">加载中...</span>\n            </div>\n            <p class=\"mt-3 text-muted\">正在加载案件详情...</p>\n          </div>\n          <div v-else-if=\"!caseDetail\" class=\"text-center py-5\">\n            <div class=\"alert alert-warning\">\n              <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n              <span>未找到案件详情</span>\n            </div>\n          </div>\n          <div v-else>\n            <div class=\"case-header mb-4\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"case-icon rounded-circle p-2 me-3\" \n                     :class=\"{\n                       'bg-success bg-opacity-10': caseDetail.caseType === '民事案件',\n                       'bg-danger bg-opacity-10': caseDetail.caseType === '刑事案件',\n                       'bg-info bg-opacity-10': caseDetail.caseType === '行政案件',\n                       'bg-primary bg-opacity-10': !['民事案件', '刑事案件', '行政案件'].includes(caseDetail.caseType)\n                     }\">\n                  <i class=\"bi fs-4\" \n                     :class=\"{\n                       'bi-people text-success': caseDetail.caseType === '民事案件',\n                       'bi-shield-lock text-danger': caseDetail.caseType === '刑事案件',\n                       'bi-building text-info': caseDetail.caseType === '行政案件',\n                       'bi-folder text-primary': !['民事案件', '刑事案件', '行政案件'].includes(caseDetail.caseType)\n                     }\"></i>\n                </div>\n                <div>\n                  <h4 class=\"mb-1\">{{ caseDetail.caseName }}</h4>\n                  <div class=\"d-flex align-items-center\">\n                    <span class=\"badge rounded-pill px-2 py-1 me-2\" :class=\"{\n                      'bg-success': caseDetail.status === '已完成' || caseDetail.status === '已结案',\n                      'bg-warning text-dark': caseDetail.status === '进行中' || caseDetail.status === '调查中' || caseDetail.status === '审理中',\n                      'bg-secondary': !['已完成', '已结案', '进行中', '调查中', '审理中'].includes(caseDetail.status)\n                    }\">{{ caseDetail.status }}</span>\n                    <span class=\"text-muted small\">{{ caseDetail.caseNumber }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"row mb-4\">\n              <div class=\"col-md-6\">\n                <div class=\"card border-0 shadow-sm h-100\">\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title mb-3\">基本信息</h6>\n                    <div class=\"detail-item\">\n                      <span class=\"detail-label\">案件类型</span>\n                      <span class=\"detail-value\">{{ caseDetail.caseType }}</span>\n                    </div>\n                    <div class=\"detail-item\">\n                      <span class=\"detail-label\">立案日期</span>\n                      <span class=\"detail-value\">{{ formatDate(caseDetail.startDate) }}</span>\n                    </div>\n                    <div class=\"detail-item\">\n                      <span class=\"detail-label\">结案日期</span>\n                      <span class=\"detail-value\">{{ formatDate(caseDetail.endDate) || '未结案' }}</span>\n                    </div>\n                    <div class=\"detail-item\">\n                      <span class=\"detail-label\">创建时间</span>\n                      <span class=\"detail-value\">{{ formatDateTime(caseDetail.createdAt) }}</span>\n                    </div>\n                    <div class=\"detail-item\">\n                      <span class=\"detail-label\">更新时间</span>\n                      <span class=\"detail-value\">{{ formatDateTime(caseDetail.updatedAt || caseDetail.updateTime) }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"card border-0 shadow-sm h-100\">\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title mb-3\">案件描述</h6>\n                    <p class=\"card-text\">{{ caseDetail.description || '暂无描述' }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"card border-0 shadow-sm mb-3\">\n              <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-center mb-3\">\n                  <h6 class=\"card-title mb-0\">笔录列表</h6>\n                  <span class=\"badge bg-primary rounded-pill\">{{ caseDetail.records ? caseDetail.records.length : 0 }}</span>\n                </div>\n                <div v-if=\"!caseDetail.records || caseDetail.records.length === 0\" class=\"text-center py-3\">\n                  <p class=\"text-muted mb-0\">暂无笔录记录</p>\n                </div>\n                <div v-else class=\"table-responsive\">\n                  <table class=\"table table-hover\">\n                    <thead class=\"table-light\">\n                      <tr>\n                        <th>笔录名称</th>\n                        <th>创建时间</th>\n                        <th>状态</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(record, index) in caseDetail.records\" :key=\"index\">\n                        <td>{{ record.recordName }}</td>\n                        <td>{{ formatDateTime(record.createdAt || record.createTime || record.inquiryTime) }}</td>\n                        <td>\n                          <span class=\"badge rounded-pill px-2 py-1\" :class=\"{\n                            'bg-success': record.status === '已完成',\n                            'bg-warning text-dark': record.status === '进行中',\n                            'bg-secondary': record.status !== '已完成' && record.status !== '进行中'\n                          }\">{{ record.status }}</span>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">关闭</button>\n          <button v-if=\"caseDetail\" type=\"button\" class=\"btn btn-primary\" @click=\"editCase\">编辑案件</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { Modal } from 'bootstrap'\nimport { getCaseDetail } from '@/api/case'\n\nexport default {\n  name: 'CaseDetailModal',\n  emits: ['edit'],\n  setup(props, { emit }) {\n    // 案件详情数据\n    const caseDetail = ref(null)\n    const loading = ref(false)\n    \n    // 模态框实例\n    let modalInstance = null\n    \n    // 初始化模态框\n    const initModal = () => {\n      const modalEl = document.getElementById('caseDetailModal')\n      if (modalEl) {\n        // 销毁旧实例\n        if (modalInstance) {\n          modalInstance.dispose()\n        }\n        // 创建新实例\n        modalInstance = new Modal(modalEl, {\n          backdrop: 'static',\n          keyboard: false\n        })\n      }\n    }\n    \n    // 加载案件详情\n    const loadCaseDetail = async (id) => {\n      if (!id) return\n      \n      console.log('开始加载案件详情, ID:', id)\n      loading.value = true\n      try {\n        const response = await getCaseDetail(id)\n        console.log('API响应:', response)\n        \n        if (response.data && response.data.code === 200) {\n          console.log('案件详情数据:', response.data.data)\n          // 后端返回的数据结构是一个包含 'case' 和 'records' 两个键的 Map\n          // 我们需要将 'case' 对象和 'records' 数组合并到 caseDetail 中\n          const responseData = response.data.data;\n          if (responseData && responseData.case) {\n            // 将 case 对象的属性复制到 caseDetail\n            caseDetail.value = {\n              ...responseData.case,\n              // 将 records 数组添加到 caseDetail\n              records: responseData.records || []\n            }\n            console.log('设置后的caseDetail值:', caseDetail.value)\n          } else {\n            caseDetail.value = null\n            console.error('案件详情数据格式不正确')\n          }\n        } else {\n          caseDetail.value = null\n          console.error('加载案件详情失败:', response.data ? response.data.msg : '未知错误')\n        }\n      } catch (error) {\n        console.error('加载案件详情异常:', error)\n        caseDetail.value = null\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 显示模态框\n    const showModal = (id) => {\n      // 重置数据\n      caseDetail.value = null\n      \n      // 确保模态框实例存在\n      if (!modalInstance) {\n        initModal()\n      }\n      \n      // 显示模态框\n      modalInstance.show()\n      \n      // 加载案件详情\n      loadCaseDetail(id)\n    }\n    \n    // 隐藏模态框\n    const hideModal = () => {\n      if (modalInstance) {\n        modalInstance.hide()\n      }\n    }\n    \n    // 编辑案件\n    const editCase = () => {\n      emit('edit', caseDetail.value)\n      hideModal()\n    }\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toISOString().split('T')[0]\n    }\n    \n    // 格式化日期时间\n    const formatDateTime = (dateTimeString) => {\n      if (!dateTimeString) return ''\n      const date = new Date(dateTimeString)\n      return `${date.toISOString().split('T')[0]} ${date.toTimeString().split(' ')[0]}`\n    }\n    \n    // 组件挂载时初始化模态框\n    onMounted(() => {\n      initModal()\n    })\n    \n    return {\n      caseDetail,\n      loading,\n      showModal,\n      hideModal,\n      editCase,\n      formatDate,\n      formatDateTime\n    }\n  }\n}\n</script>\n\n<style scoped>\n.modal-content {\n  border: none;\n  border-radius: 0.5rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n.modal-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  padding: 1.25rem 1.5rem;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  border-top: none;\n  padding: 0 1.5rem 1.5rem;\n}\n\n.case-icon {\n  width: 48px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.detail-item {\n  display: flex;\n  margin-bottom: 0.75rem;\n}\n\n.detail-label {\n  width: 80px;\n  color: #6c757d;\n  font-weight: 500;\n}\n\n.detail-value {\n  flex: 1;\n}\n\n.card {\n  border-radius: 0.5rem;\n  overflow: hidden;\n}\n\n.card-title {\n  font-weight: 600;\n  color: #495057;\n}\n\n.table {\n  margin-bottom: 0;\n}\n\n.table th {\n  font-weight: 600;\n  padding: 0.75rem;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.table td {\n  padding: 0.75rem;\n  vertical-align: middle;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.btn-primary {\n  background: linear-gradient(to right, #4a6cf7, #2651f0);\n  border: none;\n  padding: 0.5rem 1.5rem;\n  font-weight: 500;\n}\n\n.btn-primary:hover {\n  background: linear-gradient(to right, #2651f0, #1a3fd9);\n}\n\n.btn-secondary {\n  background-color: #f8f9fa;\n  border: 1px solid #ced4da;\n  color: #495057;\n  padding: 0.5rem 1.5rem;\n  font-weight: 500;\n}\n\n.btn-secondary:hover {\n  background-color: #e9ecef;\n  border-color: #ced4da;\n  color: #212529;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}