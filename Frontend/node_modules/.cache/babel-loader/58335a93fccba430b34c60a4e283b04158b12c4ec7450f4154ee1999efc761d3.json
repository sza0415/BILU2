{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\n// 不再直接导入axios，而是使用全局注册的axios实例\n// import axios from 'axios';\n\n// 配置API基础URL已移至utils/axios.js\n// 使用相对路径，依赖vue.config.js中的代理配置\n\nexport default {\n  name: 'CaseManagement',\n  data() {\n    return {\n      viewMode: 'table',\n      currentPage: 1,\n      pageSize: 10,\n      showCreateModal: false,\n      selectedCases: [],\n      searchForm: {\n        keyword: '',\n        caseType: '',\n        status: '',\n        dateFrom: ''\n      },\n      caseForm: {\n        caseNumber: '',\n        title: '',\n        description: '',\n        caseType: '',\n        status: '',\n        location: '',\n        incidentTime: ''\n      },\n      stats: {\n        totalCases: 0,\n        pendingCases: 0,\n        completedCases: 0,\n        todayCases: 0\n      },\n      cases: [],\n      caseTypes: [],\n      statusChoices: [],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    filteredCases() {\n      let filtered = this.cases;\n      if (this.searchForm.keyword) {\n        const keyword = this.searchForm.keyword.toLowerCase();\n        filtered = filtered.filter(caseItem => caseItem.title && caseItem.title.toLowerCase().includes(keyword) || caseItem.caseNumber && caseItem.caseNumber.toLowerCase().includes(keyword) || caseItem.description && caseItem.description.toLowerCase().includes(keyword));\n      }\n      if (this.searchForm.caseType) {\n        filtered = filtered.filter(caseItem => caseItem.caseType === this.searchForm.caseType);\n      }\n      if (this.searchForm.status) {\n        filtered = filtered.filter(caseItem => caseItem.status === this.searchForm.status);\n      }\n\n      // 负责人筛选已移除\n\n      if (this.searchForm.dateFrom) {\n        filtered = filtered.filter(caseItem => caseItem.createdAt >= this.searchForm.dateFrom);\n      }\n      return filtered;\n    },\n    paginatedCases() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.filteredCases.slice(start, end);\n    },\n    visiblePages() {\n      const pages = [];\n      const total = this.totalPages;\n      const current = this.currentPage;\n      if (total <= 7) {\n        for (let i = 1; i <= total; i++) {\n          pages.push(i);\n        }\n      } else {\n        if (current <= 4) {\n          for (let i = 1; i <= 5; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        } else if (current >= total - 3) {\n          pages.push(1);\n          pages.push('...');\n          for (let i = total - 4; i <= total; i++) {\n            pages.push(i);\n          }\n        } else {\n          pages.push(1);\n          pages.push('...');\n          for (let i = current - 1; i <= current + 1; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        }\n      }\n      return pages;\n    },\n    isAllSelected() {\n      return this.selectedCases.length === this.paginatedCases.length && this.paginatedCases.length > 0;\n    },\n    totalPages() {\n      return Math.ceil(this.filteredCases.length / this.pageSize);\n    }\n  },\n  methods: {\n    // 获取案件列表\n    async fetchCases() {\n      this.loading = true;\n      try {\n        console.log('正在获取案件列表...');\n        const response = await this.$axios.get('/api/case/list');\n        console.log('案件列表响应:', response.data);\n        if (response.data && response.data.code === 200) {\n          this.cases = Array.isArray(response.data.data) ? response.data.data : [];\n          this.updateStats();\n        } else {\n          this.error = response.data && response.data.message || '获取案件列表失败';\n          console.error('获取案件列表失败:', this.error);\n        }\n      } catch (error) {\n        console.error('获取案件列表失败:', error);\n        this.error = '获取案件列表失败，请稍后重试';\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取案件类型和状态选项\n    async fetchOptions() {\n      try {\n        const [typesResponse, statusResponse] = await Promise.all([this.$axios.get('/api/case/types'), this.$axios.get('/api/case/statuses')]);\n        if (typesResponse.data && typesResponse.data.code === 200) {\n          this.caseTypes = Array.isArray(typesResponse.data.data) ? typesResponse.data.data : [];\n        } else {\n          console.error('获取案件类型失败:', typesResponse.data);\n        }\n        if (statusResponse.data && statusResponse.data.code === 200) {\n          this.statusChoices = Array.isArray(statusResponse.data.data) ? statusResponse.data.data : [];\n        } else {\n          console.error('获取状态选项失败:', statusResponse.data);\n        }\n      } catch (error) {\n        console.error('获取选项失败:', error);\n      }\n    },\n    // 搜索案件\n    async searchCases() {\n      this.loading = true;\n      this.currentPage = 1;\n      try {\n        const params = {\n          page: this.currentPage,\n          size: this.pageSize,\n          q: this.searchForm.keyword,\n          caseType: this.searchForm.caseType,\n          status: this.searchForm.status,\n          createdAtFrom: this.searchForm.dateFrom\n        };\n        console.log('搜索参数:', params);\n        const response = await this.$axios.get('/api/case/search', {\n          params\n        });\n        if (response.data && response.data.code === 200) {\n          const result = response.data.data || {};\n          console.log('搜索结果:', result);\n          this.cases = Array.isArray(result.records) ? result.records : [];\n          // 更新统计数据\n          this.updateStats();\n          // 如果后端返回了分页信息，更新分页状态\n          if (result.pages) {\n            this.totalPages = result.pages;\n          }\n        } else {\n          this.error = response.data && response.data.message || '搜索案件失败';\n          console.error('搜索失败:', this.error);\n          alert('搜索失败: ' + this.error);\n        }\n      } catch (error) {\n        console.error('搜索案件失败:', error);\n        this.error = '搜索案件失败，请稍后重试';\n        alert('搜索案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 创建案件\n    async createCase() {\n      if (!this.caseForm.title || !this.caseForm.caseType) {\n        alert('请填写必填信息');\n        return;\n      }\n      this.loading = true;\n      try {\n        // 将前端表单数据转换为后端API所需格式\n        const caseData = {\n          caseNumber: this.caseForm.caseNumber || '',\n          caseName: this.caseForm.title || '',\n          description: this.caseForm.description || '',\n          caseType: this.caseForm.caseType || '',\n          status: this.caseForm.status || '待处理',\n          location: this.caseForm.location || '',\n          startDate: this.caseForm.incidentTime ? this.caseForm.incidentTime.split('T')[0] : null\n        };\n        console.log('创建案件数据:', caseData);\n        const response = await this.$axios.post('/api/case/add', caseData);\n        if (response.data && response.data.code === 200) {\n          console.log('创建案件成功:', response.data);\n          this.showCreateModal = false;\n          // 重置表单\n          this.caseForm = {\n            caseNumber: '',\n            title: '',\n            description: '',\n            caseType: '',\n            status: '',\n            location: '',\n            incidentTime: ''\n          };\n\n          // 重新获取案件列表\n          this.fetchCases();\n          alert('案件创建成功');\n        } else {\n          const errorMsg = response.data && response.data.message || '创建案件失败';\n          console.error('创建案件失败:', errorMsg);\n          alert(errorMsg);\n        }\n      } catch (error) {\n        console.error('创建案件失败:', error);\n        alert('创建案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    viewCase(caseItem) {\n      // 跳转到案件详情页面\n      if (!caseItem || !caseItem.id) {\n        console.error('查看案件失败: 无效的案件数据');\n        alert('查看案件失败: 无效的案件数据');\n        return;\n      }\n      this.$router.push(`/case/detail/${caseItem.id}`);\n    },\n    // 编辑案件\n    async editCase(caseItem) {\n      if (!caseItem || !caseItem.id) {\n        console.error('编辑案件失败: 无效的案件数据');\n        alert('编辑案件失败: 无效的案件数据');\n        return;\n      }\n      try {\n        // 先获取案件详情\n        const response = await this.$axios.get(`/api/case/${caseItem.id}`);\n        if (response.data && response.data.code === 200) {\n          const caseDetail = response.data.data || {};\n\n          // 跳转到编辑页面，并传递案件数据\n          this.$router.push({\n            path: `/case/edit/${caseItem.id}`,\n            query: {\n              caseData: JSON.stringify(caseDetail)\n            }\n          });\n        } else {\n          const errorMsg = response.data && response.data.message || '获取案件详情失败';\n          console.error('获取案件详情失败:', errorMsg);\n          alert(errorMsg);\n        }\n      } catch (error) {\n        console.error('获取案件详情失败:', error);\n        alert('获取案件详情失败: ' + (error.response?.data?.message || error.message));\n      }\n    },\n    // 查看笔录\n    viewRecords(caseItem) {\n      if (!caseItem || !caseItem.id) {\n        console.error('查看笔录失败: 无效的案件数据');\n        alert('查看笔录失败: 无效的案件数据');\n        return;\n      }\n      this.$router.push(`/case/${caseItem.id}/records`);\n    },\n    // 删除案件\n    async deleteCase(caseItem) {\n      if (!caseItem || !caseItem.id) {\n        console.error('删除案件失败: 无效的案件数据');\n        alert('删除案件失败: 无效的案件数据');\n        return;\n      }\n      const caseNumber = caseItem.caseNumber || '未知编号';\n      if (!confirm(`确定要删除案件 ${caseNumber} 吗？此操作将同时删除所有相关笔录且不可恢复！`)) {\n        return;\n      }\n      this.loading = true;\n      try {\n        const response = await this.$axios.delete(`/api/case/${caseItem.id}`);\n        if (response.data && response.data.code === 200) {\n          // 从列表中移除该案件\n          this.cases = this.cases.filter(c => c.id !== caseItem.id);\n          // 更新统计数据\n          this.updateStats();\n          alert('案件删除成功');\n        } else {\n          const errorMsg = response.data && response.data.message || '删除案件失败';\n          console.error('删除案件失败:', errorMsg);\n          alert(errorMsg);\n        }\n      } catch (error) {\n        console.error('删除案件失败:', error);\n        alert('删除案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 导出案件方法已移除\n    toggleSelectAll(event) {\n      if (!event || event.target === undefined) {\n        console.error('切换全选失败: 无效的事件对象');\n        return;\n      }\n      if (event.target.checked) {\n        // 确保cases是数组\n        if (Array.isArray(this.cases)) {\n          this.selectedCases = [...this.cases];\n        } else {\n          console.error('切换全选失败: cases不是数组');\n          this.selectedCases = [];\n        }\n      } else {\n        this.selectedCases = [];\n      }\n    },\n    updateStats() {\n      // 确保cases是数组\n      if (!Array.isArray(this.cases)) {\n        console.error('更新统计数据失败: cases不是数组');\n        this.stats = {\n          totalCases: 0,\n          pendingCases: 0,\n          completedCases: 0,\n          todayCases: 0\n        };\n        return;\n      }\n\n      // 计算统计数据\n      this.stats.totalCases = this.cases.length;\n\n      // 根据状态关键词筛选待处理案件\n      this.stats.pendingCases = this.cases.filter(c => c && c.status && (c.status.includes('待') || c.status.includes('处理'))).length;\n\n      // 根据状态关键词筛选已完成案件\n      this.stats.completedCases = this.cases.filter(c => c && c.status && (c.status.includes('完成') || c.status.includes('结案'))).length;\n\n      // 计算今日新增案件数\n      try {\n        const today = new Date().toISOString().split('T')[0];\n        this.stats.todayCases = this.cases.filter(c => {\n          if (!c || !c.createdAt) return false;\n          try {\n            const createdDate = c.createdAt.split(' ')[0];\n            return createdDate === today;\n          } catch (error) {\n            console.error('处理案件创建日期失败:', error);\n            return false;\n          }\n        }).length;\n      } catch (error) {\n        console.error('计算今日新增案件数失败:', error);\n        this.stats.todayCases = 0;\n      }\n    },\n    getCaseTypeClass(type) {\n      // 根据类型名称的哈希值分配不同的颜色类\n      const colors = ['bg-primary', 'bg-success', 'bg-danger', 'bg-warning', 'bg-info'];\n      if (!type) return 'bg-secondary';\n      try {\n        // 简单的哈希函数，将类型名称转换为数字\n        const hash = type.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n        return colors[hash % colors.length];\n      } catch (error) {\n        console.error('获取案件类型样式失败:', error);\n        return 'bg-secondary';\n      }\n    },\n    getCaseTypeText(type) {\n      // 直接返回类型值，因为后端已经返回了可读的类型名称\n      if (type === undefined || type === null) {\n        return '未知类型';\n      }\n      try {\n        return String(type);\n      } catch (error) {\n        console.error('获取案件类型文本失败:', error);\n        return '未知类型';\n      }\n    },\n    getStatusClass(status) {\n      // 根据状态的内容分配固定的颜色类\n      if (!status) return 'bg-secondary';\n      try {\n        if (typeof status !== 'string') {\n          return 'bg-secondary';\n        }\n\n        // 包含特定关键词的状态使用特定颜色\n        if (status.includes('完成') || status.includes('结案')) return 'bg-success';\n        if (status.includes('处理') || status.includes('待')) return 'bg-warning';\n        if (status.includes('调查') || status.includes('审理')) return 'bg-primary';\n\n        // 默认颜色\n        return 'bg-info';\n      } catch (error) {\n        console.error('获取状态样式失败:', error);\n        return 'bg-secondary';\n      }\n    },\n    getStatusText(status) {\n      // 直接返回状态值，因为后端已经返回了可读的状态名称\n      if (status === undefined || status === null) {\n        return '未知状态';\n      }\n      try {\n        return String(status);\n      } catch (error) {\n        console.error('获取状态文本失败:', error);\n        return '未知状态';\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('zh-CN');\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return '';\n      }\n    }\n\n    // 导入案件方法已移除\n  },\n  mounted() {\n    // 组件挂载后获取数据\n    this.fetchCases();\n    this.fetchOptions();\n  }\n};","map":{"version":3,"names":["name","data","viewMode","currentPage","pageSize","showCreateModal","selectedCases","searchForm","keyword","caseType","status","dateFrom","caseForm","caseNumber","title","description","location","incidentTime","stats","totalCases","pendingCases","completedCases","todayCases","cases","caseTypes","statusChoices","loading","error","computed","filteredCases","filtered","toLowerCase","filter","caseItem","includes","createdAt","paginatedCases","start","end","slice","visiblePages","pages","total","totalPages","current","i","push","isAllSelected","length","Math","ceil","methods","fetchCases","console","log","response","$axios","get","code","Array","isArray","updateStats","message","fetchOptions","typesResponse","statusResponse","Promise","all","searchCases","params","page","size","q","createdAtFrom","result","records","alert","createCase","caseData","caseName","startDate","split","post","errorMsg","viewCase","id","$router","editCase","caseDetail","path","query","JSON","stringify","viewRecords","deleteCase","confirm","delete","c","toggleSelectAll","event","target","undefined","checked","today","Date","toISOString","createdDate","getCaseTypeClass","type","colors","hash","reduce","acc","char","charCodeAt","getCaseTypeText","String","getStatusClass","getStatusText","formatDate","dateString","date","toLocaleDateString","mounted"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/views/CaseManagement.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid mt-4\">\n    <!-- 页面标题区域 -->\n    <div class=\"row mb-4\">\n      <div class=\"col-12\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n          <div>\n            <h2 class=\"display-6 fw-bold text-primary mb-0\">\n              <i class=\"bi bi-folder2-open me-2\"></i>案件管理\n            </h2>\n            <p class=\"text-muted mb-0\">管理和跟踪所有案件信息</p>\n          </div>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-primary btn-lg\" @click=\"showCreateModal = true\">\n              <i class=\"bi bi-plus-circle me-2\"></i>新建案件\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 统计卡片 -->\n    <div class=\"row mb-4\">\n      <div class=\"col-md-3\">\n        <div class=\"card border-0 shadow-sm stats-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"stats-icon bg-primary bg-opacity-10 text-primary mb-3\">\n              <i class=\"bi bi-folder2\"></i>\n            </div>\n            <h3 class=\"fw-bold mb-1\">{{ stats.totalCases }}</h3>\n            <p class=\"text-muted mb-0\">总案件数</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"card border-0 shadow-sm stats-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"stats-icon bg-warning bg-opacity-10 text-warning mb-3\">\n              <i class=\"bi bi-clock-history\"></i>\n            </div>\n            <h3 class=\"fw-bold mb-1\">{{ stats.pendingCases }}</h3>\n            <p class=\"text-muted mb-0\">待处理案件</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"card border-0 shadow-sm stats-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"stats-icon bg-success bg-opacity-10 text-success mb-3\">\n              <i class=\"bi bi-check-circle\"></i>\n            </div>\n            <h3 class=\"fw-bold mb-1\">{{ stats.completedCases }}</h3>\n            <p class=\"text-muted mb-0\">已完成案件</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"card border-0 shadow-sm stats-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"stats-icon bg-info bg-opacity-10 text-info mb-3\">\n              <i class=\"bi bi-calendar-day\"></i>\n            </div>\n            <h3 class=\"fw-bold mb-1\">{{ stats.todayCases }}</h3>\n            <p class=\"text-muted mb-0\">今日新增</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 搜索和筛选区域 -->\n    <div class=\"row mb-4\">\n      <div class=\"col-12\">\n        <div class=\"card border-0 shadow-sm\">\n          <div class=\"card-body\">\n            <div class=\"row g-3\">\n              <div class=\"col-md-3\">\n                <label class=\"form-label fw-bold\">搜索关键词</label>\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\">\n                    <i class=\"bi bi-search\"></i>\n                  </span>\n                  <input \n                    type=\"text\" \n                    class=\"form-control\" \n                    placeholder=\"案件编号、案件名称等\"\n                    v-model=\"searchForm.keyword\"\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-2\">\n                <label class=\"form-label fw-bold\">案件类型</label>\n                <select class=\"form-select\" v-model=\"searchForm.caseType\">\n                  <option value=\"\">全部类型</option>\n                  <option v-for=\"type in caseTypes\" :key=\"type\" :value=\"type\">{{ type }}</option>\n                </select>\n              </div>\n              <div class=\"col-md-2\">\n                <label class=\"form-label fw-bold\">案件状态</label>\n                <select class=\"form-select\" v-model=\"searchForm.status\">\n                  <option value=\"\">全部状态</option>\n                  <option v-for=\"status in statusChoices\" :key=\"status\" :value=\"status\">{{ status }}</option>\n                </select>\n              </div>\n              <!-- 负责人字段已移除 -->\n              <div class=\"col-md-2\">\n                <label class=\"form-label fw-bold\">创建日期</label>\n                <input type=\"date\" class=\"form-control\" v-model=\"searchForm.dateFrom\">\n              </div>\n              <div class=\"col-md-1\">\n                <label class=\"form-label fw-bold\">&nbsp;</label>\n                <button class=\"btn btn-primary w-100\" @click=\"searchCases\">\n                  <i class=\"bi bi-search\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 案件列表 -->\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card border-0 shadow-sm\">\n          <div class=\"card-header bg-white border-0 py-3\">\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <h5 class=\"fw-bold mb-0\">\n                <i class=\"bi bi-list-ul me-2 text-primary\"></i>案件列表\n                <span class=\"badge bg-primary ms-2\">{{ filteredCases.length }}</span>\n              </h5>\n              <div class=\"btn-group btn-group-sm\">\n                <button \n                  class=\"btn\" \n                  :class=\"viewMode === 'table' ? 'btn-primary' : 'btn-outline-primary'\"\n                  @click=\"viewMode = 'table'\"\n                >\n                  <i class=\"bi bi-table\"></i>\n                </button>\n                <button \n                  class=\"btn\" \n                  :class=\"viewMode === 'card' ? 'btn-primary' : 'btn-outline-primary'\"\n                  @click=\"viewMode = 'card'\"\n                >\n                  <i class=\"bi bi-grid-3x3-gap\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"card-body p-0\">\n            <!-- 表格视图 -->\n            <div v-if=\"viewMode === 'table'\" class=\"table-responsive\">\n              <table class=\"table table-hover mb-0\">\n                <thead class=\"bg-light\">\n                  <tr>\n                    <th width=\"5%\">\n                      <input type=\"checkbox\" class=\"form-check-input\" @change=\"toggleSelectAll\">\n                    </th>\n                    <th width=\"15%\">案件编号</th>\n                    <th width=\"20%\">案件名称</th>\n                    <th width=\"10%\">案件类型</th>\n                    <th width=\"10%\">状态</th>\n                    <!-- 负责人列已移除 -->\n                    <th width=\"10%\">创建时间</th>\n                    <th width=\"10%\">笔录数量</th>\n                    <th width=\"10%\">操作</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"caseItem in paginatedCases\" :key=\"caseItem.id\" class=\"case-row\">\n                    <td>\n                      <input \n                        type=\"checkbox\" \n                        class=\"form-check-input\" \n                        :value=\"caseItem.id\"\n                        v-model=\"selectedCases\"\n                      >\n                    </td>\n                    <td>\n                      <span class=\"fw-bold text-primary\">{{ caseItem.caseNumber || '无编号' }}</span>\n                    </td>\n                    <td>\n                      <div>\n                        <div class=\"fw-medium\">{{ caseItem.caseName || '无标题' }}</div>\n                        <small class=\"text-muted\">{{ caseItem.description || '无描述' }}</small>\n                      </div>\n                    </td>\n                    <td>\n                      <span class=\"badge\" :class=\"getCaseTypeClass(caseItem.caseType)\">\n                        {{ getCaseTypeText(caseItem.caseType) }}\n                      </span>\n                    </td>\n                    <td>\n                      <span class=\"badge\" :class=\"getStatusClass(caseItem.status)\">\n                        {{ getStatusText(caseItem.status) }}\n                      </span>\n                    </td>\n                    <!-- 负责人列已移除 -->\n                    <td>\n                      <small class=\"text-muted\">{{ formatDate(caseItem.createdAt) }}</small>\n                    </td>\n                    <td>\n                      <span class=\"badge bg-info\">{{ caseItem.recordCount || 0 }}</span>\n                    </td>\n                    <td>\n                      <div class=\"btn-group btn-group-sm\">\n                        <button class=\"btn btn-outline-primary\" @click=\"viewCase(caseItem)\" title=\"查看详情\">\n                          <i class=\"bi bi-eye\"></i>\n                        </button>\n                        <button class=\"btn btn-outline-success\" @click=\"editCase(caseItem)\" title=\"编辑\">\n                          <i class=\"bi bi-pencil\"></i>\n                        </button>\n                        <button class=\"btn btn-outline-info\" @click=\"viewRecords(caseItem)\" title=\"查看笔录\">\n                          <i class=\"bi bi-file-text\"></i>\n                        </button>\n                        <button class=\"btn btn-outline-danger\" @click=\"deleteCase(caseItem)\" title=\"删除\">\n                          <i class=\"bi bi-trash\"></i>\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr v-if=\"filteredCases.length === 0\">\n                    <td colspan=\"9\" class=\"text-center py-5\">\n                      <div class=\"empty-state\">\n                        <i class=\"bi bi-folder2 fa-3x mb-3 text-secondary opacity-50\"></i>\n                        <h5 class=\"text-secondary\">暂无案件记录</h5>\n                        <p class=\"text-muted\">点击\"新建案件\"按钮创建第一个案件</p>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <!-- 卡片视图 -->\n            <div v-else class=\"row g-3 p-3\">\n              <div v-for=\"caseItem in paginatedCases\" :key=\"caseItem.id\" class=\"col-md-6 col-lg-4\">\n                <div class=\"card h-100 case-card\">\n                  <div class=\"card-header d-flex justify-content-between align-items-center\">\n                    <small class=\"text-muted\">{{ caseItem.caseNumber || '无编号' }}</small>\n                    <div>\n                      <span class=\"badge me-1\" :class=\"getCaseTypeClass(caseItem.caseType)\">\n                        {{ getCaseTypeText(caseItem.caseType) }}\n                      </span>\n                      <span class=\"badge\" :class=\"getStatusClass(caseItem.status)\">\n                        {{ getStatusText(caseItem.status) }}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title\">{{ caseItem.caseName || '无标题' }}</h6>\n                    <p class=\"card-text text-muted small\">{{ caseItem.description || '无描述' }}</p>\n                    <div class=\"row text-center mb-3\">\n                      <div class=\"col-6\">\n                        <div class=\"border-end\">\n                          <div class=\"fw-bold text-primary\">{{ caseItem.recordCount || 0 }}</div>\n                          <small class=\"text-muted\">笔录数量</small>\n                        </div>\n                      </div>\n                      <div class=\"col-6\">\n                        <div class=\"fw-bold text-success\">{{ caseItem.daysOpen || 0 }}</div>\n                        <small class=\"text-muted\">开案天数</small>\n                      </div>\n                    </div>\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <small class=\"text-muted\">\n                        <i class=\"bi bi-person me-1\"></i>{{ caseItem.officer || '未分配' }}\n                      </small>\n                      <small class=\"text-muted\">{{ formatDate(caseItem.createdAt) }}</small>\n                    </div>\n                  </div>\n                  <div class=\"card-footer bg-transparent\">\n                    <div class=\"btn-group w-100\">\n                      <button class=\"btn btn-outline-primary btn-sm\" @click=\"viewCase(caseItem)\">\n                        <i class=\"bi bi-eye me-1\"></i>详情\n                      </button>\n                      <button class=\"btn btn-outline-success btn-sm\" @click=\"editCase(caseItem)\">\n                        <i class=\"bi bi-pencil me-1\"></i>编辑\n                      </button>\n                      <button class=\"btn btn-outline-info btn-sm\" @click=\"viewRecords(caseItem)\">\n                        <i class=\"bi bi-file-text me-1\"></i>笔录\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div v-if=\"filteredCases.length === 0\" class=\"col-12\">\n                <div class=\"text-center py-5\">\n                  <div class=\"empty-state\">\n                    <i class=\"bi bi-folder2 fa-3x mb-3 text-secondary opacity-50\"></i>\n                    <h5 class=\"text-secondary\">暂无案件记录</h5>\n                    <p class=\"text-muted\">点击\"新建案件\"按钮创建第一个案件</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 分页导航 -->\n          <div class=\"d-flex justify-content-center mt-4\" v-if=\"totalPages > 1\">\n            <nav aria-label=\"案件分页\">\n              <ul class=\"pagination\">\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"currentPage = 1\">\n                    <i class=\"bi bi-chevron-double-left\"></i>\n                  </a>\n                </li>\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"currentPage--\">\n                    <i class=\"bi bi-chevron-left\"></i>\n                  </a>\n                </li>\n                \n                <li class=\"page-item\" v-for=\"page in visiblePages\" :key=\"page\" \n                    :class=\"{ active: page === currentPage, disabled: page === '...' }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"page !== '...' && (currentPage = page)\">\n                    {{ page }}\n                  </a>\n                </li>\n                \n                <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"currentPage++\">\n                    <i class=\"bi bi-chevron-right\"></i>\n                  </a>\n                </li>\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"currentPage = totalPages\">\n                    <i class=\"bi bi-chevron-double-right\"></i>\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 新建案件模态框 -->\n    <div class=\"modal fade\" :class=\"{ show: showCreateModal }\" :style=\"{ display: showCreateModal ? 'block' : 'none' }\" tabindex=\"-1\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"bi bi-plus-circle me-2\"></i>新建案件\n            </h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showCreateModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"createCase\">\n              <div class=\"row g-3\">\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案件编号</label>\n                  <input type=\"text\" class=\"form-control\" v-model=\"caseForm.caseNumber\" required>\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案件类型</label>\n                  <select class=\"form-select\" v-model=\"caseForm.caseType\" required>\n                    <option value=\"\">请选择案件类型</option>\n                    <option v-for=\"type in caseTypes\" :key=\"type\" :value=\"type\">{{ type }}</option>\n                  </select>\n                </div>\n                <div class=\"col-12\">\n                  <label class=\"form-label\">案件名称</label>\n                  <input type=\"text\" class=\"form-control\" v-model=\"caseForm.title\" required>\n                </div>\n                <div class=\"col-12\">\n                  <label class=\"form-label\">案件描述</label>\n                  <textarea class=\"form-control\" rows=\"4\" v-model=\"caseForm.description\" required></textarea>\n                </div>\n                <!-- 负责人字段已移除 -->\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案件状态</label>\n                  <select class=\"form-select\" v-model=\"caseForm.status\">\n                    <option v-for=\"status in statusChoices\" :key=\"status\" :value=\"status\">{{ status }}</option>\n                  </select>\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案发地点</label>\n                  <input type=\"text\" class=\"form-control\" v-model=\"caseForm.location\">\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案发时间</label>\n                  <input type=\"datetime-local\" class=\"form-control\" v-model=\"caseForm.incidentTime\">\n                </div>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showCreateModal = false\">取消</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"createCase\">\n              <i class=\"bi bi-check-circle me-2\"></i>保存\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 导入案件模态框已移除 -->\n    \n    <!-- 模态框背景 -->\n    <div v-if=\"showCreateModal\" class=\"modal-backdrop fade show\"></div>\n  </div>\n</template>\n\n<script>\n// 不再直接导入axios，而是使用全局注册的axios实例\n// import axios from 'axios';\n\n// 配置API基础URL已移至utils/axios.js\n// 使用相对路径，依赖vue.config.js中的代理配置\n\nexport default {\n  name: 'CaseManagement',\n  data() {\n    return {\n      viewMode: 'table',\n      currentPage: 1,\n      pageSize: 10,\n      showCreateModal: false,\n      selectedCases: [],\n      searchForm: {\n        keyword: '',\n        caseType: '',\n        status: '',\n        dateFrom: ''\n      },\n      caseForm: {\n        caseNumber: '',\n        title: '',\n        description: '',\n        caseType: '',\n        status: '',\n        location: '',\n        incidentTime: ''\n      },\n      stats: {\n        totalCases: 0,\n        pendingCases: 0,\n        completedCases: 0,\n        todayCases: 0\n      },\n      cases: [],\n      caseTypes: [],\n      statusChoices: [],\n      loading: false,\n      error: null\n    }\n  },\n  computed: {\n    filteredCases() {\n      let filtered = this.cases;\n      \n      if (this.searchForm.keyword) {\n        const keyword = this.searchForm.keyword.toLowerCase();\n        filtered = filtered.filter(caseItem => \n          (caseItem.title && caseItem.title.toLowerCase().includes(keyword)) ||\n          (caseItem.caseNumber && caseItem.caseNumber.toLowerCase().includes(keyword)) ||\n          (caseItem.description && caseItem.description.toLowerCase().includes(keyword))\n        );\n      }\n      \n      if (this.searchForm.caseType) {\n        filtered = filtered.filter(caseItem => caseItem.caseType === this.searchForm.caseType);\n      }\n      \n      if (this.searchForm.status) {\n        filtered = filtered.filter(caseItem => caseItem.status === this.searchForm.status);\n      }\n      \n      // 负责人筛选已移除\n      \n      if (this.searchForm.dateFrom) {\n        filtered = filtered.filter(caseItem => caseItem.createdAt >= this.searchForm.dateFrom);\n      }\n      \n      return filtered;\n    },\n    paginatedCases() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.filteredCases.slice(start, end);\n    },\n    visiblePages() {\n      const pages = [];\n      const total = this.totalPages;\n      const current = this.currentPage;\n      \n      if (total <= 7) {\n        for (let i = 1; i <= total; i++) {\n          pages.push(i);\n        }\n      } else {\n        if (current <= 4) {\n          for (let i = 1; i <= 5; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        } else if (current >= total - 3) {\n          pages.push(1);\n          pages.push('...');\n          for (let i = total - 4; i <= total; i++) {\n            pages.push(i);\n          }\n        } else {\n          pages.push(1);\n          pages.push('...');\n          for (let i = current - 1; i <= current + 1; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        }\n      }\n      \n      return pages;\n    },\n    isAllSelected() {\n      return this.selectedCases.length === this.paginatedCases.length && this.paginatedCases.length > 0;\n    },\n    totalPages() {\n      return Math.ceil(this.filteredCases.length / this.pageSize);\n    }\n  },\n    methods: {\n    // 获取案件列表\n    async fetchCases() {\n      this.loading = true;\n      try {\n        console.log('正在获取案件列表...');\n        const response = await this.$axios.get('/api/case/list');\n        console.log('案件列表响应:', response.data);\n        if (response.data && response.data.code === 200) {\n          this.cases = Array.isArray(response.data.data) ? response.data.data : [];\n          this.updateStats();\n        } else {\n          this.error = (response.data && response.data.message) || '获取案件列表失败';\n          console.error('获取案件列表失败:', this.error);\n        }\n      } catch (error) {\n        console.error('获取案件列表失败:', error);\n        this.error = '获取案件列表失败，请稍后重试';\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 获取案件类型和状态选项\n    async fetchOptions() {\n      try {\n        const [typesResponse, statusResponse] = await Promise.all([\n          this.$axios.get('/api/case/types'),\n          this.$axios.get('/api/case/statuses')\n        ]);\n        \n        if (typesResponse.data && typesResponse.data.code === 200) {\n          this.caseTypes = Array.isArray(typesResponse.data.data) ? typesResponse.data.data : [];\n        } else {\n          console.error('获取案件类型失败:', typesResponse.data);\n        }\n        \n        if (statusResponse.data && statusResponse.data.code === 200) {\n          this.statusChoices = Array.isArray(statusResponse.data.data) ? statusResponse.data.data : [];\n        } else {\n          console.error('获取状态选项失败:', statusResponse.data);\n        }\n      } catch (error) {\n        console.error('获取选项失败:', error);\n      }\n    },\n    \n    // 搜索案件\n    async searchCases() {\n      this.loading = true;\n      this.currentPage = 1;\n      \n      try {\n        const params = {\n          page: this.currentPage,\n          size: this.pageSize,\n          q: this.searchForm.keyword,\n          caseType: this.searchForm.caseType,\n          status: this.searchForm.status,\n          createdAtFrom: this.searchForm.dateFrom\n        };\n        \n        console.log('搜索参数:', params);\n        const response = await this.$axios.get('/api/case/search', { params });\n        \n        if (response.data && response.data.code === 200) {\n          const result = response.data.data || {};\n          console.log('搜索结果:', result);\n          this.cases = Array.isArray(result.records) ? result.records : [];\n          // 更新统计数据\n          this.updateStats();\n          // 如果后端返回了分页信息，更新分页状态\n          if (result.pages) {\n            this.totalPages = result.pages;\n          }\n        } else {\n          this.error = (response.data && response.data.message) || '搜索案件失败';\n          console.error('搜索失败:', this.error);\n          alert('搜索失败: ' + this.error);\n        }\n      } catch (error) {\n        console.error('搜索案件失败:', error);\n        this.error = '搜索案件失败，请稍后重试';\n        alert('搜索案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 创建案件\n    async createCase() {\n      if (!this.caseForm.title || !this.caseForm.caseType) {\n        alert('请填写必填信息');\n        return;\n      }\n      \n      this.loading = true;\n      \n      try {\n        // 将前端表单数据转换为后端API所需格式\n        const caseData = {\n          caseNumber: this.caseForm.caseNumber || '',\n          caseName: this.caseForm.title || '',\n          description: this.caseForm.description || '',\n          caseType: this.caseForm.caseType || '',\n          status: this.caseForm.status || '待处理',\n          location: this.caseForm.location || '',\n          startDate: this.caseForm.incidentTime ? this.caseForm.incidentTime.split('T')[0] : null\n        };\n        \n        console.log('创建案件数据:', caseData);\n        const response = await this.$axios.post('/api/case/add', caseData);\n        \n        if (response.data && response.data.code === 200) {\n          console.log('创建案件成功:', response.data);\n          this.showCreateModal = false;\n          // 重置表单\n          this.caseForm = {\n            caseNumber: '',\n            title: '',\n            description: '',\n            caseType: '',\n            status: '',\n            location: '',\n            incidentTime: ''\n          };\n          \n          // 重新获取案件列表\n          this.fetchCases();\n          alert('案件创建成功');\n        } else {\n          const errorMsg = (response.data && response.data.message) || '创建案件失败';\n          console.error('创建案件失败:', errorMsg);\n          alert(errorMsg);\n        }\n      } catch (error) {\n        console.error('创建案件失败:', error);\n        alert('创建案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    viewCase(caseItem) {\n      // 跳转到案件详情页面\n      if (!caseItem || !caseItem.id) {\n        console.error('查看案件失败: 无效的案件数据');\n        alert('查看案件失败: 无效的案件数据');\n        return;\n      }\n      this.$router.push(`/case/detail/${caseItem.id}`);\n    },\n    \n    // 编辑案件\n    async editCase(caseItem) {\n      if (!caseItem || !caseItem.id) {\n        console.error('编辑案件失败: 无效的案件数据');\n        alert('编辑案件失败: 无效的案件数据');\n        return;\n      }\n      \n      try {\n        // 先获取案件详情\n        const response = await this.$axios.get(`/api/case/${caseItem.id}`);\n        \n        if (response.data && response.data.code === 200) {\n          const caseDetail = response.data.data || {};\n          \n          // 跳转到编辑页面，并传递案件数据\n          this.$router.push({\n            path: `/case/edit/${caseItem.id}`,\n            query: { caseData: JSON.stringify(caseDetail) }\n          });\n        } else {\n          const errorMsg = (response.data && response.data.message) || '获取案件详情失败';\n          console.error('获取案件详情失败:', errorMsg);\n          alert(errorMsg);\n        }\n      } catch (error) {\n        console.error('获取案件详情失败:', error);\n        alert('获取案件详情失败: ' + (error.response?.data?.message || error.message));\n      }\n    },\n    \n    // 查看笔录\n    viewRecords(caseItem) {\n      if (!caseItem || !caseItem.id) {\n        console.error('查看笔录失败: 无效的案件数据');\n        alert('查看笔录失败: 无效的案件数据');\n        return;\n      }\n      this.$router.push(`/case/${caseItem.id}/records`);\n    },\n    \n    // 删除案件\n    async deleteCase(caseItem) {\n      if (!caseItem || !caseItem.id) {\n        console.error('删除案件失败: 无效的案件数据');\n        alert('删除案件失败: 无效的案件数据');\n        return;\n      }\n      \n      const caseNumber = caseItem.caseNumber || '未知编号';\n      if (!confirm(`确定要删除案件 ${caseNumber} 吗？此操作将同时删除所有相关笔录且不可恢复！`)) {\n        return;\n      }\n      \n      this.loading = true;\n      \n      try {\n        const response = await this.$axios.delete(`/api/case/${caseItem.id}`);\n        \n        if (response.data && response.data.code === 200) {\n          // 从列表中移除该案件\n          this.cases = this.cases.filter(c => c.id !== caseItem.id);\n          // 更新统计数据\n          this.updateStats();\n          alert('案件删除成功');\n        } else {\n          const errorMsg = (response.data && response.data.message) || '删除案件失败';\n          console.error('删除案件失败:', errorMsg);\n          alert(errorMsg);\n        }\n      } catch (error) {\n        console.error('删除案件失败:', error);\n        alert('删除案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 导出案件方法已移除\n    toggleSelectAll(event) {\n      if (!event || event.target === undefined) {\n        console.error('切换全选失败: 无效的事件对象');\n        return;\n      }\n      \n      if (event.target.checked) {\n        // 确保cases是数组\n        if (Array.isArray(this.cases)) {\n          this.selectedCases = [...this.cases];\n        } else {\n          console.error('切换全选失败: cases不是数组');\n          this.selectedCases = [];\n        }\n      } else {\n        this.selectedCases = [];\n      }\n    },\n    \n    updateStats() {\n      // 确保cases是数组\n      if (!Array.isArray(this.cases)) {\n        console.error('更新统计数据失败: cases不是数组');\n        this.stats = {\n          totalCases: 0,\n          pendingCases: 0,\n          completedCases: 0,\n          todayCases: 0\n        };\n        return;\n      }\n      \n      // 计算统计数据\n      this.stats.totalCases = this.cases.length;\n      \n      // 根据状态关键词筛选待处理案件\n      this.stats.pendingCases = this.cases.filter(c => \n        c && c.status && (c.status.includes('待') || c.status.includes('处理'))\n      ).length;\n      \n      // 根据状态关键词筛选已完成案件\n      this.stats.completedCases = this.cases.filter(c => \n        c && c.status && (c.status.includes('完成') || c.status.includes('结案'))\n      ).length;\n      \n      // 计算今日新增案件数\n      try {\n        const today = new Date().toISOString().split('T')[0];\n        this.stats.todayCases = this.cases.filter(c => {\n          if (!c || !c.createdAt) return false;\n          try {\n            const createdDate = c.createdAt.split(' ')[0];\n            return createdDate === today;\n          } catch (error) {\n            console.error('处理案件创建日期失败:', error);\n            return false;\n          }\n        }).length;\n      } catch (error) {\n        console.error('计算今日新增案件数失败:', error);\n        this.stats.todayCases = 0;\n      }\n    },\n    \n    getCaseTypeClass(type) {\n      // 根据类型名称的哈希值分配不同的颜色类\n      const colors = ['bg-primary', 'bg-success', 'bg-danger', 'bg-warning', 'bg-info'];\n      if (!type) return 'bg-secondary';\n      \n      try {\n        // 简单的哈希函数，将类型名称转换为数字\n        const hash = type.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n        return colors[hash % colors.length];\n      } catch (error) {\n        console.error('获取案件类型样式失败:', error);\n        return 'bg-secondary';\n      }\n    },\n    \n    getCaseTypeText(type) {\n      // 直接返回类型值，因为后端已经返回了可读的类型名称\n      if (type === undefined || type === null) {\n        return '未知类型';\n      }\n      \n      try {\n        return String(type);\n      } catch (error) {\n        console.error('获取案件类型文本失败:', error);\n        return '未知类型';\n      }\n    },\n    \n    getStatusClass(status) {\n      // 根据状态的内容分配固定的颜色类\n      if (!status) return 'bg-secondary';\n      \n      try {\n        if (typeof status !== 'string') {\n          return 'bg-secondary';\n        }\n        \n        // 包含特定关键词的状态使用特定颜色\n        if (status.includes('完成') || status.includes('结案')) return 'bg-success';\n        if (status.includes('处理') || status.includes('待')) return 'bg-warning';\n        if (status.includes('调查') || status.includes('审理')) return 'bg-primary';\n        \n        // 默认颜色\n        return 'bg-info';\n      } catch (error) {\n        console.error('获取状态样式失败:', error);\n        return 'bg-secondary';\n      }\n    },\n    \n    getStatusText(status) {\n      // 直接返回状态值，因为后端已经返回了可读的状态名称\n      if (status === undefined || status === null) {\n        return '未知状态';\n      }\n      \n      try {\n        return String(status);\n      } catch (error) {\n        console.error('获取状态文本失败:', error);\n        return '未知状态';\n      }\n    },\n    \n    formatDate(dateString) {\n      if (!dateString) return '';\n      try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('zh-CN');\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return '';\n      }\n    },\n    \n    // 导入案件方法已移除\n  },\n  mounted() {\n    // 组件挂载后获取数据\n    this.fetchCases();\n    this.fetchOptions();\n  }\n}\n</script>\n\n<style scoped>\n.stats-card {\n  transition: all 0.3s ease;\n}\n\n.stats-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.stats-icon {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  margin: 0 auto;\n}\n\n.case-row {\n  transition: all 0.3s ease;\n}\n\n.case-row:hover {\n  background-color: rgba(13, 110, 253, 0.05);\n}\n\n.case-card {\n  transition: all 0.3s ease;\n  cursor: pointer;\n}\n\n.case-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.empty-state {\n  padding: 2rem;\n}\n\n.modal {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.btn {\n  transition: all 0.3s ease;\n}\n\n.btn:hover {\n  transform: translateY(-1px);\n}\n\n.page-link {\n  transition: all 0.3s ease;\n}\n\n.pagination .page-item.active .page-link {\n  background-color: #0d6efd;\n  border-color: #0d6efd;\n}\n\n.table th {\n  font-weight: 600;\n  border-bottom: 2px solid #dee2e6;\n  background-color: #f8f9fa;\n}\n\n.badge {\n  font-size: 0.75rem;\n}\n\n.input-group-text {\n  background-color: #f8f9fa;\n  border-color: #dee2e6;\n}\n\n.form-control:focus, .form-select:focus {\n  border-color: #0d6efd;\n  box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);\n}\n\n.card-header {\n  background-color: rgba(13, 110, 253, 0.05);\n}\n\n.border-end {\n  border-right: 1px solid #dee2e6 !important;\n}\n</style>"],"mappings":";;;;AAsZA;AACA;;AAEA;AACA;;AAEA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,OAAO;MACjBC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,KAAK;MACtBC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;QACVC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE;MACZ,CAAC;MACDC,QAAQ,EAAE;QACRC,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfN,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVM,QAAQ,EAAE,EAAE;QACZC,YAAY,EAAE;MAChB,CAAC;MACDC,KAAK,EAAE;QACLC,UAAU,EAAE,CAAC;QACbC,YAAY,EAAE,CAAC;QACfC,cAAc,EAAE,CAAC;QACjBC,UAAU,EAAE;MACd,CAAC;MACDC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,EAAE;MACbC,aAAa,EAAE,EAAE;MACjBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,IAAIC,QAAO,GAAI,IAAI,CAACP,KAAK;MAEzB,IAAI,IAAI,CAAChB,UAAU,CAACC,OAAO,EAAE;QAC3B,MAAMA,OAAM,GAAI,IAAI,CAACD,UAAU,CAACC,OAAO,CAACuB,WAAW,CAAC,CAAC;QACrDD,QAAO,GAAIA,QAAQ,CAACE,MAAM,CAACC,QAAO,IAC/BA,QAAQ,CAACnB,KAAI,IAAKmB,QAAQ,CAACnB,KAAK,CAACiB,WAAW,CAAC,CAAC,CAACG,QAAQ,CAAC1B,OAAO,CAAC,IAChEyB,QAAQ,CAACpB,UAAS,IAAKoB,QAAQ,CAACpB,UAAU,CAACkB,WAAW,CAAC,CAAC,CAACG,QAAQ,CAAC1B,OAAO,CAAC,IAC1EyB,QAAQ,CAAClB,WAAU,IAAKkB,QAAQ,CAAClB,WAAW,CAACgB,WAAW,CAAC,CAAC,CAACG,QAAQ,CAAC1B,OAAO,CAC9E,CAAC;MACH;MAEA,IAAI,IAAI,CAACD,UAAU,CAACE,QAAQ,EAAE;QAC5BqB,QAAO,GAAIA,QAAQ,CAACE,MAAM,CAACC,QAAO,IAAKA,QAAQ,CAACxB,QAAO,KAAM,IAAI,CAACF,UAAU,CAACE,QAAQ,CAAC;MACxF;MAEA,IAAI,IAAI,CAACF,UAAU,CAACG,MAAM,EAAE;QAC1BoB,QAAO,GAAIA,QAAQ,CAACE,MAAM,CAACC,QAAO,IAAKA,QAAQ,CAACvB,MAAK,KAAM,IAAI,CAACH,UAAU,CAACG,MAAM,CAAC;MACpF;;MAEA;;MAEA,IAAI,IAAI,CAACH,UAAU,CAACI,QAAQ,EAAE;QAC5BmB,QAAO,GAAIA,QAAQ,CAACE,MAAM,CAACC,QAAO,IAAKA,QAAQ,CAACE,SAAQ,IAAK,IAAI,CAAC5B,UAAU,CAACI,QAAQ,CAAC;MACxF;MAEA,OAAOmB,QAAQ;IACjB,CAAC;IACDM,cAAcA,CAAA,EAAG;MACf,MAAMC,KAAI,GAAI,CAAC,IAAI,CAAClC,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,QAAQ;MACpD,MAAMkC,GAAE,GAAID,KAAI,GAAI,IAAI,CAACjC,QAAQ;MACjC,OAAO,IAAI,CAACyB,aAAa,CAACU,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IAC7C,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,MAAMC,KAAI,GAAI,EAAE;MAChB,MAAMC,KAAI,GAAI,IAAI,CAACC,UAAU;MAC7B,MAAMC,OAAM,GAAI,IAAI,CAACzC,WAAW;MAEhC,IAAIuC,KAAI,IAAK,CAAC,EAAE;QACd,KAAK,IAAIG,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAKH,KAAK,EAAEG,CAAC,EAAE,EAAE;UAC/BJ,KAAK,CAACK,IAAI,CAACD,CAAC,CAAC;QACf;MACF,OAAO;QACL,IAAID,OAAM,IAAK,CAAC,EAAE;UAChB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAK,CAAC,EAAEA,CAAC,EAAE,EAAE;YAC3BJ,KAAK,CAACK,IAAI,CAACD,CAAC,CAAC;UACf;UACAJ,KAAK,CAACK,IAAI,CAAC,KAAK,CAAC;UACjBL,KAAK,CAACK,IAAI,CAACJ,KAAK,CAAC;QACnB,OAAO,IAAIE,OAAM,IAAKF,KAAI,GAAI,CAAC,EAAE;UAC/BD,KAAK,CAACK,IAAI,CAAC,CAAC,CAAC;UACbL,KAAK,CAACK,IAAI,CAAC,KAAK,CAAC;UACjB,KAAK,IAAID,CAAA,GAAIH,KAAI,GAAI,CAAC,EAAEG,CAAA,IAAKH,KAAK,EAAEG,CAAC,EAAE,EAAE;YACvCJ,KAAK,CAACK,IAAI,CAACD,CAAC,CAAC;UACf;QACF,OAAO;UACLJ,KAAK,CAACK,IAAI,CAAC,CAAC,CAAC;UACbL,KAAK,CAACK,IAAI,CAAC,KAAK,CAAC;UACjB,KAAK,IAAID,CAAA,GAAID,OAAM,GAAI,CAAC,EAAEC,CAAA,IAAKD,OAAM,GAAI,CAAC,EAAEC,CAAC,EAAE,EAAE;YAC/CJ,KAAK,CAACK,IAAI,CAACD,CAAC,CAAC;UACf;UACAJ,KAAK,CAACK,IAAI,CAAC,KAAK,CAAC;UACjBL,KAAK,CAACK,IAAI,CAACJ,KAAK,CAAC;QACnB;MACF;MAEA,OAAOD,KAAK;IACd,CAAC;IACDM,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACzC,aAAa,CAAC0C,MAAK,KAAM,IAAI,CAACZ,cAAc,CAACY,MAAK,IAAK,IAAI,CAACZ,cAAc,CAACY,MAAK,GAAI,CAAC;IACnG,CAAC;IACDL,UAAUA,CAAA,EAAG;MACX,OAAOM,IAAI,CAACC,IAAI,CAAC,IAAI,CAACrB,aAAa,CAACmB,MAAK,GAAI,IAAI,CAAC5C,QAAQ,CAAC;IAC7D;EACF,CAAC;EACC+C,OAAO,EAAE;IACT;IACA,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC1B,OAAM,GAAI,IAAI;MACnB,IAAI;QACF2B,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC;QACxDJ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,QAAQ,CAACtD,IAAI,CAAC;QACrC,IAAIsD,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAACyD,IAAG,KAAM,GAAG,EAAE;UAC/C,IAAI,CAACnC,KAAI,GAAIoC,KAAK,CAACC,OAAO,CAACL,QAAQ,CAACtD,IAAI,CAACA,IAAI,IAAIsD,QAAQ,CAACtD,IAAI,CAACA,IAAG,GAAI,EAAE;UACxE,IAAI,CAAC4D,WAAW,CAAC,CAAC;QACpB,OAAO;UACL,IAAI,CAAClC,KAAI,GAAK4B,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAAC6D,OAAO,IAAK,UAAU;UACnET,OAAO,CAAC1B,KAAK,CAAC,WAAW,EAAE,IAAI,CAACA,KAAK,CAAC;QACxC;MACF,EAAE,OAAOA,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,IAAI,CAACA,KAAI,GAAI,gBAAgB;MAC/B,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAED;IACA,MAAMqC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAM,CAACC,aAAa,EAAEC,cAAc,IAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CACxD,IAAI,CAACX,MAAM,CAACC,GAAG,CAAC,iBAAiB,CAAC,EAClC,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC,oBAAoB,EACrC,CAAC;QAEF,IAAIO,aAAa,CAAC/D,IAAG,IAAK+D,aAAa,CAAC/D,IAAI,CAACyD,IAAG,KAAM,GAAG,EAAE;UACzD,IAAI,CAAClC,SAAQ,GAAImC,KAAK,CAACC,OAAO,CAACI,aAAa,CAAC/D,IAAI,CAACA,IAAI,IAAI+D,aAAa,CAAC/D,IAAI,CAACA,IAAG,GAAI,EAAE;QACxF,OAAO;UACLoD,OAAO,CAAC1B,KAAK,CAAC,WAAW,EAAEqC,aAAa,CAAC/D,IAAI,CAAC;QAChD;QAEA,IAAIgE,cAAc,CAAChE,IAAG,IAAKgE,cAAc,CAAChE,IAAI,CAACyD,IAAG,KAAM,GAAG,EAAE;UAC3D,IAAI,CAACjC,aAAY,GAAIkC,KAAK,CAACC,OAAO,CAACK,cAAc,CAAChE,IAAI,CAACA,IAAI,IAAIgE,cAAc,CAAChE,IAAI,CAACA,IAAG,GAAI,EAAE;QAC9F,OAAO;UACLoD,OAAO,CAAC1B,KAAK,CAAC,WAAW,EAAEsC,cAAc,CAAChE,IAAI,CAAC;QACjD;MACF,EAAE,OAAO0B,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF,CAAC;IAED;IACA,MAAMyC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC1C,OAAM,GAAI,IAAI;MACnB,IAAI,CAACvB,WAAU,GAAI,CAAC;MAEpB,IAAI;QACF,MAAMkE,MAAK,GAAI;UACbC,IAAI,EAAE,IAAI,CAACnE,WAAW;UACtBoE,IAAI,EAAE,IAAI,CAACnE,QAAQ;UACnBoE,CAAC,EAAE,IAAI,CAACjE,UAAU,CAACC,OAAO;UAC1BC,QAAQ,EAAE,IAAI,CAACF,UAAU,CAACE,QAAQ;UAClCC,MAAM,EAAE,IAAI,CAACH,UAAU,CAACG,MAAM;UAC9B+D,aAAa,EAAE,IAAI,CAAClE,UAAU,CAACI;QACjC,CAAC;QAED0C,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEe,MAAM,CAAC;QAC5B,MAAMd,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,kBAAkB,EAAE;UAAEY;QAAO,CAAC,CAAC;QAEtE,IAAId,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAACyD,IAAG,KAAM,GAAG,EAAE;UAC/C,MAAMgB,MAAK,GAAInB,QAAQ,CAACtD,IAAI,CAACA,IAAG,IAAK,CAAC,CAAC;UACvCoD,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEoB,MAAM,CAAC;UAC5B,IAAI,CAACnD,KAAI,GAAIoC,KAAK,CAACC,OAAO,CAACc,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAM,GAAI,EAAE;UAChE;UACA,IAAI,CAACd,WAAW,CAAC,CAAC;UAClB;UACA,IAAIa,MAAM,CAACjC,KAAK,EAAE;YAChB,IAAI,CAACE,UAAS,GAAI+B,MAAM,CAACjC,KAAK;UAChC;QACF,OAAO;UACL,IAAI,CAACd,KAAI,GAAK4B,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAAC6D,OAAO,IAAK,QAAQ;UACjET,OAAO,CAAC1B,KAAK,CAAC,OAAO,EAAE,IAAI,CAACA,KAAK,CAAC;UAClCiD,KAAK,CAAC,QAAO,GAAI,IAAI,CAACjD,KAAK,CAAC;QAC9B;MACF,EAAE,OAAOA,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/B,IAAI,CAACA,KAAI,GAAI,cAAc;QAC3BiD,KAAK,CAAC,UAAS,IAAKjD,KAAK,CAAC4B,QAAQ,EAAEtD,IAAI,EAAE6D,OAAM,IAAKnC,KAAK,CAACmC,OAAO,CAAC,CAAC;MACtE,UAAU;QACR,IAAI,CAACpC,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAED;IACA,MAAMmD,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACjE,QAAQ,CAACE,KAAI,IAAK,CAAC,IAAI,CAACF,QAAQ,CAACH,QAAQ,EAAE;QACnDmE,KAAK,CAAC,SAAS,CAAC;QAChB;MACF;MAEA,IAAI,CAAClD,OAAM,GAAI,IAAI;MAEnB,IAAI;QACF;QACA,MAAMoD,QAAO,GAAI;UACfjE,UAAU,EAAE,IAAI,CAACD,QAAQ,CAACC,UAAS,IAAK,EAAE;UAC1CkE,QAAQ,EAAE,IAAI,CAACnE,QAAQ,CAACE,KAAI,IAAK,EAAE;UACnCC,WAAW,EAAE,IAAI,CAACH,QAAQ,CAACG,WAAU,IAAK,EAAE;UAC5CN,QAAQ,EAAE,IAAI,CAACG,QAAQ,CAACH,QAAO,IAAK,EAAE;UACtCC,MAAM,EAAE,IAAI,CAACE,QAAQ,CAACF,MAAK,IAAK,KAAK;UACrCM,QAAQ,EAAE,IAAI,CAACJ,QAAQ,CAACI,QAAO,IAAK,EAAE;UACtCgE,SAAS,EAAE,IAAI,CAACpE,QAAQ,CAACK,YAAW,GAAI,IAAI,CAACL,QAAQ,CAACK,YAAY,CAACgE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;QACrF,CAAC;QAED5B,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEwB,QAAQ,CAAC;QAChC,MAAMvB,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAAC0B,IAAI,CAAC,eAAe,EAAEJ,QAAQ,CAAC;QAElE,IAAIvB,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAACyD,IAAG,KAAM,GAAG,EAAE;UAC/CL,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,QAAQ,CAACtD,IAAI,CAAC;UACrC,IAAI,CAACI,eAAc,GAAI,KAAK;UAC5B;UACA,IAAI,CAACO,QAAO,GAAI;YACdC,UAAU,EAAE,EAAE;YACdC,KAAK,EAAE,EAAE;YACTC,WAAW,EAAE,EAAE;YACfN,QAAQ,EAAE,EAAE;YACZC,MAAM,EAAE,EAAE;YACVM,QAAQ,EAAE,EAAE;YACZC,YAAY,EAAE;UAChB,CAAC;;UAED;UACA,IAAI,CAACmC,UAAU,CAAC,CAAC;UACjBwB,KAAK,CAAC,QAAQ,CAAC;QACjB,OAAO;UACL,MAAMO,QAAO,GAAK5B,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAAC6D,OAAO,IAAK,QAAQ;UACrET,OAAO,CAAC1B,KAAK,CAAC,SAAS,EAAEwD,QAAQ,CAAC;UAClCP,KAAK,CAACO,QAAQ,CAAC;QACjB;MACF,EAAE,OAAOxD,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BiD,KAAK,CAAC,UAAS,IAAKjD,KAAK,CAAC4B,QAAQ,EAAEtD,IAAI,EAAE6D,OAAM,IAAKnC,KAAK,CAACmC,OAAO,CAAC,CAAC;MACtE,UAAU;QACR,IAAI,CAACpC,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACD0D,QAAQA,CAACnD,QAAQ,EAAE;MACjB;MACA,IAAI,CAACA,QAAO,IAAK,CAACA,QAAQ,CAACoD,EAAE,EAAE;QAC7BhC,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,CAAC;QAChCiD,KAAK,CAAC,iBAAiB,CAAC;QACxB;MACF;MACA,IAAI,CAACU,OAAO,CAACxC,IAAI,CAAC,gBAAgBb,QAAQ,CAACoD,EAAE,EAAE,CAAC;IAClD,CAAC;IAED;IACA,MAAME,QAAQA,CAACtD,QAAQ,EAAE;MACvB,IAAI,CAACA,QAAO,IAAK,CAACA,QAAQ,CAACoD,EAAE,EAAE;QAC7BhC,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,CAAC;QAChCiD,KAAK,CAAC,iBAAiB,CAAC;QACxB;MACF;MAEA,IAAI;QACF;QACA,MAAMrB,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,aAAaxB,QAAQ,CAACoD,EAAE,EAAE,CAAC;QAElE,IAAI9B,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAACyD,IAAG,KAAM,GAAG,EAAE;UAC/C,MAAM8B,UAAS,GAAIjC,QAAQ,CAACtD,IAAI,CAACA,IAAG,IAAK,CAAC,CAAC;;UAE3C;UACA,IAAI,CAACqF,OAAO,CAACxC,IAAI,CAAC;YAChB2C,IAAI,EAAE,cAAcxD,QAAQ,CAACoD,EAAE,EAAE;YACjCK,KAAK,EAAE;cAAEZ,QAAQ,EAAEa,IAAI,CAACC,SAAS,CAACJ,UAAU;YAAE;UAChD,CAAC,CAAC;QACJ,OAAO;UACL,MAAML,QAAO,GAAK5B,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAAC6D,OAAO,IAAK,UAAU;UACvET,OAAO,CAAC1B,KAAK,CAAC,WAAW,EAAEwD,QAAQ,CAAC;UACpCP,KAAK,CAACO,QAAQ,CAAC;QACjB;MACF,EAAE,OAAOxD,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCiD,KAAK,CAAC,YAAW,IAAKjD,KAAK,CAAC4B,QAAQ,EAAEtD,IAAI,EAAE6D,OAAM,IAAKnC,KAAK,CAACmC,OAAO,CAAC,CAAC;MACxE;IACF,CAAC;IAED;IACA+B,WAAWA,CAAC5D,QAAQ,EAAE;MACpB,IAAI,CAACA,QAAO,IAAK,CAACA,QAAQ,CAACoD,EAAE,EAAE;QAC7BhC,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,CAAC;QAChCiD,KAAK,CAAC,iBAAiB,CAAC;QACxB;MACF;MACA,IAAI,CAACU,OAAO,CAACxC,IAAI,CAAC,SAASb,QAAQ,CAACoD,EAAE,UAAU,CAAC;IACnD,CAAC;IAED;IACA,MAAMS,UAAUA,CAAC7D,QAAQ,EAAE;MACzB,IAAI,CAACA,QAAO,IAAK,CAACA,QAAQ,CAACoD,EAAE,EAAE;QAC7BhC,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,CAAC;QAChCiD,KAAK,CAAC,iBAAiB,CAAC;QACxB;MACF;MAEA,MAAM/D,UAAS,GAAIoB,QAAQ,CAACpB,UAAS,IAAK,MAAM;MAChD,IAAI,CAACkF,OAAO,CAAC,WAAWlF,UAAU,yBAAyB,CAAC,EAAE;QAC5D;MACF;MAEA,IAAI,CAACa,OAAM,GAAI,IAAI;MAEnB,IAAI;QACF,MAAM6B,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACwC,MAAM,CAAC,aAAa/D,QAAQ,CAACoD,EAAE,EAAE,CAAC;QAErE,IAAI9B,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAACyD,IAAG,KAAM,GAAG,EAAE;UAC/C;UACA,IAAI,CAACnC,KAAI,GAAI,IAAI,CAACA,KAAK,CAACS,MAAM,CAACiE,CAAA,IAAKA,CAAC,CAACZ,EAAC,KAAMpD,QAAQ,CAACoD,EAAE,CAAC;UACzD;UACA,IAAI,CAACxB,WAAW,CAAC,CAAC;UAClBe,KAAK,CAAC,QAAQ,CAAC;QACjB,OAAO;UACL,MAAMO,QAAO,GAAK5B,QAAQ,CAACtD,IAAG,IAAKsD,QAAQ,CAACtD,IAAI,CAAC6D,OAAO,IAAK,QAAQ;UACrET,OAAO,CAAC1B,KAAK,CAAC,SAAS,EAAEwD,QAAQ,CAAC;UAClCP,KAAK,CAACO,QAAQ,CAAC;QACjB;MACF,EAAE,OAAOxD,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BiD,KAAK,CAAC,UAAS,IAAKjD,KAAK,CAAC4B,QAAQ,EAAEtD,IAAI,EAAE6D,OAAM,IAAKnC,KAAK,CAACmC,OAAO,CAAC,CAAC;MACtE,UAAU;QACR,IAAI,CAACpC,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAED;IACAwE,eAAeA,CAACC,KAAK,EAAE;MACrB,IAAI,CAACA,KAAI,IAAKA,KAAK,CAACC,MAAK,KAAMC,SAAS,EAAE;QACxChD,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,CAAC;QAChC;MACF;MAEA,IAAIwE,KAAK,CAACC,MAAM,CAACE,OAAO,EAAE;QACxB;QACA,IAAI3C,KAAK,CAACC,OAAO,CAAC,IAAI,CAACrC,KAAK,CAAC,EAAE;UAC7B,IAAI,CAACjB,aAAY,GAAI,CAAC,GAAG,IAAI,CAACiB,KAAK,CAAC;QACtC,OAAO;UACL8B,OAAO,CAAC1B,KAAK,CAAC,mBAAmB,CAAC;UAClC,IAAI,CAACrB,aAAY,GAAI,EAAE;QACzB;MACF,OAAO;QACL,IAAI,CAACA,aAAY,GAAI,EAAE;MACzB;IACF,CAAC;IAEDuD,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,CAACF,KAAK,CAACC,OAAO,CAAC,IAAI,CAACrC,KAAK,CAAC,EAAE;QAC9B8B,OAAO,CAAC1B,KAAK,CAAC,qBAAqB,CAAC;QACpC,IAAI,CAACT,KAAI,GAAI;UACXC,UAAU,EAAE,CAAC;UACbC,YAAY,EAAE,CAAC;UACfC,cAAc,EAAE,CAAC;UACjBC,UAAU,EAAE;QACd,CAAC;QACD;MACF;;MAEA;MACA,IAAI,CAACJ,KAAK,CAACC,UAAS,GAAI,IAAI,CAACI,KAAK,CAACyB,MAAM;;MAEzC;MACA,IAAI,CAAC9B,KAAK,CAACE,YAAW,GAAI,IAAI,CAACG,KAAK,CAACS,MAAM,CAACiE,CAAA,IAC1CA,CAAA,IAAKA,CAAC,CAACvF,MAAK,KAAMuF,CAAC,CAACvF,MAAM,CAACwB,QAAQ,CAAC,GAAG,KAAK+D,CAAC,CAACvF,MAAM,CAACwB,QAAQ,CAAC,IAAI,CAAC,CACrE,CAAC,CAACc,MAAM;;MAER;MACA,IAAI,CAAC9B,KAAK,CAACG,cAAa,GAAI,IAAI,CAACE,KAAK,CAACS,MAAM,CAACiE,CAAA,IAC5CA,CAAA,IAAKA,CAAC,CAACvF,MAAK,KAAMuF,CAAC,CAACvF,MAAM,CAACwB,QAAQ,CAAC,IAAI,KAAK+D,CAAC,CAACvF,MAAM,CAACwB,QAAQ,CAAC,IAAI,CAAC,CACtE,CAAC,CAACc,MAAM;;MAER;MACA,IAAI;QACF,MAAMuD,KAAI,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACxB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC/D,KAAK,CAACI,UAAS,GAAI,IAAI,CAACC,KAAK,CAACS,MAAM,CAACiE,CAAA,IAAK;UAC7C,IAAI,CAACA,CAAA,IAAK,CAACA,CAAC,CAAC9D,SAAS,EAAE,OAAO,KAAK;UACpC,IAAI;YACF,MAAMuE,WAAU,GAAIT,CAAC,CAAC9D,SAAS,CAAC8C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7C,OAAOyB,WAAU,KAAMH,KAAK;UAC9B,EAAE,OAAO5E,KAAK,EAAE;YACd0B,OAAO,CAAC1B,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;YACnC,OAAO,KAAK;UACd;QACF,CAAC,CAAC,CAACqB,MAAM;MACX,EAAE,OAAOrB,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC,IAAI,CAACT,KAAK,CAACI,UAAS,GAAI,CAAC;MAC3B;IACF,CAAC;IAEDqF,gBAAgBA,CAACC,IAAI,EAAE;MACrB;MACA,MAAMC,MAAK,GAAI,CAAC,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC;MACjF,IAAI,CAACD,IAAI,EAAE,OAAO,cAAc;MAEhC,IAAI;QACF;QACA,MAAME,IAAG,GAAIF,IAAI,CAAC3B,KAAK,CAAC,EAAE,CAAC,CAAC8B,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9E,OAAOL,MAAM,CAACC,IAAG,GAAID,MAAM,CAAC7D,MAAM,CAAC;MACrC,EAAE,OAAOrB,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnC,OAAO,cAAc;MACvB;IACF,CAAC;IAEDwF,eAAeA,CAACP,IAAI,EAAE;MACpB;MACA,IAAIA,IAAG,KAAMP,SAAQ,IAAKO,IAAG,KAAM,IAAI,EAAE;QACvC,OAAO,MAAM;MACf;MAEA,IAAI;QACF,OAAOQ,MAAM,CAACR,IAAI,CAAC;MACrB,EAAE,OAAOjF,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnC,OAAO,MAAM;MACf;IACF,CAAC;IAED0F,cAAcA,CAAC3G,MAAM,EAAE;MACrB;MACA,IAAI,CAACA,MAAM,EAAE,OAAO,cAAc;MAElC,IAAI;QACF,IAAI,OAAOA,MAAK,KAAM,QAAQ,EAAE;UAC9B,OAAO,cAAc;QACvB;;QAEA;QACA,IAAIA,MAAM,CAACwB,QAAQ,CAAC,IAAI,KAAKxB,MAAM,CAACwB,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,YAAY;QACvE,IAAIxB,MAAM,CAACwB,QAAQ,CAAC,IAAI,KAAKxB,MAAM,CAACwB,QAAQ,CAAC,GAAG,CAAC,EAAE,OAAO,YAAY;QACtE,IAAIxB,MAAM,CAACwB,QAAQ,CAAC,IAAI,KAAKxB,MAAM,CAACwB,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,YAAY;;QAEvE;QACA,OAAO,SAAS;MAClB,EAAE,OAAOP,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,OAAO,cAAc;MACvB;IACF,CAAC;IAED2F,aAAaA,CAAC5G,MAAM,EAAE;MACpB;MACA,IAAIA,MAAK,KAAM2F,SAAQ,IAAK3F,MAAK,KAAM,IAAI,EAAE;QAC3C,OAAO,MAAM;MACf;MAEA,IAAI;QACF,OAAO0G,MAAM,CAAC1G,MAAM,CAAC;MACvB,EAAE,OAAOiB,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,OAAO,MAAM;MACf;IACF,CAAC;IAED4F,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;MAC1B,IAAI;QACF,MAAMC,IAAG,GAAI,IAAIjB,IAAI,CAACgB,UAAU,CAAC;QACjC,OAAOC,IAAI,CAACC,kBAAkB,CAAC,OAAO,CAAC;MACzC,EAAE,OAAO/F,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;QAChC,OAAO,EAAE;MACX;IACF;;IAEA;EACF,CAAC;EACDgG,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACvE,UAAU,CAAC,CAAC;IACjB,IAAI,CAACW,YAAY,CAAC,CAAC;EACrB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}