{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_case_management = _resolveComponent(\"case-management\", true);\n  return _openBlock(), _createBlock(_component_case_management);\n}","map":{"version":3,"names":["_createBlock","_component_case_management"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/views/CaseManagement.vue"],"sourcesContent":["<template>\n  <case-management />\n</template>\n\n<script>\nimport CaseManagement from '@/components/case/CaseManagement.vue'\n\nexport default {\n  name: 'CaseManagementView',\n  components: {\n    CaseManagement\n  },\n  setup() {\n    // 视图组件不需要复杂逻辑，所有功能已移至CaseManagement组件\n    return {}\n  }\n}\n</script>\n\n<style scoped>\n/* 视图容器样式 */\n.case-management-container {\n  width: 100%;\n  height: 100%;\n}\n</style>\n                <label for=\"caseName\" class=\"form-label\">案件名称 <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" id=\"caseName\" v-model=\"caseForm.caseName\" required>\n              </div>\n              \n              <div class=\"row mb-3\">\n                <div class=\"col-md-6\">\n                  <label for=\"caseType\" class=\"form-label\">案件类型 <span class=\"text-danger\">*</span></label>\n                  <select class=\"form-select\" id=\"caseType\" v-model=\"caseForm.caseType\" required>\n                    <option value=\"\">请选择案件类型</option>\n                    <option v-for=\"type in caseTypes\" :key=\"type\" :value=\"type\">{{ type }}</option>\n                  </select>\n                </div>\n                <div class=\"col-md-6\">\n                  <label for=\"status\" class=\"form-label\">案件状态 <span class=\"text-danger\">*</span></label>\n                  <select class=\"form-select\" id=\"status\" v-model=\"caseForm.status\" required>\n                    <option value=\"\">请选择案件状态</option>\n                    <option value=\"调查中\">调查中</option>\n                    <option value=\"审理中\">审理中</option>\n                    <option value=\"已结案\">已结案</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div class=\"mb-3\">\n                <label for=\"caseNumber\" class=\"form-label\">案件编号</label>\n                <input type=\"text\" class=\"form-control\" id=\"caseNumber\" v-model=\"caseForm.caseNumber\" placeholder=\"可选，留空将自动生成\">\n              </div>\n              \n              <div class=\"row mb-3\">\n                <div class=\"col-md-6\">\n                  <label for=\"startDate\" class=\"form-label\">开始日期</label>\n                  <input type=\"date\" class=\"form-control\" id=\"startDate\" v-model=\"caseForm.startDate\">\n                </div>\n                <div class=\"col-md-6\">\n                  <label for=\"endDate\" class=\"form-label\">结束日期</label>\n                  <input type=\"date\" class=\"form-control\" id=\"endDate\" v-model=\"caseForm.endDate\">\n                </div>\n              </div>\n              \n              <div class=\"mb-3\">\n                <label for=\"description\" class=\"form-label\">案件描述</label>\n                <textarea class=\"form-control\" id=\"description\" v-model=\"caseForm.description\" rows=\"5\" placeholder=\"请输入案件的详细描述...\"></textarea>\n              </div>\n              \n              <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                <button type=\"button\" class=\"btn btn-secondary me-md-2\" data-bs-dismiss=\"modal\">\n                  <i class=\"bi bi-x-circle me-2\"></i>取消\n                </button>\n                <button type=\"submit\" class=\"btn btn-success\" :disabled=\"submitting\">\n                  <i class=\"bi bi-check-circle me-2\"></i>\n                  <span v-if=\"submitting\">\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                    提交中...\n                  </span>\n                  <span v-else>创建案件</span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 编辑案件模态框 -->\n    <div class=\"modal fade\" id=\"editCaseModal\" tabindex=\"-1\" aria-labelledby=\"editCaseModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <h5 class=\"modal-title\" id=\"editCaseModalLabel\">\n              <i class=\"bi bi-pencil-square me-2\"></i>编辑案件\n            </h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"submitEditCase\">\n              <div class=\"mb-3\">\n                <label for=\"editCaseName\" class=\"form-label\">案件名称 <span class=\"text-danger\">*</span></label>\n                <input type=\"text\" class=\"form-control\" id=\"editCaseName\" v-model=\"caseForm.caseName\" required>\n              </div>\n              \n              <div class=\"row mb-3\">\n                <div class=\"col-md-6\">\n                  <label for=\"editCaseType\" class=\"form-label\">案件类型 <span class=\"text-danger\">*</span></label>\n                  <select class=\"form-select\" id=\"editCaseType\" v-model=\"caseForm.caseType\" required>\n                    <option value=\"\">请选择案件类型</option>\n                    <option v-for=\"type in caseTypes\" :key=\"type\" :value=\"type\">{{ type }}</option>\n                  </select>\n                </div>\n                <div class=\"col-md-6\">\n                  <label for=\"editStatus\" class=\"form-label\">案件状态 <span class=\"text-danger\">*</span></label>\n                  <select class=\"form-select\" id=\"editStatus\" v-model=\"caseForm.status\" required>\n                    <option value=\"\">请选择案件状态</option>\n                    <option value=\"调查中\">调查中</option>\n                    <option value=\"审理中\">审理中</option>\n                    <option value=\"已结案\">已结案</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div class=\"mb-3\">\n                <label for=\"editCaseNumber\" class=\"form-label\">案件编号</label>\n                <input type=\"text\" class=\"form-control\" id=\"editCaseNumber\" v-model=\"caseForm.caseNumber\" readonly>\n              </div>\n              \n              <div class=\"row mb-3\">\n                <div class=\"col-md-6\">\n                  <label for=\"editStartDate\" class=\"form-label\">开始日期</label>\n                  <input type=\"date\" class=\"form-control\" id=\"editStartDate\" v-model=\"caseForm.startDate\">\n                </div>\n                <div class=\"col-md-6\">\n                  <label for=\"editEndDate\" class=\"form-label\">结束日期</label>\n                  <input type=\"date\" class=\"form-control\" id=\"editEndDate\" v-model=\"caseForm.endDate\">\n                </div>\n              </div>\n              \n              <div class=\"mb-3\">\n                <label for=\"editDescription\" class=\"form-label\">案件描述</label>\n                <textarea class=\"form-control\" id=\"editDescription\" v-model=\"caseForm.description\" rows=\"5\" placeholder=\"请输入案件的详细描述...\"></textarea>\n              </div>\n              \n              <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                <button type=\"button\" class=\"btn btn-secondary me-md-2\" data-bs-dismiss=\"modal\">\n                  <i class=\"bi bi-x-circle me-2\"></i>取消\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"submitting\">\n                  <i class=\"bi bi-check-circle me-2\"></i>\n                  <span v-if=\"submitting\">\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                    提交中...\n                  </span>\n                  <span v-else>保存修改</span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 删除确认模态框 -->\n    <div class=\"modal fade\" id=\"deleteCaseModal\" tabindex=\"-1\" aria-labelledby=\"deleteCaseModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-danger text-white\">\n            <h5 class=\"modal-title\" id=\"deleteCaseModalLabel\">\n              <i class=\"bi bi-exclamation-triangle me-2\"></i>删除确认\n            </h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <p>您确定要删除案件 <strong>{{ selectedCase ? selectedCase.caseName : '' }}</strong> 吗？</p>\n            <p class=\"text-danger\"><i class=\"bi bi-exclamation-circle me-2\"></i>此操作将同时删除该案件下的所有笔录记录，且无法恢复！</p>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n              <i class=\"bi bi-x-circle me-2\"></i>取消\n            </button>\n            <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteCase\" :disabled=\"submitting\">\n              <i class=\"bi bi-trash me-2\"></i>\n              <span v-if=\"submitting\">\n                <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                删除中...\n              </span>\n              <span v-else>确认删除</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 案件详情模态框 -->\n    <div class=\"modal fade\" id=\"caseDetailModal\" tabindex=\"-1\" aria-labelledby=\"caseDetailModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-primary text-white\">\n            <h5 class=\"modal-title\" id=\"caseDetailModalLabel\">\n              <i class=\"bi bi-folder2-open me-2\"></i>案件详情\n            </h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div v-if=\"detailLoading\" class=\"text-center py-5\">\n              <div class=\"spinner-border text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">加载中...</span>\n              </div>\n              <p class=\"mt-3 text-muted\">正在加载案件详情...</p>\n            </div>\n            <div v-else>\n              <!-- 案件信息卡片 -->\n              <div class=\"card mb-4 shadow-sm\">\n                <div class=\"card-header bg-gradient d-flex justify-content-between align-items-center\">\n                  <h4 class=\"card-title mb-0 text-primary\">{{ caseDetail.case ? caseDetail.case.caseName : '' }}</h4>\n                  <div>\n                    <span class=\"badge bg-info me-2\">{{ caseDetail.case ? caseDetail.case.caseType : '' }}</span>\n                    <span class=\"badge\" :class=\"{\n                      'bg-success': caseDetail.case && (caseDetail.case.status === '已完成' || caseDetail.case.status === '已结案'),\n                      'bg-warning': caseDetail.case && caseDetail.case.status === '进行中',\n                      'bg-secondary': caseDetail.case && caseDetail.case.status !== '已完成' && caseDetail.case.status !== '已结案' && caseDetail.case.status !== '进行中'\n                    }\">{{ caseDetail.case ? caseDetail.case.status : '' }}</span>\n                  </div>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"d-flex mb-2\">\n                        <div class=\"icon-box me-2\"><i class=\"bi bi-hash text-primary\"></i></div>\n                        <div><strong>案件编号:</strong> {{ caseDetail.case ? caseDetail.case.caseNumber : '' }}</div>\n                      </div>\n                      <div class=\"d-flex mb-2\">\n                        <div class=\"icon-box me-2\"><i class=\"bi bi-folder text-warning\"></i></div>\n                        <div><strong>案件类型:</strong> {{ caseDetail.case ? caseDetail.case.caseType : '' }}</div>\n                      </div>\n                      <div class=\"d-flex mb-2\">\n                        <div class=\"icon-box me-2\"><i class=\"bi bi-calendar-date text-success\"></i></div>\n                        <div><strong>立案日期:</strong> {{ caseDetail.case ? formatDate(caseDetail.case.startDate) : '' }}</div>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"d-flex mb-2\">\n                        <div class=\"icon-box me-2\"><i class=\"bi bi-clock-history text-warning\"></i></div>\n                        <div><strong>创建时间:</strong> {{ caseDetail.case ? formatDateTime(caseDetail.case.createdAt) : '' }}</div>\n                      </div>\n                      <div class=\"d-flex mb-2\">\n                        <div class=\"icon-box me-2\"><i class=\"bi bi-card-text text-info\"></i></div>\n                        <div><strong>笔录数量:</strong> {{ caseDetail.records ? caseDetail.records.length : 0 }}</div>\n                      </div>\n                      <div v-if=\"caseDetail.case && caseDetail.case.endDate\" class=\"d-flex mb-2\">\n                        <div class=\"icon-box me-2\"><i class=\"bi bi-calendar-check text-danger\"></i></div>\n                        <div><strong>结案日期:</strong> {{ formatDate(caseDetail.case.endDate) }}</div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div v-if=\"caseDetail.case && caseDetail.case.description\" class=\"mt-3\">\n                    <strong>案件描述:</strong>\n                    <p class=\"text-muted\">{{ caseDetail.case.description }}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- 相关笔录列表 -->\n              <div class=\"card shadow-sm\">\n                <div class=\"card-header bg-gradient\">\n                  <h4 class=\"card-title mb-0\">相关笔录</h4>\n                </div>\n                <div class=\"card-body\">\n                  <div v-if=\"!caseDetail.records || caseDetail.records.length === 0\" class=\"text-center py-3\">\n                    <i class=\"bi bi-info-circle text-info\" style=\"font-size: 2rem;\"></i>\n                    <p class=\"mt-2 text-muted\">暂无相关笔录记录</p>\n                  </div>\n                  <div v-else class=\"table-responsive\">\n                    <table class=\"table table-hover\">\n                      <thead class=\"table-light\">\n                        <tr>\n                          <th>笔录名称</th>\n                          <th>询问时间</th>\n                          <th>询问地点</th>\n                          <th>询问员</th>\n                          <th>被询问人</th>\n                          <th>操作</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr v-for=\"record in caseDetail.records\" :key=\"record.id\">\n                          <td>{{ record.recordName }}</td>\n                          <td>{{ formatDateTime(record.inquiryTime) }}</td>\n                          <td>{{ record.inquiryAddress }}</td>\n                          <td>{{ record.assistantName }}</td>\n                          <td>{{ record.inquirerName }}</td>\n                          <td>\n                            <button class=\"btn btn-sm btn-outline-primary\">\n                              <i class=\"bi bi-eye me-1\"></i>查看\n                            </button>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n              <i class=\"bi bi-x-circle me-2\"></i>关闭\n            </button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"packageCaseRecords\" :disabled=\"!caseDetail.case || !caseDetail.records || caseDetail.records.length === 0\">\n              <i class=\"bi bi-archive me-2\"></i>打包笔录\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CaseManagement from '@/components/case/CaseManagement.vue'\n\nexport default {\n  name: 'CaseManagementView',\n  components: {\n    CaseManagement\n  },\n  setup() {\n    // 视图组件不需要复杂逻辑，所有功能已移至CaseManagement组件\n    \n    return {}\n  }\n}\n</script>\n\n<style scoped>\n/* 视图容器样式 */\n.case-management-container {\n  width: 100%;\n  height: 100%;\n}\n</style>\n      try {\n        // 先尝试销毁已存在的实例\n        const modalElements = [\n          'addCaseModal', 'editCaseModal', 'deleteCaseModal', 'caseDetailModal'\n        ]\n        \n        modalElements.forEach(id => {\n          const element = document.getElementById(id)\n          if (element) {\n            const instance = bootstrap.Modal.getInstance(element)\n            if (instance) {\n              instance.dispose()\n            }\n          }\n        })\n        \n        // 创建新实例\n        addCaseModalInstance = new Modal(document.getElementById('addCaseModal'), {\n          backdrop: 'static',  // 点击背景不会关闭模态框\n          keyboard: true       // 按ESC键可以关闭模态框\n        })\n        \n        editCaseModalInstance = new Modal(document.getElementById('editCaseModal'), {\n          backdrop: 'static',\n          keyboard: true\n        })\n        \n        deleteCaseModalInstance = new Modal(document.getElementById('deleteCaseModal'), {\n          backdrop: 'static',\n          keyboard: true\n        })\n        \n        caseDetailModalInstance = new Modal(document.getElementById('caseDetailModal'), {\n          backdrop: 'static',\n          keyboard: true\n        })\n        \n        console.log('模态框初始化成功')\n      } catch (error) {\n        console.error('初始化模态框失败:', error)\n      }\n    }\n    \n    // 加载案件列表\n    const loadCases = async () => {\n      loading.value = true\n      try {\n        const response = await getCaseList()\n        if (response.data.code === 200) {\n          cases.value = response.data.data || []\n          // 确保totalItems正确设置为案件数量\n          totalItems.value = cases.value.length\n        } else {\n          console.error('加载案件列表失败:', response.data.msg)\n        }\n      } catch (error) {\n        console.error('加载案件列表失败:', error)\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 搜索案件\n    const searchCasesData = async () => {\n      loading.value = true\n      try {\n        // 构建搜索参数\n        const params = { ...searchForm }\n        \n        // 确保使用当前的 pageSize 值，并且是数字类型\n        params.size = Number(pageSize.value)\n        params.page = Number(params.page)\n        \n        // 设置默认排序\n        params.sortField = 'createdAt'\n        params.sortOrder = 'desc'\n        delete params.sortBy\n        \n        console.log('搜索参数:', params, '参数类型:', {\n          size: typeof params.size,\n          page: typeof params.page,\n          size值: params.size\n        }) // 调试日志\n        \n        const response = await searchCases(params)\n        console.log('API响应:', response.data) // 调试日志\n        \n        if (response.data.code === 200) {\n          const result = response.data.data\n          cases.value = result.records || []\n          // 确保totalItems正确设置为案件数量\n          totalItems.value = result.total !== undefined ? result.total : cases.value.length\n          totalPages.value = result.pages || 0\n          currentPage.value = result.current || 1\n          \n          // 同步 pageSize 值\n          if (result.size) {\n            pageSize.value = Number(result.size)\n            console.log('从后端同步 pageSize:', pageSize.value, '类型:', typeof pageSize.value) // 调试日志\n          }\n          \n          console.log('分页结果:', {\n            totalItems: totalItems.value,\n            totalPages: totalPages.value,\n            currentPage: currentPage.value,\n            pageSize: pageSize.value,\n            recordsCount: cases.value.length,\n            resultSize: result.size\n          }) // 调试日志\n          \n          // 获取案件类型选项\n          if (result.extra) {\n            caseTypes.value = result.extra.caseTypes || []\n          }\n        } else {\n          console.error('搜索案件失败:', response.data.msg)\n        }\n      } catch (error) {\n        console.error('搜索案件失败:', error)\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 重置搜索表单\n    const resetSearch = () => {\n      Object.keys(searchForm).forEach(key => {\n        if (key !== 'page' && key !== 'size' && key !== 'sortBy') {\n          searchForm[key] = ''\n        }\n      })\n      searchForm.page = 1\n      searchCasesData()\n    }\n    \n    // 切换页码\n    const changePage = (page) => {\n      if (page < 1 || page > totalPages.value || page === currentPage.value) {\n        return\n      }\n      searchForm.page = page\n      searchCasesData()\n    }\n    \n    // 更改每页显示数量\n    const changePageSize = (size) => {\n      console.log('changePageSize 被调用，参数:', size, '类型:', typeof size) // 调试日志\n      \n      // 更新 pageSize 值\n      if (size) {\n        // 确保 size 是数字类型\n        const numSize = typeof size === 'string' ? parseInt(size) : size\n        pageSize.value = numSize\n        console.log('pageSize 更新为:', pageSize.value, '类型:', typeof pageSize.value) // 调试日志\n      }\n      \n      // 更新搜索表单中的每页数量\n      searchForm.size = Number(pageSize.value) // 确保是数字类型\n      console.log('searchForm.size 更新为:', searchForm.size, '类型:', typeof searchForm.size) // 调试日志\n      \n      // 重置到第一页\n      searchForm.page = 1\n      \n      // 重新加载数据\n      searchCasesData()\n    }\n    \n    // 重置案件表单\n    const resetCaseForm = () => {\n      // 重置表单\n      Object.keys(caseForm).forEach(key => {\n        caseForm[key] = key === 'id' ? null : ''\n      })\n    }\n    \n    // 显示添加案件模态框\n    const showAddCaseModal = () => {\n      resetCaseForm()\n      // 确保模态框实例存在\n      if (!addCaseModalInstance) {\n        console.log('初始化模态框实例')\n        initModals()\n      }\n      // 使用 setTimeout 确保 DOM 更新后再显示模态框\n      setTimeout(() => {\n        addCaseModalInstance.show()\n      }, 50)\n    }\n    \n    // 显示编辑案件模态框\n    const showEditCaseModal = (caseItem) => {\n      console.log('编辑案件:', caseItem.id) // 添加日志，帮助调试\n      \n      // 确保模态框实例存在\n      if (!editCaseModalInstance) {\n        console.log('初始化模态框实例')\n        initModals()\n      }\n      \n      // 填充表单\n      Object.keys(caseForm).forEach(key => {\n        if (key === 'id') {\n          caseForm.id = caseItem.id\n        } else if (key === 'startDate' || key === 'endDate') {\n          caseForm[key] = caseItem[key] ? caseItem[key].substring(0, 10) : ''\n        } else {\n          caseForm[key] = caseItem[key] || ''\n        }\n      })\n      \n      // 显示模态框\n      editCaseModalInstance.show()\n    }\n    \n    // 确认删除案件\n    const confirmDeleteCase = (caseItem) => {\n      console.log('确认删除案件:', caseItem.id) // 添加日志，帮助调试\n      \n      // 确保模态框实例存在\n      if (!deleteCaseModalInstance) {\n        console.log('初始化模态框实例')\n        initModals()\n      }\n      \n      selectedCase.value = caseItem\n      \n      // 显示模态框\n      deleteCaseModalInstance.show()\n    }\n    \n    // 查看案件详情\n    const viewCaseDetail = async (caseId) => {\n      console.log('查看案件详情:', caseId) // 添加日志，帮助调试\n      detailLoading.value = true\n      caseDetail.value = { case: null, records: [] }\n      \n      // 确保模态框实例存在\n      if (!caseDetailModalInstance) {\n        console.log('初始化模态框实例')\n        initModals()\n      }\n      \n      // 显示模态框\n      caseDetailModalInstance.show()\n      \n      try {\n        const response = await getCaseDetail(caseId)\n        if (response.data.code === 200) {\n          caseDetail.value = response.data.data || { case: null, records: [] }\n          console.log('获取案件详情成功:', caseDetail.value)\n        } else {\n          console.error('获取案件详情失败:', response.data.msg)\n        }\n      } catch (error) {\n        console.error('获取案件详情失败:', error)\n      } finally {\n        detailLoading.value = false\n      }\n    }\n    \n    // 提交添加案件\n    const submitAddCase = async () => {\n      // 表单验证\n      if (!caseForm.caseName || !caseForm.caseType || !caseForm.status) {\n        alert('请填写必填字段：案件名称、案件类型和案件状态')\n        return\n      }\n      \n      submitting.value = true\n      try {\n        const response = await addCase(caseForm)\n        if (response.data.code === 200) {\n          console.log('案件添加成功，准备关闭模态框')\n          // 先重置表单\n          resetCaseForm()\n          // 确保模态框实例存在\n          if (!addCaseModalInstance) {\n            console.log('模态框实例不存在，重新初始化')\n            initModals()\n          }\n          // 使用 setTimeout 确保 DOM 更新后再关闭模态框\n          setTimeout(() => {\n            // 尝试使用 Bootstrap 原生方法关闭模态框\n            const modalElement = document.getElementById('addCaseModal')\n            if (modalElement) {\n              const bsModal = bootstrap.Modal.getInstance(modalElement)\n              if (bsModal) {\n                bsModal.hide()\n              } else {\n                // 如果获取不到实例，尝试使用我们的实例\n                addCaseModalInstance.hide()\n              }\n            }\n            // 移除模态框背景\n            document.querySelector('.modal-backdrop')?.remove()\n            // 移除 body 上的 modal-open 类\n            document.body.classList.remove('modal-open')\n            document.body.style.overflow = ''\n            document.body.style.paddingRight = ''\n            \n            // 刷新列表\n            searchCasesData()\n            alert('案件添加成功')\n          }, 100)\n        } else {\n          alert(`案件添加失败: ${response.data.msg}`)\n        }\n      } catch (error) {\n        console.error('添加案件失败:', error)\n        alert(`添加案件失败: ${error.message}`)\n      } finally {\n        submitting.value = false\n      }\n    }\n    \n    // 提交编辑案件\n    const submitEditCase = async () => {\n      // 表单验证\n      if (!caseForm.caseName || !caseForm.caseType || !caseForm.status) {\n        alert('请填写必填字段：案件名称、案件类型和案件状态')\n        return\n      }\n      \n      submitting.value = true\n      try {\n        const response = await updateCase(caseForm.id, caseForm)\n        if (response.data.code === 200) {\n          alert('案件更新成功')\n          editCaseModalInstance.hide()\n          searchCasesData() // 刷新列表\n        } else {\n          alert(`案件更新失败: ${response.data.msg}`)\n        }\n      } catch (error) {\n        console.error('更新案件失败:', error)\n        alert(`更新案件失败: ${error.message}`)\n      } finally {\n        submitting.value = false\n      }\n    }\n    \n    // 删除案件\n    const deleteCase = async () => {\n      if (!selectedCase.value || !selectedCase.value.id) {\n        return\n      }\n      \n      submitting.value = true\n      try {\n        const response = await deleteCaseApi(selectedCase.value.id)\n        if (response.data.code === 200) {\n          alert('案件删除成功')\n          deleteCaseModalInstance.hide()\n          searchCasesData() // 刷新列表\n        } else {\n          alert(`案件删除失败: ${response.data.msg}`)\n        }\n      } catch (error) {\n        console.error('删除案件失败:', error)\n        alert(`删除案件失败: ${error.message}`)\n      } finally {\n        submitting.value = false\n      }\n    }\n    \n    // 打包案件笔录\n    const packageCaseRecords = async () => {\n      if (!caseDetail.value.case || !caseDetail.value.case.id) {\n        return\n      }\n      \n      try {\n        const response = await packageCase(caseDetail.value.case.id)\n        // 处理文件下载\n        const blob = new Blob([response.data], { type: response.headers['content-type'] })\n        const link = document.createElement('a')\n        link.href = URL.createObjectURL(blob)\n        \n        // 从响应头获取文件名，如果没有则使用默认名称\n        const contentDisposition = response.headers['content-disposition']\n        let filename = `案件_${caseDetail.value.case.caseNumber}.zip`\n        \n        if (contentDisposition) {\n          const filenameMatch = contentDisposition.match(/filename=\"(.+)\"/);\n          if (filenameMatch && filenameMatch[1]) {\n            filename = decodeURIComponent(filenameMatch[1])\n          }\n        }\n        \n        link.download = filename\n        link.click()\n        URL.revokeObjectURL(link.href)\n      } catch (error) {\n        console.error('打包案件笔录失败:', error)\n        alert('打包案件笔录失败，请稍后重试')\n      }\n    }\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toISOString().split('T')[0]\n    }\n    \n    // 格式化日期时间\n    const formatDateTime = (dateTimeString) => {\n      if (!dateTimeString) return ''\n      const date = new Date(dateTimeString)\n      return `${date.toISOString().split('T')[0]} ${date.toTimeString().split(' ')[0].substring(0, 5)}`\n    }\n    \n    // 截断文本\n    const truncateText = (text, maxLength) => {\n      if (!text) return ''\n      return text.length > maxLength ? text.substring(0, maxLength) + '...' : text\n    }\n    \n    // 加载统计数据\n    const loadStatistics = async () => {\n      statisticsLoading.value = true\n      try {\n        const response = await getCaseStatistics()\n        if (response.data.code === 200) {\n          statistics.value = response.data.data || {\n            totalCases: 0,\n            criminalCases: 0,\n            civilCases: 0,\n            administrativeCases: 0,\n            investigatingCases: 0,\n            inTrialCases: 0,\n            closedCases: 0\n          }\n        } else {\n          console.error('加载统计数据失败:', response.data.msg)\n        }\n      } catch (error) {\n        console.error('加载统计数据失败:', error)\n      } finally {\n        statisticsLoading.value = false\n      }\n    }\n    \n    // 初始化下拉菜单\n    const initDropdowns = () => {\n      // 使用setTimeout确保DOM已经更新\n      setTimeout(() => {\n        console.log('初始化下拉菜单')\n        // 确保所有下拉菜单都处于关闭状态\n        document.querySelectorAll('.dropdown-menu.show').forEach(menu => {\n          menu.classList.remove('show')\n        })\n      }, 100)\n    }\n    \n    // 组件挂载时执行\n    onMounted(() => {\n      initModals()\n      searchCasesData()\n      loadStatistics()\n      \n      // 初始化下拉菜单\n      initDropdowns()\n      \n      // 监听视图模式变化，重新初始化下拉菜单\n      watch(viewMode, () => {\n        initDropdowns()\n      })\n      \n      // 监听案件数据变化，重新初始化下拉菜单\n      watch(cases, () => {\n        initDropdowns()\n      })\n      \n      // 监听 pageSize 变化，更新 searchForm.size\n      watch(pageSize, (newSize) => {\n        searchForm.size = newSize\n      })\n      \n      // 添加全局点击事件监听器，关闭打开的下拉菜单\n      document.addEventListener('click', function(e) {\n        // 如果点击的不是下拉菜单或其子元素，也不是下拉菜单的触发按钮\n        if (!e.target.closest('.dropdown-menu') && !e.target.closest('.dropdown-toggle')) {\n          document.querySelectorAll('.dropdown-menu.show').forEach(openMenu => {\n            openMenu.classList.remove('show')\n            // 重置菜单样式\n            openMenu.style.display = 'none'\n            openMenu.style.visibility = 'hidden'\n            openMenu.style.opacity = '0'\n          })\n        }\n      })\n    })\n    \n    // 切换下拉菜单显示状态\n    const toggleDropdown = (event) => {\n      // 阻止事件冒泡，防止全局点击事件处理器立即关闭菜单\n      event.stopPropagation()\n      \n      console.log('切换下拉菜单', event.target)\n      const dropdownToggle = event.target.closest('.dropdown-toggle')\n      if (!dropdownToggle) return\n      \n      const dropdownMenu = dropdownToggle.nextElementSibling\n      if (!dropdownMenu || !dropdownMenu.classList.contains('dropdown-menu')) return\n      \n      // 关闭所有其他打开的下拉菜单\n      document.querySelectorAll('.dropdown-menu.show').forEach(menu => {\n        if (menu !== dropdownMenu) {\n          menu.classList.remove('show')\n          // 重置其他菜单的样式\n          menu.style.display = 'none'\n          menu.style.visibility = 'hidden'\n          menu.style.opacity = '0'\n        }\n      })\n      \n      // 切换当前下拉菜单\n      const isCurrentlyShown = dropdownMenu.classList.contains('show')\n      dropdownMenu.classList.toggle('show')\n      \n      if (!isCurrentlyShown) { // 如果之前是隐藏的，现在要显示\n        // 设置静态定位，防止被Bootstrap的Popper.js重新定位\n        dropdownMenu.setAttribute('data-bs-popper', 'static')\n        // 确保下拉菜单在卡片内可见\n        dropdownMenu.style.position = 'absolute'\n        dropdownMenu.style.zIndex = '1000'\n        \n        // 获取按钮的位置和尺寸\n        const buttonRect = dropdownToggle.getBoundingClientRect()\n        const menuWidth = Math.max(120, buttonRect.width) // 确保菜单至少与按钮一样宽\n        \n        // 判断是否为向上展开的菜单\n        if (dropdownMenu.classList.contains('dropup-menu')) {\n          // 向上展开菜单的样式\n          dropdownMenu.style.transform = 'translate3d(0px, -100%, 0px)'\n          dropdownMenu.style.bottom = '38px'\n          dropdownMenu.style.top = 'auto'\n        } else {\n          // 向下展开菜单的样式\n          dropdownMenu.style.transform = 'translate3d(0px, 38px, 0px)'\n          dropdownMenu.style.top = '0'\n          dropdownMenu.style.bottom = 'auto'\n        }\n        \n        // 设置菜单位置和样式\n        dropdownMenu.style.left = 'auto'\n        dropdownMenu.style.right = '0'\n        dropdownMenu.style.willChange = 'transform'\n        dropdownMenu.style.width = `${menuWidth}px`\n        dropdownMenu.style.minWidth = '120px'\n        dropdownMenu.style.maxWidth = 'none'\n        dropdownMenu.style.display = 'block'\n        dropdownMenu.style.visibility = 'visible'\n        dropdownMenu.style.opacity = '1'\n        dropdownMenu.style.overflow = 'visible'\n        \n        // 确保下拉菜单项可见\n        dropdownMenu.querySelectorAll('.dropdown-item').forEach(item => {\n          item.style.whiteSpace = 'nowrap'\n          item.style.width = '100%'\n          item.style.display = 'block'\n          item.style.overflow = 'visible'\n          item.style.textOverflow = 'unset'\n        })\n      } else { // 如果之前是显示的，现在要隐藏\n        // 隐藏菜单\n        dropdownMenu.style.display = 'none'\n        dropdownMenu.style.visibility = 'hidden'\n        dropdownMenu.style.opacity = '0'\n      }\n    }\n    \n    return {\n      loading,\n      detailLoading,\n      statisticsLoading,\n      submitting,\n      showAdvancedSearch,\n      viewMode,\n      cases,\n      caseTypes,\n      selectedCase,\n      caseDetail,\n      statistics,\n      currentPage,\n      pageSize,\n      totalItems,\n      totalPages,\n      searchForm,\n      caseForm,\n      displayedPages,\n      loadCases,\n      searchCases: searchCasesData,\n      resetSearch,\n      resetCaseForm,\n      changePage,\n      changePageSize,\n      showAddCaseModal,\n      showEditCaseModal,\n      confirmDeleteCase,\n      viewCaseDetail,\n      submitAddCase,\n      submitEditCase,\n      deleteCase,\n      packageCaseRecords,\n      toggleDropdown,\n      loadStatistics,\n      formatDate,\n      formatDateTime,\n      truncateText\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 卡片悬停效果 */\n.hover-card {\n  transition: all 0.3s ease;\n  border: none;\n  overflow: hidden;\n  position: relative;\n  z-index: 1; /* 确保卡片有正确的层叠顺序 */\n}\n\n.hover-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15) !important;\n}\n\n.hover-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 4px;\n  height: 100%;\n  background: linear-gradient(to bottom, #4a6cf7, #2651f0);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  z-index: -1; /* 确保伪元素不会干扰点击事件 */\n  pointer-events: none; /* 确保伪元素不会捕获点击事件 */\n}\n\n.hover-card:hover::before {\n  opacity: 1;\n}\n\n/* 案件图标样式 */\n.case-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n}\n\n/* 列表视图样式 */\n.table-responsive {\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  background-color: #fff;\n}\n\n.table-hover tbody tr {\n  transition: all 0.2s ease;\n}\n\n.table-hover tbody tr:hover {\n  background-color: rgba(74, 108, 247, 0.05);\n}\n\n/* 视图切换按钮样式 */\n.btn-group .btn-sm {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.875rem;\n}\n\n/* 统计图标样式 */\n.stat-icon {\n  opacity: 0.8;\n  transition: all 0.3s ease;\n  filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));\n}\n\n.hover-card:hover .stat-icon {\n  transform: scale(1.1);\n  opacity: 1;\n}\n\n/* 统计卡片样式 */\n.stats-card {\n  transition: all 0.3s ease;\n  border-radius: 12px;\n  overflow: hidden;\n  margin-bottom: 1rem;\n}\n\n.stats-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1) !important;\n}\n\n.stats-icon {\n  width: 48px;\n  height: 48px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n  font-size: 1.5rem;\n}\n\n.stats-section-icon {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  font-size: 1rem;\n}\n\n.stats-section-title {\n  display: flex;\n  align-items: center;\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #6c757d;\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n  border-left: 3px solid #4a6cf7;\n}\n\n/* 图标盒子样式 */\n.icon-box {\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: rgba(0, 123, 255, 0.1);\n  color: #0d6efd;\n  transition: all 0.3s ease;\n}\n\n/* 高级搜索面板动画 */\n.advanced-search-panel {\n  animation: fadeIn 0.4s ease-in-out;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  padding-top: 1.5rem;\n  margin-top: 1rem;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(-15px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n/* 页面标题样式增强 */\n.display-6 {\n  position: relative;\n  padding-bottom: 0.5rem;\n}\n\n.display-6::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 60px;\n  height: 3px;\n  background: linear-gradient(to right, #4a6cf7, #2651f0);\n  border-radius: 3px;\n}\n\n/* 卡片样式增强 */\n.card {\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.card-body {\n  padding: 1.5rem;\n}\n\n/* 按钮样式增强 */\n.btn {\n  border-radius: 6px;\n  font-weight: 500;\n  transition: all 0.3s ease;\n}\n\n.btn-primary {\n  background: linear-gradient(to right, #4a6cf7, #2651f0);\n  border: none;\n  box-shadow: 0 4px 10px rgba(74, 108, 247, 0.3);\n}\n\n.btn-primary:hover {\n  background: linear-gradient(to right, #2651f0, #1a3fd9);\n  transform: translateY(-2px);\n  box-shadow: 0 6px 15px rgba(74, 108, 247, 0.4);\n}\n\n.btn-success {\n  background: linear-gradient(to right, #28a745, #20913a);\n  border: none;\n  box-shadow: 0 4px 10px rgba(40, 167, 69, 0.3);\n}\n\n.btn-success:hover {\n  background: linear-gradient(to right, #20913a, #187d2e);\n  transform: translateY(-2px);\n  box-shadow: 0 6px 15px rgba(40, 167, 69, 0.4);\n}\n\n/* 分页控件美化 */\n.pagination .page-link {\n  border-radius: 4px;\n  margin: 0 2px;\n  color: #4a6cf7;\n  border: 1px solid rgba(74, 108, 247, 0.2);\n}\n\n.pagination .page-item.active .page-link {\n  background: linear-gradient(to right, #4a6cf7, #2651f0);\n  border-color: #2651f0;\n}\n\n/* 表单控件美化 */\n.form-control, .form-select {\n  border-radius: 6px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 0.6rem 1rem;\n  transition: all 0.3s ease;\n}\n\n.form-control:focus, .form-select:focus {\n  border-color: #4a6cf7;\n  box-shadow: 0 0 0 0.25rem rgba(74, 108, 247, 0.25);\n}\n\n/* 加载动画美化 */\n.spinner-border {\n  color: #4a6cf7;\n}\n\n/* 案件列表卡片美化 */\n.card.shadow-sm {\n  transition: all 0.3s ease;\n}\n\n.card.shadow-sm:hover {\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1) !important;\n}\n\n/* 统计卡片样式 */\n.stats-card {\n  transition: all 0.3s ease;\n  border-radius: 12px;\n}\n\n.stats-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1) !important;\n}\n\n.stats-icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  font-size: 24px;\n}\n\n.stats-scroll {\n  scrollbar-width: thin;\n  scrollbar-color: rgba(0, 0, 0, 0.2) transparent;\n}\n\n.stats-scroll::-webkit-scrollbar {\n  height: 6px;\n}\n\n.stats-scroll::-webkit-scrollbar-thumb {\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n.stats-scroll::-webkit-scrollbar-track {\n  background-color: transparent;\n}\n\n.stats-card-wrapper {\n  min-width: 240px;\n  margin-right: 15px;\n  flex-shrink: 0;\n}\n\n.stats-card-wrapper:last-child {\n  margin-right: 0;\n}\n\n/* 下拉菜单样式优化 */\n.dropdown-menu.show {\n  display: block !important;\n  visibility: visible !important;\n  opacity: 1 !important;\n  z-index: 1000 !important;\n  position: absolute !important;\n  width: auto !important;\n  min-width: 120px !important;\n  max-width: none !important;\n  right: 0 !important;\n  left: auto !important;\n}\n\n.card .dropdown-menu {\n  transform: translate3d(0px, 38px, 0px) !important;\n  top: 0 !important;\n  left: auto !important;\n  right: 0 !important;\n  margin-top: 0 !important;\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  overflow: visible !important;\n}\n\n.dropdown-item {\n  white-space: nowrap !important;\n  overflow: visible !important;\n  text-overflow: unset !important;\n  padding: 0.5rem 1rem !important;\n  width: 100% !important;\n  display: block !important;\n}\n\n/* 向上展开的下拉菜单样式 */\n.dropup-menu.show {\n  display: block !important;\n  visibility: visible !important;\n  opacity: 1 !important;\n  z-index: 1000 !important;\n  position: absolute !important;\n  transform: translate3d(0px, -100%, 0px) !important;\n  bottom: 38px !important;\n  top: auto !important;\n  right: 0 !important;\n  left: auto !important;\n  width: auto !important;\n  min-width: 120px !important;\n  max-width: none !important;\n  box-shadow: 0 -0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\n  border-radius: 0.25rem !important;\n  border: 1px solid rgba(0, 0, 0, 0.15) !important;\n  background-color: #fff !important;\n  padding: 0.5rem 0 !important;\n}\n</style>"],"mappings":";;;uBACEA,YAAA,CAAmBC,0BAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}