{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Login from '../views/Login.vue';\nimport TaskList from '../views/TaskList.vue';\nimport Search from '../views/RecordSearch.vue';\nimport CaseManagement from '../views/CaseManagement.vue';\nimport TemplateManagement from '../views/TemplateManagement.vue';\nimport PackageManagement from '../views/PackageManagement.vue';\nimport AdminManagement from '../views/AdminManagement.vue';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/task',\n  name: 'TaskList',\n  component: TaskList\n}, {\n  path: '/search',\n  name: 'Search',\n  component: Search\n}, {\n  path: '/cases',\n  name: 'CaseManagement',\n  component: CaseManagement\n}, {\n  path: '/templates',\n  name: 'TemplateManagement',\n  component: TemplateManagement\n}, {\n  path: '/package',\n  name: 'PackageManagement',\n  component: PackageManagement\n}, {\n  path: '/admin',\n  name: 'AdminManagement',\n  component: AdminManagement\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// 全局路由守卫\nrouter.beforeEach((to, from, next) => {\n  // 获取本地存储的用户信息\n  const userInfo = localStorage.getItem('userInfo');\n\n  // 如果访问的是登录页面，直接放行\n  if (to.path === '/login') {\n    next();\n    return;\n  }\n\n  // 如果用户未登录且访问的不是登录页面，则重定向到登录页面\n  if (!userInfo && to.path !== '/login') {\n    console.log('用户未登录，重定向到登录页面');\n    next('/login');\n    return;\n  }\n\n  // 用户已登录，放行\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Login","TaskList","Search","CaseManagement","TemplateManagement","PackageManagement","AdminManagement","routes","path","name","component","router","history","process","env","BASE_URL","beforeEach","to","from","next","userInfo","localStorage","getItem","console","log"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport Home from '../views/Home.vue'\nimport Login from '../views/Login.vue'\nimport TaskList from '../views/TaskList.vue'\nimport Search from '../views/RecordSearch.vue'\nimport CaseManagement from '../views/CaseManagement.vue'\nimport TemplateManagement from '../views/TemplateManagement.vue'\nimport PackageManagement from '../views/PackageManagement.vue'\nimport AdminManagement from '../views/AdminManagement.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login\n  },\n  {\n    path: '/task',\n    name: 'TaskList',\n    component: TaskList\n  },\n  {\n    path: '/search',\n    name: 'Search',\n    component: Search\n  },\n  {\n    path: '/cases',\n    name: 'CaseManagement',\n    component: CaseManagement\n  },\n  {\n    path: '/templates',\n    name: 'TemplateManagement',\n    component: TemplateManagement\n  },\n  {\n    path: '/package',\n    name: 'PackageManagement',\n    component: PackageManagement\n  },\n  {\n    path: '/admin',\n    name: 'AdminManagement',\n    component: AdminManagement\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// 全局路由守卫\nrouter.beforeEach((to, from, next) => {\n  // 获取本地存储的用户信息\n  const userInfo = localStorage.getItem('userInfo')\n  \n  // 如果访问的是登录页面，直接放行\n  if (to.path === '/login') {\n    next()\n    return\n  }\n  \n  // 如果用户未登录且访问的不是登录页面，则重定向到登录页面\n  if (!userInfo && to.path !== '/login') {\n    console.log('用户未登录，重定向到登录页面')\n    next('/login')\n    return\n  }\n  \n  // 用户已登录，放行\n  next()\n})\n\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,eAAe,MAAM,8BAA8B;AAE1D,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEX;AACb,CAAC,EACD;EACES,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEV;AACb,CAAC,EACD;EACEQ,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,oBAAoB;EAC1BC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,mBAAmB;EACzBC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,MAAMK,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAACe,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CR;AACF,CAAC,CAAC;;AAEF;AACAI,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;;EAEjD;EACA,IAAIL,EAAE,CAACT,IAAI,KAAK,QAAQ,EAAE;IACxBW,IAAI,CAAC,CAAC;IACN;EACF;;EAEA;EACA,IAAI,CAACC,QAAQ,IAAIH,EAAE,CAACT,IAAI,KAAK,QAAQ,EAAE;IACrCe,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BL,IAAI,CAAC,QAAQ,CAAC;IACd;EACF;;EAEA;EACAA,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}