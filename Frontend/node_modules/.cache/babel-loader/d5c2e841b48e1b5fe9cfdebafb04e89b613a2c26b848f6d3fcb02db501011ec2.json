{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\n\n// 配置API基础URL\naxios.defaults.baseURL = process.env.VUE_APP_API_URL || '';\nexport default {\n  name: 'CaseManagement',\n  data() {\n    return {\n      viewMode: 'table',\n      currentPage: 1,\n      pageSize: 10,\n      showCreateModal: false,\n      showImportModal: false,\n      selectedCases: [],\n      searchForm: {\n        keyword: '',\n        caseType: '',\n        status: '',\n        officer: '',\n        dateFrom: ''\n      },\n      caseForm: {\n        caseNumber: '',\n        title: '',\n        description: '',\n        caseType: '',\n        status: 'pending',\n        officer: '',\n        location: '',\n        incidentTime: ''\n      },\n      stats: {\n        totalCases: 0,\n        pendingCases: 0,\n        completedCases: 0,\n        todayCases: 0\n      },\n      cases: [],\n      caseTypes: [],\n      statusChoices: [],\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    filteredCases() {\n      let filtered = this.cases;\n      if (this.searchForm.keyword) {\n        const keyword = this.searchForm.keyword.toLowerCase();\n        filtered = filtered.filter(caseItem => caseItem.title.toLowerCase().includes(keyword) || caseItem.caseNumber.toLowerCase().includes(keyword) || caseItem.description.toLowerCase().includes(keyword));\n      }\n      if (this.searchForm.caseType) {\n        filtered = filtered.filter(caseItem => caseItem.caseType === this.searchForm.caseType);\n      }\n      if (this.searchForm.status) {\n        filtered = filtered.filter(caseItem => caseItem.status === this.searchForm.status);\n      }\n      if (this.searchForm.officer) {\n        filtered = filtered.filter(caseItem => caseItem.officer === this.searchForm.officer);\n      }\n      if (this.searchForm.dateFrom) {\n        filtered = filtered.filter(caseItem => caseItem.createdAt >= this.searchForm.dateFrom);\n      }\n      return filtered;\n    },\n    totalPages() {\n      return Math.ceil(this.filteredCases.length / this.pageSize);\n    },\n    paginatedCases() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.filteredCases.slice(start, end);\n    },\n    visiblePages() {\n      const pages = [];\n      const total = this.totalPages;\n      const current = this.currentPage;\n      if (total <= 7) {\n        for (let i = 1; i <= total; i++) {\n          pages.push(i);\n        }\n      } else {\n        if (current <= 4) {\n          for (let i = 1; i <= 5; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        } else if (current >= total - 3) {\n          pages.push(1);\n          pages.push('...');\n          for (let i = total - 4; i <= total; i++) {\n            pages.push(i);\n          }\n        } else {\n          pages.push(1);\n          pages.push('...');\n          for (let i = current - 1; i <= current + 1; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        }\n      }\n      return pages;\n    }\n  },\n  methods: {\n    // 获取案件列表\n    async fetchCases() {\n      this.loading = true;\n      try {\n        const response = await axios.get('/api/case/list');\n        if (response.data.code === 200) {\n          this.cases = response.data.data;\n          this.updateStats();\n        } else {\n          this.error = response.data.message || '获取案件列表失败';\n        }\n      } catch (error) {\n        console.error('获取案件列表失败:', error);\n        this.error = '获取案件列表失败，请稍后重试';\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取案件类型和状态选项\n    async fetchOptions() {\n      try {\n        const [typesResponse, statusResponse] = await Promise.all([axios.get('/api/case/types'), axios.get('/api/case/statuses')]);\n        if (typesResponse.data.code === 200) {\n          this.caseTypes = typesResponse.data.data;\n        }\n        if (statusResponse.data.code === 200) {\n          this.statusChoices = statusResponse.data.data;\n        }\n      } catch (error) {\n        console.error('获取选项失败:', error);\n      }\n    },\n    // 搜索案件\n    async searchCases() {\n      this.loading = true;\n      this.currentPage = 1;\n      try {\n        const params = {\n          page: this.currentPage,\n          size: this.pageSize,\n          q: this.searchForm.keyword,\n          caseType: this.searchForm.caseType,\n          status: this.searchForm.status,\n          createdAtFrom: this.searchForm.dateFrom\n        };\n        const response = await axios.get('/api/case/search', {\n          params\n        });\n        if (response.data.code === 200) {\n          const result = response.data.data;\n          this.cases = result.records;\n          // 如果后端返回了分页信息，更新分页状态\n          if (result.pages) {\n            this.totalPages = result.pages;\n          }\n        } else {\n          this.error = response.data.message || '搜索案件失败';\n        }\n      } catch (error) {\n        console.error('搜索案件失败:', error);\n        this.error = '搜索案件失败，请稍后重试';\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 创建案件\n    async createCase() {\n      if (!this.caseForm.title || !this.caseForm.caseType) {\n        alert('请填写必填信息');\n        return;\n      }\n      this.loading = true;\n      try {\n        // 将前端表单数据转换为后端API所需格式\n        const caseData = {\n          caseNumber: this.caseForm.caseNumber,\n          caseName: this.caseForm.title,\n          description: this.caseForm.description,\n          caseType: this.caseForm.caseType,\n          status: this.caseForm.status,\n          startDate: this.caseForm.incidentTime ? this.caseForm.incidentTime.split('T')[0] : null\n        };\n        const response = await axios.post('/api/case/add', caseData);\n        if (response.data.code === 200) {\n          this.showCreateModal = false;\n          // 重置表单\n          this.caseForm = {\n            caseNumber: '',\n            title: '',\n            description: '',\n            caseType: '',\n            status: 'pending',\n            officer: '',\n            location: '',\n            incidentTime: ''\n          };\n\n          // 重新获取案件列表\n          this.fetchCases();\n          alert('案件创建成功');\n        } else {\n          alert(response.data.message || '创建案件失败');\n        }\n      } catch (error) {\n        console.error('创建案件失败:', error);\n        alert('创建案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    viewCase(caseItem) {\n      // 跳转到案件详情页面\n      this.$router.push(`/case/detail/${caseItem.id}`);\n    },\n    // 编辑案件\n    async editCase(caseItem) {\n      try {\n        // 先获取案件详情\n        const response = await axios.get(`/api/case/${caseItem.id}`);\n        if (response.data.code === 200) {\n          const caseDetail = response.data.data;\n\n          // 跳转到编辑页面，并传递案件数据\n          this.$router.push({\n            path: `/case/edit/${caseItem.id}`,\n            query: {\n              caseData: JSON.stringify(caseDetail)\n            }\n          });\n        } else {\n          alert(response.data.message || '获取案件详情失败');\n        }\n      } catch (error) {\n        console.error('获取案件详情失败:', error);\n        alert('获取案件详情失败: ' + (error.response?.data?.message || error.message));\n      }\n    },\n    // 查看笔录\n    viewRecords(caseItem) {\n      this.$router.push(`/case/${caseItem.id}/records`);\n    },\n    // 删除案件\n    async deleteCase(caseItem) {\n      if (!confirm(`确定要删除案件 ${caseItem.caseNumber} 吗？此操作将同时删除所有相关笔录且不可恢复！`)) {\n        return;\n      }\n      this.loading = true;\n      try {\n        const response = await axios.delete(`/api/case/${caseItem.id}`);\n        if (response.data.code === 200) {\n          // 从列表中移除该案件\n          this.cases = this.cases.filter(c => c.id !== caseItem.id);\n          // 更新统计数据\n          this.updateStats();\n          alert('案件删除成功');\n        } else {\n          alert(response.data.message || '删除案件失败');\n        }\n      } catch (error) {\n        console.error('删除案件失败:', error);\n        alert('删除案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 导出案件\n    async exportCases() {\n      if (this.selectedCases.length === 0) {\n        alert('请先选择要导出的案件');\n        return;\n      }\n      this.loading = true;\n      try {\n        const caseIds = this.selectedCases.map(c => c.id);\n        const response = await axios.post('/api/case/export', {\n          caseIds\n        }, {\n          responseType: 'blob' // 指定响应类型为二进制数据\n        });\n\n        // 创建下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n\n        // 从响应头获取文件名，如果没有则使用默认文件名\n        const contentDisposition = response.headers['content-disposition'];\n        let filename = 'cases_export.zip';\n        if (contentDisposition) {\n          const filenameMatch = contentDisposition.match(/filename=\"(.+)\"/i);\n          if (filenameMatch && filenameMatch[1]) {\n            filename = filenameMatch[1];\n          }\n        }\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } catch (error) {\n        console.error('导出案件失败:', error);\n        alert('导出案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    toggleSelectAll(event) {\n      if (event.target.checked) {\n        this.selectedCases = [...this.cases];\n      } else {\n        this.selectedCases = [];\n      }\n    },\n    updateStats() {\n      // 计算统计数据\n      this.stats.totalCases = this.cases.length;\n      this.stats.pendingCases = this.cases.filter(c => c.status === 'pending').length;\n      this.stats.completedCases = this.cases.filter(c => c.status === 'completed').length;\n\n      // 计算今日新增案件数\n      const today = new Date().toISOString().split('T')[0];\n      this.stats.todayCases = this.cases.filter(c => {\n        const createdDate = c.createdAt.split(' ')[0];\n        return createdDate === today;\n      }).length;\n    },\n    getCaseTypeClass(type) {\n      const classMap = {\n        'criminal': 'bg-danger',\n        'civil': 'bg-primary',\n        'traffic': 'bg-warning',\n        'economic': 'bg-info',\n        'other': 'bg-secondary'\n      };\n      return classMap[type] || 'bg-secondary';\n    },\n    getCaseTypeText(type) {\n      const textMap = {\n        'criminal': '刑事案件',\n        'civil': '民事案件',\n        'traffic': '交通案件',\n        'economic': '经济案件',\n        'other': '其他案件'\n      };\n      return textMap[type] || '未知类型';\n    },\n    getStatusClass(status) {\n      const classMap = {\n        'pending': 'bg-warning',\n        'investigating': 'bg-primary',\n        'completed': 'bg-success',\n        'closed': 'bg-secondary'\n      };\n      return classMap[status] || 'bg-secondary';\n    },\n    getStatusText(status) {\n      const textMap = {\n        'pending': '待处理',\n        'investigating': '调查中',\n        'completed': '已完成',\n        'closed': '已关闭'\n      };\n      return textMap[status] || '未知状态';\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('zh-CN');\n    },\n    // 导入案件\n    async importCases() {\n      const fileInput = this.$refs.importFile;\n      if (!fileInput.files || fileInput.files.length === 0) {\n        alert('请选择要导入的文件');\n        return;\n      }\n      const file = fileInput.files[0];\n      if (file.type !== 'application/json' && !file.name.endsWith('.json')) {\n        alert('请选择JSON格式的文件');\n        return;\n      }\n      this.loading = true;\n      try {\n        const formData = new FormData();\n        formData.append('file', file);\n        const response = await axios.post('/api/case/import', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.data.code === 200) {\n          this.showImportModal = false;\n          // 重新获取案件列表\n          this.fetchCases();\n          alert(`成功导入 ${response.data.data.importedCount || 0} 个案件`);\n        } else {\n          alert(response.data.message || '导入案件失败');\n        }\n      } catch (error) {\n        console.error('导入案件失败:', error);\n        alert('导入案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n        // 清空文件输入\n        fileInput.value = '';\n      }\n    }\n  },\n  mounted() {\n    // 组件挂载后获取数据\n    this.fetchCases();\n    this.fetchOptions();\n  },\n  computed: {\n    paginatedCases() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.cases.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.cases.length / this.pageSize);\n    },\n    isAllSelected() {\n      return this.selectedCases.length === this.paginatedCases.length && this.paginatedCases.length > 0;\n    },\n    visiblePages() {\n      const pages = [];\n      const total = this.totalPages;\n      const current = this.currentPage;\n      if (total <= 7) {\n        for (let i = 1; i <= total; i++) {\n          pages.push(i);\n        }\n      } else {\n        if (current <= 4) {\n          for (let i = 1; i <= 5; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        } else if (current >= total - 3) {\n          pages.push(1);\n          pages.push('...');\n          for (let i = total - 4; i <= total; i++) {\n            pages.push(i);\n          }\n        } else {\n          pages.push(1);\n          pages.push('...');\n          for (let i = current - 1; i <= current + 1; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        }\n      }\n      return pages;\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","process","env","VUE_APP_API_URL","name","data","viewMode","currentPage","pageSize","showCreateModal","showImportModal","selectedCases","searchForm","keyword","caseType","status","officer","dateFrom","caseForm","caseNumber","title","description","location","incidentTime","stats","totalCases","pendingCases","completedCases","todayCases","cases","caseTypes","statusChoices","loading","error","computed","filteredCases","filtered","toLowerCase","filter","caseItem","includes","createdAt","totalPages","Math","ceil","length","paginatedCases","start","end","slice","visiblePages","pages","total","current","i","push","methods","fetchCases","response","get","code","updateStats","message","console","fetchOptions","typesResponse","statusResponse","Promise","all","searchCases","params","page","size","q","createdAtFrom","result","records","createCase","alert","caseData","caseName","startDate","split","post","viewCase","$router","id","editCase","caseDetail","path","query","JSON","stringify","viewRecords","deleteCase","confirm","delete","c","exportCases","caseIds","map","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","contentDisposition","headers","filename","filenameMatch","match","setAttribute","body","appendChild","click","removeChild","toggleSelectAll","event","target","checked","today","Date","toISOString","createdDate","getCaseTypeClass","type","classMap","getCaseTypeText","textMap","getStatusClass","getStatusText","formatDate","dateString","date","toLocaleDateString","importCases","fileInput","$refs","importFile","files","file","endsWith","formData","FormData","append","importedCount","value","mounted","isAllSelected"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/views/CaseManagement.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid mt-4\">\n    <!-- 页面标题区域 -->\n    <div class=\"row mb-4\">\n      <div class=\"col-12\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n          <div>\n            <h2 class=\"display-6 fw-bold text-primary mb-0\">\n              <i class=\"bi bi-folder2-open me-2\"></i>案件管理\n            </h2>\n            <p class=\"text-muted mb-0\">管理和跟踪所有案件信息</p>\n          </div>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-primary btn-lg\" @click=\"showCreateModal = true\">\n              <i class=\"bi bi-plus-circle me-2\"></i>新建案件\n            </button>\n            <button class=\"btn btn-success btn-lg\" @click=\"showImportModal = true\">\n              <i class=\"bi bi-upload me-2\"></i>批量导入\n            </button>\n            <button class=\"btn btn-info btn-lg\" @click=\"exportCases\">\n              <i class=\"bi bi-download me-2\"></i>导出案件\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 统计卡片 -->\n    <div class=\"row mb-4\">\n      <div class=\"col-md-3\">\n        <div class=\"card border-0 shadow-sm stats-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"stats-icon bg-primary bg-opacity-10 text-primary mb-3\">\n              <i class=\"bi bi-folder2\"></i>\n            </div>\n            <h3 class=\"fw-bold mb-1\">{{ stats.totalCases }}</h3>\n            <p class=\"text-muted mb-0\">总案件数</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"card border-0 shadow-sm stats-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"stats-icon bg-warning bg-opacity-10 text-warning mb-3\">\n              <i class=\"bi bi-clock-history\"></i>\n            </div>\n            <h3 class=\"fw-bold mb-1\">{{ stats.pendingCases }}</h3>\n            <p class=\"text-muted mb-0\">待处理案件</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"card border-0 shadow-sm stats-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"stats-icon bg-success bg-opacity-10 text-success mb-3\">\n              <i class=\"bi bi-check-circle\"></i>\n            </div>\n            <h3 class=\"fw-bold mb-1\">{{ stats.completedCases }}</h3>\n            <p class=\"text-muted mb-0\">已完成案件</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"card border-0 shadow-sm stats-card\">\n          <div class=\"card-body text-center\">\n            <div class=\"stats-icon bg-info bg-opacity-10 text-info mb-3\">\n              <i class=\"bi bi-calendar-day\"></i>\n            </div>\n            <h3 class=\"fw-bold mb-1\">{{ stats.todayCases }}</h3>\n            <p class=\"text-muted mb-0\">今日新增</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 搜索和筛选区域 -->\n    <div class=\"row mb-4\">\n      <div class=\"col-12\">\n        <div class=\"card border-0 shadow-sm\">\n          <div class=\"card-body\">\n            <div class=\"row g-3\">\n              <div class=\"col-md-3\">\n                <label class=\"form-label fw-bold\">搜索关键词</label>\n                <div class=\"input-group\">\n                  <span class=\"input-group-text\">\n                    <i class=\"bi bi-search\"></i>\n                  </span>\n                  <input \n                    type=\"text\" \n                    class=\"form-control\" \n                    placeholder=\"案件编号、案件名称等\"\n                    v-model=\"searchForm.keyword\"\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-2\">\n                <label class=\"form-label fw-bold\">案件类型</label>\n                <select class=\"form-select\" v-model=\"searchForm.caseType\">\n                  <option value=\"\">全部类型</option>\n                  <option value=\"criminal\">刑事案件</option>\n                  <option value=\"civil\">民事案件</option>\n                  <option value=\"administrative\">行政案件</option>\n                  <option value=\"traffic\">交通案件</option>\n                </select>\n              </div>\n              <div class=\"col-md-2\">\n                <label class=\"form-label fw-bold\">案件状态</label>\n                <select class=\"form-select\" v-model=\"searchForm.status\">\n                  <option value=\"\">全部状态</option>\n                  <option value=\"pending\">待处理</option>\n                  <option value=\"investigating\">调查中</option>\n                  <option value=\"completed\">已完成</option>\n                  <option value=\"closed\">已结案</option>\n                </select>\n              </div>\n              <div class=\"col-md-2\">\n                <label class=\"form-label fw-bold\">负责人</label>\n                <select class=\"form-select\" v-model=\"searchForm.officer\">\n                  <option value=\"\">全部负责人</option>\n                  <option value=\"李警官\">李警官</option>\n                  <option value=\"张警官\">张警官</option>\n                  <option value=\"王警官\">王警官</option>\n                </select>\n              </div>\n              <div class=\"col-md-2\">\n                <label class=\"form-label fw-bold\">创建日期</label>\n                <input type=\"date\" class=\"form-control\" v-model=\"searchForm.dateFrom\">\n              </div>\n              <div class=\"col-md-1\">\n                <label class=\"form-label fw-bold\">&nbsp;</label>\n                <button class=\"btn btn-primary w-100\" @click=\"searchCases\">\n                  <i class=\"bi bi-search\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 案件列表 -->\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card border-0 shadow-sm\">\n          <div class=\"card-header bg-white border-0 py-3\">\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <h5 class=\"fw-bold mb-0\">\n                <i class=\"bi bi-list-ul me-2 text-primary\"></i>案件列表\n                <span class=\"badge bg-primary ms-2\">{{ filteredCases.length }}</span>\n              </h5>\n              <div class=\"btn-group btn-group-sm\">\n                <button \n                  class=\"btn\" \n                  :class=\"viewMode === 'table' ? 'btn-primary' : 'btn-outline-primary'\"\n                  @click=\"viewMode = 'table'\"\n                >\n                  <i class=\"bi bi-table\"></i>\n                </button>\n                <button \n                  class=\"btn\" \n                  :class=\"viewMode === 'card' ? 'btn-primary' : 'btn-outline-primary'\"\n                  @click=\"viewMode = 'card'\"\n                >\n                  <i class=\"bi bi-grid-3x3-gap\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"card-body p-0\">\n            <!-- 表格视图 -->\n            <div v-if=\"viewMode === 'table'\" class=\"table-responsive\">\n              <table class=\"table table-hover mb-0\">\n                <thead class=\"bg-light\">\n                  <tr>\n                    <th width=\"5%\">\n                      <input type=\"checkbox\" class=\"form-check-input\" @change=\"toggleSelectAll\">\n                    </th>\n                    <th width=\"15%\">案件编号</th>\n                    <th width=\"20%\">案件名称</th>\n                    <th width=\"10%\">案件类型</th>\n                    <th width=\"10%\">状态</th>\n                    <th width=\"10%\">负责人</th>\n                    <th width=\"10%\">创建时间</th>\n                    <th width=\"10%\">笔录数量</th>\n                    <th width=\"10%\">操作</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"caseItem in paginatedCases\" :key=\"caseItem.id\" class=\"case-row\">\n                    <td>\n                      <input \n                        type=\"checkbox\" \n                        class=\"form-check-input\" \n                        :value=\"caseItem.id\"\n                        v-model=\"selectedCases\"\n                      >\n                    </td>\n                    <td>\n                      <span class=\"fw-bold text-primary\">{{ caseItem.caseNumber }}</span>\n                    </td>\n                    <td>\n                      <div>\n                        <div class=\"fw-medium\">{{ caseItem.title }}</div>\n                        <small class=\"text-muted\">{{ caseItem.description }}</small>\n                      </div>\n                    </td>\n                    <td>\n                      <span class=\"badge\" :class=\"getCaseTypeClass(caseItem.caseType)\">\n                        {{ getCaseTypeText(caseItem.caseType) }}\n                      </span>\n                    </td>\n                    <td>\n                      <span class=\"badge\" :class=\"getStatusClass(caseItem.status)\">\n                        {{ getStatusText(caseItem.status) }}\n                      </span>\n                    </td>\n                    <td>\n                      <div class=\"d-flex align-items-center\">\n                        <i class=\"bi bi-person-circle me-2 text-muted\"></i>\n                        {{ caseItem.officer }}\n                      </div>\n                    </td>\n                    <td>\n                      <small class=\"text-muted\">{{ formatDate(caseItem.createdAt) }}</small>\n                    </td>\n                    <td>\n                      <span class=\"badge bg-info\">{{ caseItem.recordCount }}</span>\n                    </td>\n                    <td>\n                      <div class=\"btn-group btn-group-sm\">\n                        <button class=\"btn btn-outline-primary\" @click=\"viewCase(caseItem)\" title=\"查看详情\">\n                          <i class=\"bi bi-eye\"></i>\n                        </button>\n                        <button class=\"btn btn-outline-success\" @click=\"editCase(caseItem)\" title=\"编辑\">\n                          <i class=\"bi bi-pencil\"></i>\n                        </button>\n                        <button class=\"btn btn-outline-info\" @click=\"viewRecords(caseItem)\" title=\"查看笔录\">\n                          <i class=\"bi bi-file-text\"></i>\n                        </button>\n                        <button class=\"btn btn-outline-danger\" @click=\"deleteCase(caseItem.id)\" title=\"删除\">\n                          <i class=\"bi bi-trash\"></i>\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr v-if=\"filteredCases.length === 0\">\n                    <td colspan=\"9\" class=\"text-center py-5\">\n                      <div class=\"empty-state\">\n                        <i class=\"bi bi-folder2 fa-3x mb-3 text-secondary opacity-50\"></i>\n                        <h5 class=\"text-secondary\">暂无案件记录</h5>\n                        <p class=\"text-muted\">点击\"新建案件\"按钮创建第一个案件</p>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <!-- 卡片视图 -->\n            <div v-else class=\"row g-3 p-3\">\n              <div v-for=\"caseItem in paginatedCases\" :key=\"caseItem.id\" class=\"col-md-6 col-lg-4\">\n                <div class=\"card h-100 case-card\">\n                  <div class=\"card-header d-flex justify-content-between align-items-center\">\n                    <small class=\"text-muted\">{{ caseItem.caseNumber }}</small>\n                    <div>\n                      <span class=\"badge me-1\" :class=\"getCaseTypeClass(caseItem.caseType)\">\n                        {{ getCaseTypeText(caseItem.caseType) }}\n                      </span>\n                      <span class=\"badge\" :class=\"getStatusClass(caseItem.status)\">\n                        {{ getStatusText(caseItem.status) }}\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title\">{{ caseItem.title }}</h6>\n                    <p class=\"card-text text-muted small\">{{ caseItem.description }}</p>\n                    <div class=\"row text-center mb-3\">\n                      <div class=\"col-6\">\n                        <div class=\"border-end\">\n                          <div class=\"fw-bold text-primary\">{{ caseItem.recordCount }}</div>\n                          <small class=\"text-muted\">笔录数量</small>\n                        </div>\n                      </div>\n                      <div class=\"col-6\">\n                        <div class=\"fw-bold text-success\">{{ caseItem.daysOpen }}</div>\n                        <small class=\"text-muted\">开案天数</small>\n                      </div>\n                    </div>\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <small class=\"text-muted\">\n                        <i class=\"bi bi-person me-1\"></i>{{ caseItem.officer }}\n                      </small>\n                      <small class=\"text-muted\">{{ formatDate(caseItem.createdAt) }}</small>\n                    </div>\n                  </div>\n                  <div class=\"card-footer bg-transparent\">\n                    <div class=\"btn-group w-100\">\n                      <button class=\"btn btn-outline-primary btn-sm\" @click=\"viewCase(caseItem)\">\n                        <i class=\"bi bi-eye me-1\"></i>详情\n                      </button>\n                      <button class=\"btn btn-outline-success btn-sm\" @click=\"editCase(caseItem)\">\n                        <i class=\"bi bi-pencil me-1\"></i>编辑\n                      </button>\n                      <button class=\"btn btn-outline-info btn-sm\" @click=\"viewRecords(caseItem)\">\n                        <i class=\"bi bi-file-text me-1\"></i>笔录\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div v-if=\"filteredCases.length === 0\" class=\"col-12\">\n                <div class=\"text-center py-5\">\n                  <div class=\"empty-state\">\n                    <i class=\"bi bi-folder2 fa-3x mb-3 text-secondary opacity-50\"></i>\n                    <h5 class=\"text-secondary\">暂无案件记录</h5>\n                    <p class=\"text-muted\">点击\"新建案件\"按钮创建第一个案件</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 分页导航 -->\n          <div class=\"d-flex justify-content-center mt-4\" v-if=\"totalPages > 1\">\n            <nav aria-label=\"案件分页\">\n              <ul class=\"pagination\">\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"currentPage = 1\">\n                    <i class=\"bi bi-chevron-double-left\"></i>\n                  </a>\n                </li>\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"currentPage--\">\n                    <i class=\"bi bi-chevron-left\"></i>\n                  </a>\n                </li>\n                \n                <li class=\"page-item\" v-for=\"page in visiblePages\" :key=\"page\" \n                    :class=\"{ active: page === currentPage, disabled: page === '...' }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"page !== '...' && (currentPage = page)\">\n                    {{ page }}\n                  </a>\n                </li>\n                \n                <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"currentPage++\">\n                    <i class=\"bi bi-chevron-right\"></i>\n                  </a>\n                </li>\n                <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n                  <a class=\"page-link\" href=\"#\" @click.prevent=\"currentPage = totalPages\">\n                    <i class=\"bi bi-chevron-double-right\"></i>\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 新建案件模态框 -->\n    <div class=\"modal fade\" :class=\"{ show: showCreateModal }\" :style=\"{ display: showCreateModal ? 'block' : 'none' }\" tabindex=\"-1\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"bi bi-plus-circle me-2\"></i>新建案件\n            </h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showCreateModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"createCase\">\n              <div class=\"row g-3\">\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案件编号</label>\n                  <input type=\"text\" class=\"form-control\" v-model=\"caseForm.caseNumber\" required>\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案件类型</label>\n                  <select class=\"form-select\" v-model=\"caseForm.caseType\" required>\n                    <option value=\"\">请选择案件类型</option>\n                    <option value=\"criminal\">刑事案件</option>\n                    <option value=\"civil\">民事案件</option>\n                    <option value=\"administrative\">行政案件</option>\n                    <option value=\"traffic\">交通案件</option>\n                  </select>\n                </div>\n                <div class=\"col-12\">\n                  <label class=\"form-label\">案件名称</label>\n                  <input type=\"text\" class=\"form-control\" v-model=\"caseForm.title\" required>\n                </div>\n                <div class=\"col-12\">\n                  <label class=\"form-label\">案件描述</label>\n                  <textarea class=\"form-control\" rows=\"4\" v-model=\"caseForm.description\" required></textarea>\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">负责人</label>\n                  <select class=\"form-select\" v-model=\"caseForm.officer\" required>\n                    <option value=\"\">请选择负责人</option>\n                    <option value=\"李警官\">李警官</option>\n                    <option value=\"张警官\">张警官</option>\n                    <option value=\"王警官\">王警官</option>\n                  </select>\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案件状态</label>\n                  <select class=\"form-select\" v-model=\"caseForm.status\">\n                    <option value=\"pending\">待处理</option>\n                    <option value=\"investigating\">调查中</option>\n                    <option value=\"completed\">已完成</option>\n                  </select>\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案发地点</label>\n                  <input type=\"text\" class=\"form-control\" v-model=\"caseForm.location\">\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"form-label\">案发时间</label>\n                  <input type=\"datetime-local\" class=\"form-control\" v-model=\"caseForm.incidentTime\">\n                </div>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showCreateModal = false\">取消</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"createCase\">\n              <i class=\"bi bi-check-circle me-2\"></i>保存\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 导入案件模态框 -->\n    <div class=\"modal fade show\" tabindex=\"-1\" aria-labelledby=\"importModalLabel\" aria-hidden=\"true\" v-if=\"showImportModal\" style=\"display: block;\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"importModalLabel\">导入案件</h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showImportModal = false\" aria-label=\"关闭\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"mb-3\">\n              <label for=\"importFile\" class=\"form-label\">选择JSON文件</label>\n              <input class=\"form-control\" type=\"file\" id=\"importFile\" ref=\"importFile\" accept=\".json,application/json\">\n            </div>\n            <div class=\"alert alert-info\">\n              <i class=\"bi bi-info-circle me-2\"></i>\n              请上传符合格式的JSON文件，文件中应包含案件的基本信息。\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showImportModal = false\">取消</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"importCases()\" :disabled=\"loading\">\n              <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\n              导入\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- 模态框背景 -->\n    <div v-if=\"showCreateModal || showImportModal\" class=\"modal-backdrop fade show\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n// 配置API基础URL\naxios.defaults.baseURL = process.env.VUE_APP_API_URL || '';\n\nexport default {\n  name: 'CaseManagement',\n  data() {\n    return {\n      viewMode: 'table',\n      currentPage: 1,\n      pageSize: 10,\n      showCreateModal: false,\n      showImportModal: false,\n      selectedCases: [],\n      searchForm: {\n        keyword: '',\n        caseType: '',\n        status: '',\n        officer: '',\n        dateFrom: ''\n      },\n      caseForm: {\n        caseNumber: '',\n        title: '',\n        description: '',\n        caseType: '',\n        status: 'pending',\n        officer: '',\n        location: '',\n        incidentTime: ''\n      },\n      stats: {\n        totalCases: 0,\n        pendingCases: 0,\n        completedCases: 0,\n        todayCases: 0\n      },\n      cases: [],\n      caseTypes: [],\n      statusChoices: [],\n      loading: false,\n      error: null\n    }\n  },\n  computed: {\n    filteredCases() {\n      let filtered = this.cases;\n      \n      if (this.searchForm.keyword) {\n        const keyword = this.searchForm.keyword.toLowerCase();\n        filtered = filtered.filter(caseItem => \n          caseItem.title.toLowerCase().includes(keyword) ||\n          caseItem.caseNumber.toLowerCase().includes(keyword) ||\n          caseItem.description.toLowerCase().includes(keyword)\n        );\n      }\n      \n      if (this.searchForm.caseType) {\n        filtered = filtered.filter(caseItem => caseItem.caseType === this.searchForm.caseType);\n      }\n      \n      if (this.searchForm.status) {\n        filtered = filtered.filter(caseItem => caseItem.status === this.searchForm.status);\n      }\n      \n      if (this.searchForm.officer) {\n        filtered = filtered.filter(caseItem => caseItem.officer === this.searchForm.officer);\n      }\n      \n      if (this.searchForm.dateFrom) {\n        filtered = filtered.filter(caseItem => caseItem.createdAt >= this.searchForm.dateFrom);\n      }\n      \n      return filtered;\n    },\n    totalPages() {\n      return Math.ceil(this.filteredCases.length / this.pageSize);\n    },\n    paginatedCases() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.filteredCases.slice(start, end);\n    },\n    visiblePages() {\n      const pages = [];\n      const total = this.totalPages;\n      const current = this.currentPage;\n      \n      if (total <= 7) {\n        for (let i = 1; i <= total; i++) {\n          pages.push(i);\n        }\n      } else {\n        if (current <= 4) {\n          for (let i = 1; i <= 5; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        } else if (current >= total - 3) {\n          pages.push(1);\n          pages.push('...');\n          for (let i = total - 4; i <= total; i++) {\n            pages.push(i);\n          }\n        } else {\n          pages.push(1);\n          pages.push('...');\n          for (let i = current - 1; i <= current + 1; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        }\n      }\n      \n      return pages;\n    }\n  },\n  methods: {\n    // 获取案件列表\n    async fetchCases() {\n      this.loading = true;\n      try {\n        const response = await axios.get('/api/case/list');\n        if (response.data.code === 200) {\n          this.cases = response.data.data;\n          this.updateStats();\n        } else {\n          this.error = response.data.message || '获取案件列表失败';\n        }\n      } catch (error) {\n        console.error('获取案件列表失败:', error);\n        this.error = '获取案件列表失败，请稍后重试';\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 获取案件类型和状态选项\n    async fetchOptions() {\n      try {\n        const [typesResponse, statusResponse] = await Promise.all([\n          axios.get('/api/case/types'),\n          axios.get('/api/case/statuses')\n        ]);\n        \n        if (typesResponse.data.code === 200) {\n          this.caseTypes = typesResponse.data.data;\n        }\n        \n        if (statusResponse.data.code === 200) {\n          this.statusChoices = statusResponse.data.data;\n        }\n      } catch (error) {\n        console.error('获取选项失败:', error);\n      }\n    },\n    \n    // 搜索案件\n    async searchCases() {\n      this.loading = true;\n      this.currentPage = 1;\n      \n      try {\n        const params = {\n          page: this.currentPage,\n          size: this.pageSize,\n          q: this.searchForm.keyword,\n          caseType: this.searchForm.caseType,\n          status: this.searchForm.status,\n          createdAtFrom: this.searchForm.dateFrom\n        };\n        \n        const response = await axios.get('/api/case/search', { params });\n        \n        if (response.data.code === 200) {\n          const result = response.data.data;\n          this.cases = result.records;\n          // 如果后端返回了分页信息，更新分页状态\n          if (result.pages) {\n            this.totalPages = result.pages;\n          }\n        } else {\n          this.error = response.data.message || '搜索案件失败';\n        }\n      } catch (error) {\n        console.error('搜索案件失败:', error);\n        this.error = '搜索案件失败，请稍后重试';\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 创建案件\n    async createCase() {\n      if (!this.caseForm.title || !this.caseForm.caseType) {\n        alert('请填写必填信息');\n        return;\n      }\n      \n      this.loading = true;\n      \n      try {\n        // 将前端表单数据转换为后端API所需格式\n        const caseData = {\n          caseNumber: this.caseForm.caseNumber,\n          caseName: this.caseForm.title,\n          description: this.caseForm.description,\n          caseType: this.caseForm.caseType,\n          status: this.caseForm.status,\n          startDate: this.caseForm.incidentTime ? this.caseForm.incidentTime.split('T')[0] : null\n        };\n        \n        const response = await axios.post('/api/case/add', caseData);\n        \n        if (response.data.code === 200) {\n          this.showCreateModal = false;\n          // 重置表单\n          this.caseForm = {\n            caseNumber: '',\n            title: '',\n            description: '',\n            caseType: '',\n            status: 'pending',\n            officer: '',\n            location: '',\n            incidentTime: ''\n          };\n          \n          // 重新获取案件列表\n          this.fetchCases();\n          alert('案件创建成功');\n        } else {\n          alert(response.data.message || '创建案件失败');\n        }\n      } catch (error) {\n        console.error('创建案件失败:', error);\n        alert('创建案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    viewCase(caseItem) {\n      // 跳转到案件详情页面\n      this.$router.push(`/case/detail/${caseItem.id}`);\n    },\n    \n    // 编辑案件\n    async editCase(caseItem) {\n      try {\n        // 先获取案件详情\n        const response = await axios.get(`/api/case/${caseItem.id}`);\n        \n        if (response.data.code === 200) {\n          const caseDetail = response.data.data;\n          \n          // 跳转到编辑页面，并传递案件数据\n          this.$router.push({\n            path: `/case/edit/${caseItem.id}`,\n            query: { caseData: JSON.stringify(caseDetail) }\n          });\n        } else {\n          alert(response.data.message || '获取案件详情失败');\n        }\n      } catch (error) {\n        console.error('获取案件详情失败:', error);\n        alert('获取案件详情失败: ' + (error.response?.data?.message || error.message));\n      }\n    },\n    \n    // 查看笔录\n    viewRecords(caseItem) {\n      this.$router.push(`/case/${caseItem.id}/records`);\n    },\n    \n    // 删除案件\n    async deleteCase(caseItem) {\n      if (!confirm(`确定要删除案件 ${caseItem.caseNumber} 吗？此操作将同时删除所有相关笔录且不可恢复！`)) {\n        return;\n      }\n      \n      this.loading = true;\n      \n      try {\n        const response = await axios.delete(`/api/case/${caseItem.id}`);\n        \n        if (response.data.code === 200) {\n          // 从列表中移除该案件\n          this.cases = this.cases.filter(c => c.id !== caseItem.id);\n          // 更新统计数据\n          this.updateStats();\n          alert('案件删除成功');\n        } else {\n          alert(response.data.message || '删除案件失败');\n        }\n      } catch (error) {\n        console.error('删除案件失败:', error);\n        alert('删除案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 导出案件\n    async exportCases() {\n      if (this.selectedCases.length === 0) {\n        alert('请先选择要导出的案件');\n        return;\n      }\n      \n      this.loading = true;\n      \n      try {\n        const caseIds = this.selectedCases.map(c => c.id);\n        const response = await axios.post('/api/case/export', { caseIds }, {\n          responseType: 'blob' // 指定响应类型为二进制数据\n        });\n        \n        // 创建下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        \n        // 从响应头获取文件名，如果没有则使用默认文件名\n        const contentDisposition = response.headers['content-disposition'];\n        let filename = 'cases_export.zip';\n        \n        if (contentDisposition) {\n          const filenameMatch = contentDisposition.match(/filename=\"(.+)\"/i);\n          if (filenameMatch && filenameMatch[1]) {\n            filename = filenameMatch[1];\n          }\n        }\n        \n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        \n      } catch (error) {\n        console.error('导出案件失败:', error);\n        alert('导出案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n      }\n    },\n    toggleSelectAll(event) {\n      if (event.target.checked) {\n        this.selectedCases = [...this.cases];\n      } else {\n        this.selectedCases = [];\n      }\n    },\n    \n    updateStats() {\n      // 计算统计数据\n      this.stats.totalCases = this.cases.length;\n      this.stats.pendingCases = this.cases.filter(c => c.status === 'pending').length;\n      this.stats.completedCases = this.cases.filter(c => c.status === 'completed').length;\n      \n      // 计算今日新增案件数\n      const today = new Date().toISOString().split('T')[0];\n      this.stats.todayCases = this.cases.filter(c => {\n        const createdDate = c.createdAt.split(' ')[0];\n        return createdDate === today;\n      }).length;\n    },\n    \n    getCaseTypeClass(type) {\n      const classMap = {\n        'criminal': 'bg-danger',\n        'civil': 'bg-primary',\n        'traffic': 'bg-warning',\n        'economic': 'bg-info',\n        'other': 'bg-secondary'\n      };\n      return classMap[type] || 'bg-secondary';\n    },\n    \n    getCaseTypeText(type) {\n      const textMap = {\n        'criminal': '刑事案件',\n        'civil': '民事案件',\n        'traffic': '交通案件',\n        'economic': '经济案件',\n        'other': '其他案件'\n      };\n      return textMap[type] || '未知类型';\n    },\n    \n    getStatusClass(status) {\n      const classMap = {\n        'pending': 'bg-warning',\n        'investigating': 'bg-primary',\n        'completed': 'bg-success',\n        'closed': 'bg-secondary'\n      };\n      return classMap[status] || 'bg-secondary';\n    },\n    \n    getStatusText(status) {\n      const textMap = {\n        'pending': '待处理',\n        'investigating': '调查中',\n        'completed': '已完成',\n        'closed': '已关闭'\n      };\n      return textMap[status] || '未知状态';\n    },\n    \n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('zh-CN');\n    },\n    \n    // 导入案件\n    async importCases() {\n      const fileInput = this.$refs.importFile;\n      if (!fileInput.files || fileInput.files.length === 0) {\n        alert('请选择要导入的文件');\n        return;\n      }\n      \n      const file = fileInput.files[0];\n      if (file.type !== 'application/json' && !file.name.endsWith('.json')) {\n        alert('请选择JSON格式的文件');\n        return;\n      }\n      \n      this.loading = true;\n      \n      try {\n        const formData = new FormData();\n        formData.append('file', file);\n        \n        const response = await axios.post('/api/case/import', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        \n        if (response.data.code === 200) {\n          this.showImportModal = false;\n          // 重新获取案件列表\n          this.fetchCases();\n          alert(`成功导入 ${response.data.data.importedCount || 0} 个案件`);\n        } else {\n          alert(response.data.message || '导入案件失败');\n        }\n      } catch (error) {\n        console.error('导入案件失败:', error);\n        alert('导入案件失败: ' + (error.response?.data?.message || error.message));\n      } finally {\n        this.loading = false;\n        // 清空文件输入\n        fileInput.value = '';\n      }\n    }\n  },\n  mounted() {\n    // 组件挂载后获取数据\n    this.fetchCases();\n    this.fetchOptions();\n  },\n  \n  computed: {\n    paginatedCases() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.cases.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.cases.length / this.pageSize);\n    },\n    isAllSelected() {\n      return this.selectedCases.length === this.paginatedCases.length && this.paginatedCases.length > 0;\n    },\n    visiblePages() {\n      const pages = [];\n      const total = this.totalPages;\n      const current = this.currentPage;\n      \n      if (total <= 7) {\n        for (let i = 1; i <= total; i++) {\n          pages.push(i);\n        }\n      } else {\n        if (current <= 4) {\n          for (let i = 1; i <= 5; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        } else if (current >= total - 3) {\n          pages.push(1);\n          pages.push('...');\n          for (let i = total - 4; i <= total; i++) {\n            pages.push(i);\n          }\n        } else {\n          pages.push(1);\n          pages.push('...');\n          for (let i = current - 1; i <= current + 1; i++) {\n            pages.push(i);\n          }\n          pages.push('...');\n          pages.push(total);\n        }\n      }\n      \n      return pages;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.stats-card {\n  transition: all 0.3s ease;\n}\n\n.stats-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.stats-icon {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  margin: 0 auto;\n}\n\n.case-row {\n  transition: all 0.3s ease;\n}\n\n.case-row:hover {\n  background-color: rgba(13, 110, 253, 0.05);\n}\n\n.case-card {\n  transition: all 0.3s ease;\n  cursor: pointer;\n}\n\n.case-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.empty-state {\n  padding: 2rem;\n}\n\n.modal {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.btn {\n  transition: all 0.3s ease;\n}\n\n.btn:hover {\n  transform: translateY(-1px);\n}\n\n.page-link {\n  transition: all 0.3s ease;\n}\n\n.pagination .page-item.active .page-link {\n  background-color: #0d6efd;\n  border-color: #0d6efd;\n}\n\n.table th {\n  font-weight: 600;\n  border-bottom: 2px solid #dee2e6;\n  background-color: #f8f9fa;\n}\n\n.badge {\n  font-size: 0.75rem;\n}\n\n.input-group-text {\n  background-color: #f8f9fa;\n  border-color: #dee2e6;\n}\n\n.form-control:focus, .form-select:focus {\n  border-color: #0d6efd;\n  box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);\n}\n\n.card-header {\n  background-color: rgba(13, 110, 253, 0.05);\n}\n\n.border-end {\n  border-right: 1px solid #dee2e6 !important;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}