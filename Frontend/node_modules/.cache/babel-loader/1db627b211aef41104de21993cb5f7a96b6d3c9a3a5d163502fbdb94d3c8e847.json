{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport request from './request';\n\n/**\n * 笔录记录相关API\n */\n\n// 获取笔录列表\nexport function getRecordList() {\n  return request({\n    url: '/record/list',\n    method: 'get'\n  });\n}\n\n// 获取笔录详情\nexport function getRecordDetail(id) {\n  return request({\n    url: `/record/${id}`,\n    method: 'get'\n  }).then(response => {\n    // 检查响应是否成功\n    if (response.data && response.data.code === 200 && response.data.data) {\n      // 将下划线命名转换为驼峰命名\n      const data = response.data.data;\n      response.data.data = {\n        id: data.id || id,\n        // 确保有ID\n        recordName: data.record_name,\n        inquiryTime: data.inquiry_time,\n        inquiryAddress: data.inquiry_address,\n        assistantName: data.assistant_name,\n        inquirerName: data.inquirer_name,\n        inquiryId: data.inquiry_id,\n        recordContent: data.text_content,\n        contentHash: data.content_hash,\n        videoPath: data.video_file_path,\n        createdTime: data.created_at,\n        // 处理案件信息\n        caseId: data.case?.id,\n        caseName: data.case?.case_name,\n        caseNumber: data.case?.case_number,\n        caseType: data.case?.case_type,\n        caseStatus: data.case?.status\n      };\n    }\n    return response;\n  });\n}\n\n// 搜索笔录记录\nexport function searchRecords(params) {\n  // 转换参数名称以匹配后端API期望的格式\n  const convertedParams = {\n    q: params.q,\n    page: params.page || 1,\n    size: params.size || 10,\n    startDate: params.start_date,\n    endDate: params.end_date,\n    location: params.location,\n    assistant: params.assistant,\n    inquirer: params.inquirer\n  };\n\n  // 移除undefined的参数\n  Object.keys(convertedParams).forEach(key => {\n    if (convertedParams[key] === undefined) {\n      delete convertedParams[key];\n    }\n  });\n  return request({\n    url: '/record/search',\n    method: 'get',\n    params: convertedParams\n  });\n}\n\n// 添加笔录\nexport function addRecord(data) {\n  return request({\n    url: '/record/add',\n    method: 'post',\n    data\n  });\n}\n\n// 更新笔录\nexport function updateRecord(id, data) {\n  return request({\n    url: `/record/${id}`,\n    method: 'put',\n    data\n  });\n}\n\n// 删除笔录\nexport function deleteRecord(id) {\n  return request({\n    url: `/record/${id}`,\n    method: 'delete'\n  });\n}\n\n// 上传笔录附件\nexport function uploadRecordAttachment(id, file) {\n  const formData = new FormData();\n  formData.append('file', file);\n  return request({\n    url: `/record/${id}/upload`,\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n}\n\n// 导出笔录\nexport function exportRecord(id) {\n  return request({\n    url: `/record/export/${id}`,\n    method: 'get',\n    responseType: 'blob'\n  });\n}","map":{"version":3,"names":["request","getRecordList","url","method","getRecordDetail","id","then","response","data","code","recordName","record_name","inquiryTime","inquiry_time","inquiryAddress","inquiry_address","assistantName","assistant_name","inquirerName","inquirer_name","inquiryId","inquiry_id","recordContent","text_content","contentHash","content_hash","videoPath","video_file_path","createdTime","created_at","caseId","case","caseName","case_name","caseNumber","case_number","caseType","case_type","caseStatus","status","searchRecords","params","convertedParams","q","page","size","startDate","start_date","endDate","end_date","location","assistant","inquirer","Object","keys","forEach","key","undefined","addRecord","updateRecord","deleteRecord","uploadRecordAttachment","file","formData","FormData","append","headers","exportRecord","responseType"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/api/record.js"],"sourcesContent":["import request from './request'\n\n/**\n * 笔录记录相关API\n */\n\n// 获取笔录列表\nexport function getRecordList() {\n  return request({\n    url: '/record/list',\n    method: 'get'\n  })\n}\n\n// 获取笔录详情\nexport function getRecordDetail(id) {\n  return request({\n    url: `/record/${id}`,\n    method: 'get'\n  }).then(response => {\n    // 检查响应是否成功\n    if (response.data && response.data.code === 200 && response.data.data) {\n      // 将下划线命名转换为驼峰命名\n      const data = response.data.data;\n      response.data.data = {\n        id: data.id || id, // 确保有ID\n        recordName: data.record_name,\n        inquiryTime: data.inquiry_time,\n        inquiryAddress: data.inquiry_address,\n        assistantName: data.assistant_name,\n        inquirerName: data.inquirer_name,\n        inquiryId: data.inquiry_id,\n        recordContent: data.text_content,\n        contentHash: data.content_hash,\n        videoPath: data.video_file_path,\n        createdTime: data.created_at,\n        // 处理案件信息\n        caseId: data.case?.id,\n        caseName: data.case?.case_name,\n        caseNumber: data.case?.case_number,\n        caseType: data.case?.case_type,\n        caseStatus: data.case?.status\n      }\n    }\n    return response;\n  })\n}\n\n// 搜索笔录记录\nexport function searchRecords(params) {\n  // 转换参数名称以匹配后端API期望的格式\n  const convertedParams = {\n    q: params.q,\n    page: params.page || 1,\n    size: params.size || 10,\n    startDate: params.start_date,\n    endDate: params.end_date,\n    location: params.location,\n    assistant: params.assistant,\n    inquirer: params.inquirer\n  }\n  \n  // 移除undefined的参数\n  Object.keys(convertedParams).forEach(key => {\n    if (convertedParams[key] === undefined) {\n      delete convertedParams[key]\n    }\n  })\n  \n  return request({\n    url: '/record/search',\n    method: 'get',\n    params: convertedParams\n  })\n}\n\n// 添加笔录\nexport function addRecord(data) {\n  return request({\n    url: '/record/add',\n    method: 'post',\n    data\n  })\n}\n\n// 更新笔录\nexport function updateRecord(id, data) {\n  return request({\n    url: `/record/${id}`,\n    method: 'put',\n    data\n  })\n}\n\n// 删除笔录\nexport function deleteRecord(id) {\n  return request({\n    url: `/record/${id}`,\n    method: 'delete'\n  })\n}\n\n// 上传笔录附件\nexport function uploadRecordAttachment(id, file) {\n  const formData = new FormData()\n  formData.append('file', file)\n  \n  return request({\n    url: `/record/${id}/upload`,\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n}\n\n// 导出笔录\nexport function exportRecord(id) {\n  return request({\n    url: `/record/export/${id}`,\n    method: 'get',\n    responseType: 'blob'\n  })\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}