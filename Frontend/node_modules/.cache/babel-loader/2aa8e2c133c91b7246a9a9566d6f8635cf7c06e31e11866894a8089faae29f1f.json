{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport secrecyTemplateApi from '@/api/secrecyTemplate';\nimport message from '@/utils/message';\nexport default {\n  name: 'TemplateManagement',\n  data() {\n    return {\n      activeTab: 'general',\n      showAddModal: false,\n      showImportModal: false,\n      editingTemplate: null,\n      selectedFile: null,\n      loading: false,\n      templateForm: {\n        templateType: '',\n        question: '',\n        sortOrder: 0\n      },\n      templateTypes: [{\n        key: 'general',\n        name: '一般保密审查'\n      }, {\n        key: 'secret',\n        name: '机密级审查'\n      }, {\n        key: 'topsecret',\n        name: '绝密级审查'\n      }, {\n        key: 'special',\n        name: '特殊审查'\n      }],\n      templates: {\n        general: [],\n        secret: [],\n        topsecret: [],\n        special: []\n      }\n    };\n  },\n  methods: {\n    // API调用方法\n    async loadTemplates(templateType = null) {\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.getAllTemplates(templateType);\n        if (response.data.code === 200) {\n          const templates = response.data.data;\n          if (templateType) {\n            this.templates[templateType] = templates;\n          } else {\n            // 按类型分组\n            this.templateTypes.forEach(type => {\n              this.templates[type.key] = templates.filter(t => t.templateType === type.key);\n            });\n          }\n        } else {\n          message.error(response.data.message || '加载模板失败');\n        }\n      } catch (error) {\n        console.error('加载模板失败:', error);\n        message.error('加载模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async saveTemplate() {\n      try {\n        if (!this.templateForm.templateType || !this.templateForm.question) {\n          message.warning('请填写完整信息');\n          return;\n        }\n        this.loading = true;\n        let response;\n        if (this.editingTemplate) {\n          // 编辑模板\n          response = await secrecyTemplateApi.editTemplate(this.editingTemplate.id, {\n            templateType: this.templateForm.templateType,\n            question: this.templateForm.question,\n            sortOrder: this.templateForm.sortOrder || 0\n          });\n        } else {\n          // 添加模板\n          response = await secrecyTemplateApi.addTemplateWithCategory(this.templateForm.templateType, this.templateForm.question, this.templateForm.sortOrder || 0);\n        }\n        if (response.data.code === 200) {\n          message.success(this.editingTemplate ? '更新成功' : '添加成功');\n          this.closeAddModal();\n          await this.loadTemplates(this.templateForm.templateType);\n        } else {\n          message.error(response.data.message || '操作失败');\n        }\n      } catch (error) {\n        console.error('保存模板失败:', error);\n        message.error('保存模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async deleteTemplate(id) {\n      if (!confirm('确定要删除这个模板吗？')) {\n        return;\n      }\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.deleteTemplate(id);\n        if (response.data.code === 200) {\n          message.success('删除成功');\n          await this.loadTemplates(this.activeTab);\n        } else {\n          message.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        console.error('删除模板失败:', error);\n        message.error('删除模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async deleteTemplateType() {\n      const typeName = this.getCurrentTypeName();\n      if (!confirm(`确定要删除整个\"${typeName}\"类型的所有模板吗？`)) {\n        return;\n      }\n      try {\n        this.loading = true;\n        const response = await axios.delete(`${this.apiBaseUrl}/delete_type`, {\n          params: {\n            templateType: this.activeTab\n          }\n        });\n        if (response.data.code === 200) {\n          this.$message.success('删除类型成功');\n          await this.loadTemplates(this.activeTab);\n        } else {\n          this.$message.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        console.error('删除模板类型失败:', error);\n        this.$message.error('删除模板类型失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async importTemplates() {\n      if (!this.selectedFile) {\n        this.$message.warning('请选择文件');\n        return;\n      }\n      try {\n        this.loading = true;\n        const formData = new FormData();\n        formData.append('file', this.selectedFile);\n        let response;\n        if (this.selectedFile.name.endsWith('.csv')) {\n          response = await axios.post(`${this.apiBaseUrl}/import_csv`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n        } else {\n          response = await axios.post(`${this.apiBaseUrl}/import`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n        }\n        if (response.data.code === 200) {\n          this.$message.success(`成功导入${response.data.data}条数据`);\n          this.showImportModal = false;\n          this.selectedFile = null;\n          await this.loadTemplates();\n        } else {\n          this.$message.error(response.data.message || '导入失败');\n        }\n      } catch (error) {\n        console.error('导入模板失败:', error);\n        this.$message.error('导入模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async exportTemplates() {\n      try {\n        this.loading = true;\n        const params = this.activeTab ? {\n          templateType: this.activeTab\n        } : {};\n        const response = await axios.get(`${this.apiBaseUrl}/export`, {\n          params,\n          responseType: 'blob'\n        });\n\n        // 创建下载链接\n        const blob = new Blob([response.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `secrecy_templates_${this.activeTab || 'all'}.xlsx`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n        this.$message.success('导出成功');\n      } catch (error) {\n        console.error('导出模板失败:', error);\n        this.$message.error('导出模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleFileSelect(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    closeAddModal() {\n      this.showAddModal = false;\n      this.editingTemplate = null;\n      this.templateForm = {\n        templateType: '',\n        question: '',\n        sortOrder: 0\n      };\n    },\n    // UI辅助方法\n    getCurrentTemplates() {\n      return this.templates[this.activeTab] || [];\n    },\n    getCurrentTypeName() {\n      const type = this.templateTypes.find(t => t.key === this.activeTab);\n      return type ? type.name : '';\n    },\n    getTemplateCount(typeKey) {\n      return this.templates[typeKey] ? this.templates[typeKey].length : 0;\n    },\n    editTemplate(template) {\n      this.editingTemplate = template;\n      this.templateForm = {\n        templateType: this.activeTab,\n        question: template.question,\n        sortOrder: template.sortOrder\n      };\n      this.showAddModal = true;\n    },\n    formatDate(dateStr) {\n      return new Date(dateStr).toLocaleString('zh-CN');\n    }\n  },\n  watch: {\n    activeTab(newTab) {\n      // 当切换标签时，如果该类型的模板还没有加载，则加载\n      if (this.templates[newTab].length === 0) {\n        this.loadTemplates(newTab);\n      }\n    }\n  },\n  async mounted() {\n    console.log('模版管理页面已加载');\n    // 页面加载时获取所有模板数据\n    await this.loadTemplates();\n  }\n};","map":{"version":3,"names":["secrecyTemplateApi","message","name","data","activeTab","showAddModal","showImportModal","editingTemplate","selectedFile","loading","templateForm","templateType","question","sortOrder","templateTypes","key","templates","general","secret","topsecret","special","methods","loadTemplates","response","getAllTemplates","code","forEach","type","filter","t","error","console","saveTemplate","warning","editTemplate","id","addTemplateWithCategory","success","closeAddModal","deleteTemplate","confirm","deleteTemplateType","typeName","getCurrentTypeName","axios","delete","apiBaseUrl","params","$message","importTemplates","formData","FormData","append","endsWith","post","headers","exportTemplates","get","responseType","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleFileSelect","event","target","files","getCurrentTemplates","find","getTemplateCount","typeKey","length","template","formatDate","dateStr","Date","toLocaleString","watch","newTab","mounted","log"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/views/TemplateManagement.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <!-- 页面标题区域 -->\n    <div class=\"row mb-4\">\n      <div class=\"col-12 text-center\">\n        <h2 class=\"display-5 fw-bold text-primary\">保密问答模板管理</h2>\n        <p class=\"text-muted\">管理和维护各类保密审查问题模板</p>\n      </div>\n    </div>\n    \n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card border-0 shadow-lg rounded-4 overflow-hidden\">\n          <!-- 操作按钮区域 -->\n          <div class=\"card-header bg-white border-0 p-4\">\n            <div class=\"d-flex justify-content-between align-items-center\">\n              <div>\n                <h4 class=\"fw-bold text-primary mb-0\">\n                  <i class=\"bi bi-gear me-2\"></i>模板管理\n                </h4>\n              </div>\n              <div class=\"btn-group\">\n                <button class=\"btn btn-primary\" @click=\"showAddModal = true\" :disabled=\"loading\">\n                  <i class=\"bi bi-plus-circle me-2\"></i>添加模板\n                </button>\n                <button class=\"btn btn-success\" @click=\"showImportModal = true\" :disabled=\"loading\">\n                  <i class=\"bi bi-upload me-2\"></i>导入模板\n                </button>\n                <button class=\"btn btn-info\" @click=\"exportTemplates\" :disabled=\"loading\">\n                  <i class=\"bi bi-download me-2\"></i>导出模板\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 标签导航 -->\n          <div class=\"card-header bg-white border-0 p-0\">\n            <ul class=\"nav nav-tabs nav-fill custom-tabs\" role=\"tablist\">\n              <li class=\"nav-item\" role=\"presentation\" v-for=\"type in templateTypes\" :key=\"type.key\">\n                <button \n                  class=\"nav-link\" \n                  :class=\"{ active: activeTab === type.key }\"\n                  @click=\"activeTab = type.key\"\n                  type=\"button\" \n                  role=\"tab\"\n                >\n                  <i class=\"fas fa-shield-alt me-2\"></i>{{ type.name }}\n                  <span class=\"badge bg-primary rounded-pill ms-2\">{{ getTemplateCount(type.key) }}</span>\n                </button>\n              </li>\n            </ul>\n          </div>\n          \n          <!-- 标签内容 -->\n          <div class=\"card-body p-4\">\n            <div class=\"tab-content\">\n              <div class=\"tab-pane fade show active\">\n                <div class=\"d-flex justify-content-between align-items-center mb-4\">\n                  <div>\n                    <h3 class=\"fw-bold text-primary mb-0\">\n                      <i class=\"fas fa-list-alt me-2\"></i>{{ getCurrentTypeName() }}\n                      <span class=\"badge bg-primary rounded-pill ms-2\">{{ getCurrentTemplates().length }}</span>\n                    </h3>\n                    <div class=\"border-bottom border-2 border-primary mt-2\" style=\"width: 50px;\"></div>\n                  </div>\n                  <div class=\"btn-group\">\n                    <button \n                      class=\"btn btn-primary px-4 py-2 d-flex align-items-center shadow-sm\" \n                      @click=\"showAddModal = true\"\n                      :disabled=\"loading\"\n                    >\n                      <i class=\"fas fa-plus-circle me-2\"></i> 添加问题\n                    </button>\n                    <button \n                      v-if=\"getCurrentTemplates().length > 0\"\n                      class=\"btn btn-danger px-4 py-2 d-flex align-items-center shadow-sm\" \n                      @click=\"deleteTemplateType\"\n                      :disabled=\"loading\"\n                    >\n                      <i class=\"fas fa-trash-alt me-2\"></i> 删除类型\n                    </button>\n                  </div>\n                </div>\n                \n                <!-- 问题列表 -->\n                <div class=\"table-responsive rounded-4 shadow-sm\">\n                  <table class=\"table table-hover mb-0\">\n                    <thead>\n                      <tr class=\"bg-light\">\n                        <th width=\"5%\" class=\"py-3 ps-4 text-primary\">序号</th>\n                        <th width=\"80%\" class=\"py-3 text-primary\">问题</th>\n                        <th width=\"15%\" class=\"py-3 text-center text-primary\">操作</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr \n                        v-for=\"(template, index) in getCurrentTemplates()\" \n                        :key=\"template.id\" \n                        class=\"border-bottom question-item\"\n                      >\n                        <td class=\"py-3 ps-4 fw-bold text-muted\">{{ index + 1 }}</td>\n                        <td class=\"py-3 question-text\">{{ template.question }}</td>\n                        <td class=\"py-3 text-center\">\n                          <div class=\"btn-group\">\n                            <button \n                              class=\"btn btn-sm btn-outline-primary edit-btn\" \n                              @click=\"editTemplate(template)\"\n                              :disabled=\"loading\"\n                            >\n                              <i class=\"fas fa-edit me-1\"></i> 编辑\n                            </button>\n                            <button \n                              class=\"btn btn-sm btn-outline-danger delete-btn\" \n                              @click=\"deleteTemplate(template.id)\"\n                              :disabled=\"loading\"\n                            >\n                              <i class=\"fas fa-trash-alt me-1\"></i> 删除\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                      <tr v-if=\"getCurrentTemplates().length === 0\">\n                        <td colspan=\"3\" class=\"text-center py-5\">\n                          <div class=\"empty-state\">\n                            <i class=\"fas fa-inbox fa-3x mb-3 text-secondary opacity-50\"></i>\n                            <h5 class=\"text-secondary\">暂无问题模板</h5>\n                            <p class=\"text-muted\">点击\"添加问题\"按钮创建新的问题模板</p>\n                          </div>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 添加/编辑模板模态框 -->\n    <div class=\"modal fade\" :class=\"{ show: showAddModal }\" :style=\"{ display: showAddModal ? 'block' : 'none' }\" tabindex=\"-1\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"bi bi-plus-circle me-2\"></i>{{ editingTemplate ? '编辑模板' : '添加模板' }}\n            </h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"closeAddModal\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <form @submit.prevent=\"saveTemplate\">\n              <div class=\"mb-3\">\n                <label for=\"templateType\" class=\"form-label\">模板类型</label>\n                <select class=\"form-select\" id=\"templateType\" v-model=\"templateForm.templateType\" required>\n                  <option value=\"\">请选择模板类型</option>\n                  <option v-for=\"type in templateTypes\" :key=\"type.key\" :value=\"type.key\">\n                    {{ type.name }}\n                  </option>\n                </select>\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"question\" class=\"form-label\">问题内容</label>\n                <textarea \n                  class=\"form-control\" \n                  id=\"question\" \n                  rows=\"4\" \n                  v-model=\"templateForm.question\" \n                  placeholder=\"请输入问题内容\"\n                  required\n                ></textarea>\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"sortOrder\" class=\"form-label\">排序</label>\n                <input \n                  type=\"number\" \n                  class=\"form-control\" \n                  id=\"sortOrder\" \n                  v-model=\"templateForm.sortOrder\" \n                  placeholder=\"排序号（数字越小越靠前）\"\n                />\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeAddModal\" :disabled=\"loading\">取消</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"saveTemplate\" :disabled=\"loading\">\n              <i class=\"bi bi-check-circle me-2\"></i>{{ loading ? '保存中...' : '保存' }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 导入模板模态框 -->\n    <div class=\"modal fade\" :class=\"{ show: showImportModal }\" :style=\"{ display: showImportModal ? 'block' : 'none' }\" tabindex=\"-1\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\">\n              <i class=\"bi bi-upload me-2\"></i>导入模板\n            </h5>\n            <button type=\"button\" class=\"btn-close\" @click=\"showImportModal = false\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"mb-3\">\n              <label for=\"importFile\" class=\"form-label\">选择文件</label>\n              <input \n                type=\"file\" \n                class=\"form-control\" \n                id=\"importFile\" \n                @change=\"handleFileSelect\"\n                accept=\".xlsx,.xls,.csv\"\n              />\n              <div class=\"form-text\">支持Excel (.xlsx, .xls) 和CSV (.csv) 格式</div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showImportModal = false\" :disabled=\"loading\">取消</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"importTemplates\" :disabled=\"!selectedFile || loading\">\n              <i class=\"bi bi-upload me-2\"></i>{{ loading ? '导入中...' : '导入' }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 模态框背景 -->\n    <div v-if=\"showAddModal || showImportModal\" class=\"modal-backdrop fade show\"></div>\n  </div>\n</template>\n\n<script>\nimport secrecyTemplateApi from '@/api/secrecyTemplate'\nimport message from '@/utils/message'\n\nexport default {\n  name: 'TemplateManagement',\n  data() {\n    return {\n      activeTab: 'general',\n      showAddModal: false,\n      showImportModal: false,\n      editingTemplate: null,\n      selectedFile: null,\n      loading: false,\n      templateForm: {\n        templateType: '',\n        question: '',\n        sortOrder: 0\n      },\n      templateTypes: [\n        { key: 'general', name: '一般保密审查' },\n        { key: 'secret', name: '机密级审查' },\n        { key: 'topsecret', name: '绝密级审查' },\n        { key: 'special', name: '特殊审查' }\n      ],\n      templates: {\n        general: [],\n        secret: [],\n        topsecret: [],\n        special: []\n      }\n    }\n  },\n  methods: {\n    // API调用方法\n    async loadTemplates(templateType = null) {\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.getAllTemplates(templateType);\n        \n        if (response.data.code === 200) {\n          const templates = response.data.data;\n          if (templateType) {\n            this.templates[templateType] = templates;\n          } else {\n            // 按类型分组\n            this.templateTypes.forEach(type => {\n              this.templates[type.key] = templates.filter(t => t.templateType === type.key);\n            });\n          }\n        } else {\n          message.error(response.data.message || '加载模板失败');\n        }\n      } catch (error) {\n        console.error('加载模板失败:', error);\n        message.error('加载模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async saveTemplate() {\n      try {\n        if (!this.templateForm.templateType || !this.templateForm.question) {\n          message.warning('请填写完整信息');\n          return;\n        }\n\n        this.loading = true;\n        let response;\n        \n        if (this.editingTemplate) {\n          // 编辑模板\n          response = await secrecyTemplateApi.editTemplate(this.editingTemplate.id, {\n            templateType: this.templateForm.templateType,\n            question: this.templateForm.question,\n            sortOrder: this.templateForm.sortOrder || 0\n          });\n        } else {\n          // 添加模板\n          response = await secrecyTemplateApi.addTemplateWithCategory(\n            this.templateForm.templateType,\n            this.templateForm.question,\n            this.templateForm.sortOrder || 0\n          );\n        }\n\n        if (response.data.code === 200) {\n          message.success(this.editingTemplate ? '更新成功' : '添加成功');\n          this.closeAddModal();\n          await this.loadTemplates(this.templateForm.templateType);\n        } else {\n          message.error(response.data.message || '操作失败');\n        }\n      } catch (error) {\n        console.error('保存模板失败:', error);\n        message.error('保存模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async deleteTemplate(id) {\n      if (!confirm('确定要删除这个模板吗？')) {\n        return;\n      }\n\n      try {\n        this.loading = true;\n        const response = await secrecyTemplateApi.deleteTemplate(id);\n\n        if (response.data.code === 200) {\n          message.success('删除成功');\n          await this.loadTemplates(this.activeTab);\n        } else {\n          message.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        console.error('删除模板失败:', error);\n        message.error('删除模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async deleteTemplateType() {\n      const typeName = this.getCurrentTypeName();\n      if (!confirm(`确定要删除整个\"${typeName}\"类型的所有模板吗？`)) {\n        return;\n      }\n\n      try {\n        this.loading = true;\n        const response = await axios.delete(`${this.apiBaseUrl}/delete_type`, {\n          params: { templateType: this.activeTab }\n        });\n\n        if (response.data.code === 200) {\n          this.$message.success('删除类型成功');\n          await this.loadTemplates(this.activeTab);\n        } else {\n          this.$message.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        console.error('删除模板类型失败:', error);\n        this.$message.error('删除模板类型失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async importTemplates() {\n      if (!this.selectedFile) {\n        this.$message.warning('请选择文件');\n        return;\n      }\n\n      try {\n        this.loading = true;\n        const formData = new FormData();\n        formData.append('file', this.selectedFile);\n\n        let response;\n        if (this.selectedFile.name.endsWith('.csv')) {\n          response = await axios.post(`${this.apiBaseUrl}/import_csv`, formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n          });\n        } else {\n          response = await axios.post(`${this.apiBaseUrl}/import`, formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n          });\n        }\n\n        if (response.data.code === 200) {\n          this.$message.success(`成功导入${response.data.data}条数据`);\n          this.showImportModal = false;\n          this.selectedFile = null;\n          await this.loadTemplates();\n        } else {\n          this.$message.error(response.data.message || '导入失败');\n        }\n      } catch (error) {\n        console.error('导入模板失败:', error);\n        this.$message.error('导入模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async exportTemplates() {\n      try {\n        this.loading = true;\n        const params = this.activeTab ? { templateType: this.activeTab } : {};\n        const response = await axios.get(`${this.apiBaseUrl}/export`, {\n          params,\n          responseType: 'blob'\n        });\n\n        // 创建下载链接\n        const blob = new Blob([response.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `secrecy_templates_${this.activeTab || 'all'}.xlsx`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n\n        this.$message.success('导出成功');\n      } catch (error) {\n        console.error('导出模板失败:', error);\n        this.$message.error('导出模板失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    handleFileSelect(event) {\n      this.selectedFile = event.target.files[0];\n    },\n\n    closeAddModal() {\n      this.showAddModal = false;\n      this.editingTemplate = null;\n      this.templateForm = {\n        templateType: '',\n        question: '',\n        sortOrder: 0\n      };\n    },\n\n    // UI辅助方法\n    getCurrentTemplates() {\n      return this.templates[this.activeTab] || [];\n    },\n\n    getCurrentTypeName() {\n      const type = this.templateTypes.find(t => t.key === this.activeTab);\n      return type ? type.name : '';\n    },\n\n    getTemplateCount(typeKey) {\n      return this.templates[typeKey] ? this.templates[typeKey].length : 0;\n    },\n\n    editTemplate(template) {\n      this.editingTemplate = template;\n      this.templateForm = {\n        templateType: this.activeTab,\n        question: template.question,\n        sortOrder: template.sortOrder\n      };\n      this.showAddModal = true;\n    },\n\n    formatDate(dateStr) {\n      return new Date(dateStr).toLocaleString('zh-CN');\n    }\n  },\n  watch: {\n    activeTab(newTab) {\n      // 当切换标签时，如果该类型的模板还没有加载，则加载\n      if (this.templates[newTab].length === 0) {\n        this.loadTemplates(newTab);\n      }\n    }\n  },\n  async mounted() {\n    console.log('模版管理页面已加载');\n    // 页面加载时获取所有模板数据\n    await this.loadTemplates();\n  }\n}\n</script>\n\n<style scoped>\n.template-card {\n  transition: all 0.3s ease;\n}\n\n.template-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.btn {\n  transition: all 0.3s ease;\n}\n\n.btn:hover {\n  transform: translateY(-1px);\n}\n\n.nav-tabs .nav-link {\n  border: none;\n  border-radius: 0;\n  color: #6c757d;\n  font-weight: 500;\n  padding: 1rem 1.5rem;\n  transition: all 0.3s ease;\n}\n\n.nav-tabs .nav-link.active {\n  background-color: #0d6efd;\n  color: white;\n  border-bottom: 3px solid #0d6efd;\n}\n\n.nav-tabs .nav-link:hover {\n  background-color: rgba(13, 110, 253, 0.1);\n  color: #0d6efd;\n}\n\n.modal {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.form-control:focus, .form-select:focus {\n  border-color: #0d6efd;\n  box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);\n}\n\n.table th {\n  font-weight: 600;\n  border-bottom: 2px solid #dee2e6;\n  background-color: #f8f9fa;\n}\n\n.badge {\n  font-size: 0.75rem;\n}\n\n.empty-state {\n  padding: 3rem;\n  text-align: center;\n}\n\n.stats-card {\n  transition: all 0.3s ease;\n}\n\n.stats-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n}\n\n.stats-icon {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  margin: 0 auto;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}