{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 假设有一个验证笔录的API\n// import { verifyRecord as verifyRecordApi } from '@/api/record'\n\nexport default {\n  name: 'RecordVerify',\n  props: {\n    // 笔录ID\n    recordId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      docxFile: null,\n      verifying: false,\n      progress: 0,\n      statusMessage: '',\n      verificationResult: null,\n      error: null\n    };\n  },\n  methods: {\n    // 处理文件上传\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        // 检查文件类型\n        if (!file.name.endsWith('.docx')) {\n          this.error = '请上传.docx格式的文档';\n          this.docxFile = null;\n          return;\n        }\n        this.docxFile = file;\n        this.error = null;\n      }\n    },\n    // 验证笔录\n    async verifyRecord() {\n      if (!this.docxFile) {\n        this.error = '请选择要验证的文档';\n        return;\n      }\n      this.verifying = true;\n      this.error = null;\n      this.progress = 0;\n      this.statusMessage = '正在准备验证...';\n\n      // 模拟进度条\n      this.simulateProgress();\n      try {\n        // 创建FormData对象\n        const formData = new FormData();\n        formData.append('file', this.docxFile);\n\n        // 调用验证API\n        // const response = await verifyRecordApi(this.recordId, formData)\n\n        // 模拟API调用延迟\n        await new Promise(resolve => setTimeout(resolve, 3000));\n\n        // 模拟验证结果\n        const success = Math.random() > 0.3; // 70%概率成功\n\n        // 设置验证结果\n        this.verificationResult = {\n          success,\n          recordName: '示例笔录名称',\n          inquiryTime: new Date().toISOString(),\n          message: success ? '文档完整性验证通过，内容未被篡改' : '文档内容已被修改，验证失败'\n        };\n\n        // 完成进度条\n        this.progress = 100;\n        this.statusMessage = '验证完成';\n      } catch (error) {\n        console.error('验证笔录失败:', error);\n        this.error = error.message || '验证笔录失败';\n        this.verificationResult = {\n          success: false,\n          message: '验证过程发生错误'\n        };\n      } finally {\n        // 延迟关闭验证中状态，让用户看到100%进度\n        setTimeout(() => {\n          this.verifying = false;\n        }, 500);\n      }\n    },\n    // 模拟进度条\n    simulateProgress() {\n      const interval = setInterval(() => {\n        if (this.progress >= 90) {\n          clearInterval(interval);\n          return;\n        }\n\n        // 随机增加进度\n        const increment = Math.floor(Math.random() * 10) + 1;\n        this.progress = Math.min(this.progress + increment, 90);\n\n        // 更新状态消息\n        if (this.progress < 30) {\n          this.statusMessage = '正在读取文档内容...';\n        } else if (this.progress < 60) {\n          this.statusMessage = '正在验证文档完整性...';\n        } else {\n          this.statusMessage = '正在比对加密哈希值...';\n        }\n      }, 300);\n    },\n    // 重置验证\n    resetVerification() {\n      this.docxFile = null;\n      this.verifying = false;\n      this.progress = 0;\n      this.statusMessage = '';\n      this.verificationResult = null;\n      this.error = null;\n\n      // 重置文件输入框\n      const fileInput = document.getElementById('docxFile');\n      if (fileInput) {\n        fileInput.value = '';\n      }\n    },\n    // 取消验证\n    cancel() {\n      this.$router.push(`/record/${this.recordId}`);\n    },\n    // 格式化日期时间\n    formatDateTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","recordId","type","String","Number","required","data","docxFile","verifying","progress","statusMessage","verificationResult","error","methods","handleFileUpload","event","file","target","files","endsWith","verifyRecord","simulateProgress","formData","FormData","append","Promise","resolve","setTimeout","success","Math","random","recordName","inquiryTime","Date","toISOString","message","console","interval","setInterval","clearInterval","increment","floor","min","resetVerification","fileInput","document","getElementById","value","cancel","$router","push","formatDateTime","dateString","date","toLocaleString","year","month","day","hour","minute","second"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/components/record/RecordVerify.vue"],"sourcesContent":["<template>\n  <div class=\"record-verify\">\n    <div class=\"container-fluid py-3\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-8 col-lg-6\">\n          <div class=\"card shadow-sm\">\n            <div class=\"card-header bg-primary bg-gradient text-white\">\n              <h5 class=\"mb-0\">\n                <i class=\"bi bi-shield-check me-2\"></i>\n                笔录验证\n              </h5>\n            </div>\n            <div class=\"card-body\">\n              <!-- 验证说明 -->\n              <div class=\"alert alert-info mb-4\">\n                <i class=\"bi bi-info-circle-fill me-2\"></i>\n                <strong>验证说明：</strong> 请上传导出的Word文档(.docx)，系统将验证文档的完整性和真实性。\n              </div>\n              \n              <!-- 验证表单 -->\n              <form @submit.prevent=\"verifyRecord\" v-if=\"!verifying && !verificationResult\">\n                <!-- 笔录ID显示 -->\n                <div class=\"mb-3\">\n                  <label class=\"form-label\">笔录ID</label>\n                  <input type=\"text\" class=\"form-control\" :value=\"recordId\" readonly>\n                </div>\n                \n                <!-- 文件上传 -->\n                <div class=\"mb-3\">\n                  <label for=\"docxFile\" class=\"form-label\">Word文档 <span class=\"text-danger\">*</span></label>\n                  <input\n                    type=\"file\"\n                    class=\"form-control\"\n                    id=\"docxFile\"\n                    @change=\"handleFileUpload\"\n                    accept=\".docx\"\n                    required\n                  >\n                  <div class=\"form-text\">请上传.docx格式的文档</div>\n                </div>\n                \n                <!-- 错误提示 -->\n                <div v-if=\"error\" class=\"alert alert-danger\">\n                  <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n                  {{ error }}\n                </div>\n                \n                <!-- 按钮组 -->\n                <div class=\"d-flex justify-content-end gap-2 mt-4\">\n                  <button type=\"button\" class=\"btn btn-secondary\" @click=\"cancel\">\n                    <i class=\"bi bi-x-circle me-1\"></i>取消\n                  </button>\n                  <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"!docxFile\">\n                    <i class=\"bi bi-shield-check me-1\"></i>开始验证\n                  </button>\n                </div>\n              </form>\n              \n              <!-- 验证中状态 -->\n              <div v-if=\"verifying\" class=\"verification-progress\">\n                <div class=\"text-center mb-4\">\n                  <div class=\"verification-icon\">\n                    <i class=\"bi bi-shield\"></i>\n                  </div>\n                </div>\n                \n                <div class=\"progress mb-3\">\n                  <div\n                    class=\"progress-bar progress-bar-striped progress-bar-animated\"\n                    role=\"progressbar\"\n                    :style=\"{ width: `${progress}%` }\"\n                    :aria-valuenow=\"progress\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                  ></div>\n                </div>\n                \n                <p class=\"text-center mb-4\">{{ statusMessage }}</p>\n              </div>\n              \n              <!-- 验证结果 -->\n              <div v-if=\"verificationResult\" class=\"verification-result\">\n                <div class=\"text-center mb-4\">\n                  <div\n                    class=\"verification-icon\"\n                    :class=\"{\n                      'success-pulse': verificationResult.success,\n                      'error-pulse': !verificationResult.success\n                    }\"\n                  >\n                    <i\n                      class=\"bi\"\n                      :class=\"{\n                        'bi-shield-check': verificationResult.success,\n                        'bi-shield-x': !verificationResult.success\n                      }\"\n                    ></i>\n                  </div>\n                </div>\n                \n                <div\n                  class=\"alert\"\n                  :class=\"{\n                    'alert-success': verificationResult.success,\n                    'alert-danger': !verificationResult.success\n                  }\"\n                >\n                  <div class=\"d-flex align-items-center\">\n                    <i\n                      class=\"bi me-2\"\n                      :class=\"{\n                        'bi-check-circle-fill': verificationResult.success,\n                        'bi-x-circle-fill': !verificationResult.success\n                      }\"\n                    ></i>\n                    <strong>\n                      {{ verificationResult.success ? '验证成功' : '验证失败' }}\n                    </strong>\n                  </div>\n                </div>\n                \n                <!-- 验证详情 -->\n                <div class=\"card mb-3\">\n                  <div class=\"card-header bg-light\">验证详情</div>\n                  <div class=\"card-body\">\n                    <div class=\"mb-2\">\n                      <strong>笔录名称：</strong> {{ verificationResult.recordName || '未知' }}\n                    </div>\n                    <div class=\"mb-2\">\n                      <strong>询问时间：</strong> {{ formatDateTime(verificationResult.inquiryTime) || '未知' }}\n                    </div>\n                    <div class=\"mb-2\">\n                      <strong>验证状态：</strong>\n                      <span\n                        class=\"badge\"\n                        :class=\"{\n                          'bg-success': verificationResult.success,\n                          'bg-danger': !verificationResult.success\n                        }\"\n                      >\n                        {{ verificationResult.success ? '完整性验证通过' : '完整性验证失败' }}\n                      </span>\n                    </div>\n                    <div v-if=\"verificationResult.message\">\n                      <strong>验证信息：</strong> {{ verificationResult.message }}\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- 按钮组 -->\n                <div class=\"d-flex justify-content-end gap-2 mt-4\">\n                  <button type=\"button\" class=\"btn btn-secondary\" @click=\"cancel\">\n                    <i class=\"bi bi-arrow-left me-1\"></i>返回\n                  </button>\n                  <button type=\"button\" class=\"btn btn-primary\" @click=\"resetVerification\">\n                    <i class=\"bi bi-arrow-repeat me-1\"></i>重新验证\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// 假设有一个验证笔录的API\n// import { verifyRecord as verifyRecordApi } from '@/api/record'\n\nexport default {\n  name: 'RecordVerify',\n  props: {\n    // 笔录ID\n    recordId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      docxFile: null,\n      verifying: false,\n      progress: 0,\n      statusMessage: '',\n      verificationResult: null,\n      error: null\n    }\n  },\n  methods: {\n    // 处理文件上传\n    handleFileUpload(event) {\n      const file = event.target.files[0]\n      if (file) {\n        // 检查文件类型\n        if (!file.name.endsWith('.docx')) {\n          this.error = '请上传.docx格式的文档'\n          this.docxFile = null\n          return\n        }\n        \n        this.docxFile = file\n        this.error = null\n      }\n    },\n    \n    // 验证笔录\n    async verifyRecord() {\n      if (!this.docxFile) {\n        this.error = '请选择要验证的文档'\n        return\n      }\n      \n      this.verifying = true\n      this.error = null\n      this.progress = 0\n      this.statusMessage = '正在准备验证...'\n      \n      // 模拟进度条\n      this.simulateProgress()\n      \n      try {\n        // 创建FormData对象\n        const formData = new FormData()\n        formData.append('file', this.docxFile)\n        \n        // 调用验证API\n        // const response = await verifyRecordApi(this.recordId, formData)\n        \n        // 模拟API调用延迟\n        await new Promise(resolve => setTimeout(resolve, 3000))\n        \n        // 模拟验证结果\n        const success = Math.random() > 0.3 // 70%概率成功\n        \n        // 设置验证结果\n        this.verificationResult = {\n          success,\n          recordName: '示例笔录名称',\n          inquiryTime: new Date().toISOString(),\n          message: success ? '文档完整性验证通过，内容未被篡改' : '文档内容已被修改，验证失败'\n        }\n        \n        // 完成进度条\n        this.progress = 100\n        this.statusMessage = '验证完成'\n      } catch (error) {\n        console.error('验证笔录失败:', error)\n        this.error = error.message || '验证笔录失败'\n        this.verificationResult = {\n          success: false,\n          message: '验证过程发生错误'\n        }\n      } finally {\n        // 延迟关闭验证中状态，让用户看到100%进度\n        setTimeout(() => {\n          this.verifying = false\n        }, 500)\n      }\n    },\n    \n    // 模拟进度条\n    simulateProgress() {\n      const interval = setInterval(() => {\n        if (this.progress >= 90) {\n          clearInterval(interval)\n          return\n        }\n        \n        // 随机增加进度\n        const increment = Math.floor(Math.random() * 10) + 1\n        this.progress = Math.min(this.progress + increment, 90)\n        \n        // 更新状态消息\n        if (this.progress < 30) {\n          this.statusMessage = '正在读取文档内容...';\n        } else if (this.progress < 60) {\n          this.statusMessage = '正在验证文档完整性...';\n        } else {\n          this.statusMessage = '正在比对加密哈希值...';\n        }\n      }, 300)\n    },\n    \n    // 重置验证\n    resetVerification() {\n      this.docxFile = null\n      this.verifying = false\n      this.progress = 0\n      this.statusMessage = ''\n      this.verificationResult = null\n      this.error = null\n      \n      // 重置文件输入框\n      const fileInput = document.getElementById('docxFile')\n      if (fileInput) {\n        fileInput.value = ''\n      }\n    },\n    \n    // 取消验证\n    cancel() {\n      this.$router.push(`/record/${this.recordId}`)\n    },\n    \n    // 格式化日期时间\n    formatDateTime(dateString) {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.verification-icon {\n  font-size: 4rem;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background-color: #f8f9fa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  color: #6c757d;\n}\n\n.verification-icon.success-pulse {\n  animation: success-pulse 2s infinite;\n  color: #198754;\n}\n\n.verification-icon.error-pulse {\n  animation: error-pulse 2s infinite;\n  color: #dc3545;\n}\n\n@keyframes success-pulse {\n  0% {\n    box-shadow: 0 0 0 0 rgba(25, 135, 84, 0.7);\n  }\n  70% {\n    box-shadow: 0 0 0 15px rgba(25, 135, 84, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(25, 135, 84, 0);\n  }\n}\n\n@keyframes error-pulse {\n  0% {\n    box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7);\n  }\n  70% {\n    box-shadow: 0 0 0 15px rgba(220, 53, 69, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);\n  }\n}\n\n.progress {\n  height: 0.75rem;\n  border-radius: 1rem;\n}\n\n.progress-bar {\n  background-color: #0d6efd;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .verification-icon {\n    font-size: 3rem;\n    width: 80px;\n    height: 80px;\n  }\n}\n</style>"],"mappings":";AAwKA;AACA;;AAEA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACL;IACAC,QAAQ,EAAE;MACRC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;MACtBC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,CAAC;MACXC,aAAa,EAAE,EAAE;MACjBC,kBAAkB,EAAE,IAAI;MACxBC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,IAAIF,IAAI,EAAE;QACR;QACA,IAAI,CAACA,IAAI,CAACjB,IAAI,CAACoB,QAAQ,CAAC,OAAO,CAAC,EAAE;UAChC,IAAI,CAACP,KAAI,GAAI,eAAc;UAC3B,IAAI,CAACL,QAAO,GAAI,IAAG;UACnB;QACF;QAEA,IAAI,CAACA,QAAO,GAAIS,IAAG;QACnB,IAAI,CAACJ,KAAI,GAAI,IAAG;MAClB;IACF,CAAC;IAED;IACA,MAAMQ,YAAYA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAACb,QAAQ,EAAE;QAClB,IAAI,CAACK,KAAI,GAAI,WAAU;QACvB;MACF;MAEA,IAAI,CAACJ,SAAQ,GAAI,IAAG;MACpB,IAAI,CAACI,KAAI,GAAI,IAAG;MAChB,IAAI,CAACH,QAAO,GAAI;MAChB,IAAI,CAACC,aAAY,GAAI,WAAU;;MAE/B;MACA,IAAI,CAACW,gBAAgB,CAAC;MAEtB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC;QAC9BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACjB,QAAQ;;QAErC;QACA;;QAEA;QACA,MAAM,IAAIkB,OAAO,CAACC,OAAM,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC;;QAEtD;QACA,MAAME,OAAM,GAAIC,IAAI,CAACC,MAAM,CAAC,IAAI,GAAE,EAAE;;QAEpC;QACA,IAAI,CAACnB,kBAAiB,GAAI;UACxBiB,OAAO;UACPG,UAAU,EAAE,QAAQ;UACpBC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UACrCC,OAAO,EAAEP,OAAM,GAAI,kBAAiB,GAAI;QAC1C;;QAEA;QACA,IAAI,CAACnB,QAAO,GAAI,GAAE;QAClB,IAAI,CAACC,aAAY,GAAI,MAAK;MAC5B,EAAE,OAAOE,KAAK,EAAE;QACdwB,OAAO,CAACxB,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9B,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACuB,OAAM,IAAK,QAAO;QACrC,IAAI,CAACxB,kBAAiB,GAAI;UACxBiB,OAAO,EAAE,KAAK;UACdO,OAAO,EAAE;QACX;MACF,UAAU;QACR;QACAR,UAAU,CAAC,MAAM;UACf,IAAI,CAACnB,SAAQ,GAAI,KAAI;QACvB,CAAC,EAAE,GAAG;MACR;IACF,CAAC;IAED;IACAa,gBAAgBA,CAAA,EAAG;MACjB,MAAMgB,QAAO,GAAIC,WAAW,CAAC,MAAM;QACjC,IAAI,IAAI,CAAC7B,QAAO,IAAK,EAAE,EAAE;UACvB8B,aAAa,CAACF,QAAQ;UACtB;QACF;;QAEA;QACA,MAAMG,SAAQ,GAAIX,IAAI,CAACY,KAAK,CAACZ,IAAI,CAACC,MAAM,CAAC,IAAI,EAAE,IAAI;QACnD,IAAI,CAACrB,QAAO,GAAIoB,IAAI,CAACa,GAAG,CAAC,IAAI,CAACjC,QAAO,GAAI+B,SAAS,EAAE,EAAE;;QAEtD;QACA,IAAI,IAAI,CAAC/B,QAAO,GAAI,EAAE,EAAE;UACtB,IAAI,CAACC,aAAY,GAAI,aAAa;QACpC,OAAO,IAAI,IAAI,CAACD,QAAO,GAAI,EAAE,EAAE;UAC7B,IAAI,CAACC,aAAY,GAAI,cAAc;QACrC,OAAO;UACL,IAAI,CAACA,aAAY,GAAI,cAAc;QACrC;MACF,CAAC,EAAE,GAAG;IACR,CAAC;IAED;IACAiC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACpC,QAAO,GAAI,IAAG;MACnB,IAAI,CAACC,SAAQ,GAAI,KAAI;MACrB,IAAI,CAACC,QAAO,GAAI;MAChB,IAAI,CAACC,aAAY,GAAI,EAAC;MACtB,IAAI,CAACC,kBAAiB,GAAI,IAAG;MAC7B,IAAI,CAACC,KAAI,GAAI,IAAG;;MAEhB;MACA,MAAMgC,SAAQ,GAAIC,QAAQ,CAACC,cAAc,CAAC,UAAU;MACpD,IAAIF,SAAS,EAAE;QACbA,SAAS,CAACG,KAAI,GAAI,EAAC;MACrB;IACF,CAAC;IAED;IACAC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW,IAAI,CAACjD,QAAQ,EAAE;IAC9C,CAAC;IAED;IACAkD,cAAcA,CAACC,UAAU,EAAE;MACzB,IAAI,CAACA,UAAU,EAAE,OAAO,EAAC;MACzB,MAAMC,IAAG,GAAI,IAAIpB,IAAI,CAACmB,UAAU;MAChC,OAAOC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QAClCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;MACV,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}