{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router';\n\n// 创建axios实例\nconst instance = axios.create({\n  baseURL: process.env.NODE_ENV === 'development' ? '/api' : 'https://api.example.com',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\ninstance.interceptors.request.use(config => {\n  // 从localStorage获取token\n  const userInfo = localStorage.getItem('userInfo');\n  if (userInfo) {\n    try {\n      const {\n        token\n      } = JSON.parse(userInfo);\n      if (token) {\n        // 将token添加到请求头\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n    } catch (error) {\n      console.error('解析用户信息失败:', error);\n    }\n  }\n  return config;\n}, error => {\n  console.error('请求拦截器错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\ninstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response) {\n    const {\n      status\n    } = error.response;\n\n    // 处理401未授权错误\n    if (status === 401) {\n      console.log('用户未登录或登录已过期，正在跳转到登录页面...');\n      // 清除本地存储的用户信息\n      localStorage.removeItem('userInfo');\n      // 跳转到登录页面\n      router.push('/login');\n    }\n\n    // 处理403禁止访问错误\n    if (status === 403) {\n      console.log('没有权限访问该资源');\n    }\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","router","instance","create","baseURL","process","env","NODE_ENV","timeout","headers","interceptors","request","use","config","userInfo","localStorage","getItem","token","JSON","parse","error","console","Promise","reject","response","status","log","removeItem","push"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\nimport router from '../router';\n\n// 创建axios实例\nconst instance = axios.create({\n  baseURL: process.env.NODE_ENV === 'development' ? '/api' : 'https://api.example.com',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\ninstance.interceptors.request.use(\n  config => {\n    // 从localStorage获取token\n    const userInfo = localStorage.getItem('userInfo');\n    if (userInfo) {\n      try {\n        const { token } = JSON.parse(userInfo);\n        if (token) {\n          // 将token添加到请求头\n          config.headers['Authorization'] = `Bearer ${token}`;\n        }\n      } catch (error) {\n        console.error('解析用户信息失败:', error);\n      }\n    }\n    return config;\n  },\n  error => {\n    console.error('请求拦截器错误:', error);\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\ninstance.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    if (error.response) {\n      const { status } = error.response;\n      \n      // 处理401未授权错误\n      if (status === 401) {\n        console.log('用户未登录或登录已过期，正在跳转到登录页面...');\n        // 清除本地存储的用户信息\n        localStorage.removeItem('userInfo');\n        // 跳转到登录页面\n        router.push('/login');\n      }\n      \n      // 处理403禁止访问错误\n      if (status === 403) {\n        console.log('没有权限访问该资源');\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default instance;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;;AAE9B;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC5BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,GAAG,MAAM,GAAG,yBAAyB;EACpFC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAI;EACR;EACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,IAAIF,QAAQ,EAAE;IACZ,IAAI;MACF,MAAM;QAAEG;MAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;MACtC,IAAIG,KAAK,EAAE;QACT;QACAJ,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUQ,KAAK,EAAE;MACrD;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;IACnC;EACF;EACA,OAAOP,MAAM;AACf,CAAC,EACDO,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;EAChC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAlB,QAAQ,CAACQ,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAChCY,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACDJ,KAAK,IAAI;EACP,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAClB,MAAM;MAAEC;IAAO,CAAC,GAAGL,KAAK,CAACI,QAAQ;;IAEjC;IACA,IAAIC,MAAM,KAAK,GAAG,EAAE;MAClBJ,OAAO,CAACK,GAAG,CAAC,0BAA0B,CAAC;MACvC;MACAX,YAAY,CAACY,UAAU,CAAC,UAAU,CAAC;MACnC;MACA1B,MAAM,CAAC2B,IAAI,CAAC,QAAQ,CAAC;IACvB;;IAEA;IACA,IAAIH,MAAM,KAAK,GAAG,EAAE;MAClBJ,OAAO,CAACK,GAAG,CAAC,WAAW,CAAC;IAC1B;EACF;EAEA,OAAOJ,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAelB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}