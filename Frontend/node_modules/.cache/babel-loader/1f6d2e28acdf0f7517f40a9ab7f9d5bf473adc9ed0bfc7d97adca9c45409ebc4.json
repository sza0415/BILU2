{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, watch } from 'vue';\nexport default {\n  name: 'Pagination',\n  props: {\n    currentPage: {\n      type: Number,\n      required: true\n    },\n    pageSize: {\n      type: Number,\n      required: true\n    },\n    totalItems: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['page-change', 'page-size-change'],\n  setup(props, {\n    emit\n  }) {\n    const localPageSize = ref(props.pageSize);\n\n    // 监听 pageSize 变化\n    watch(() => props.pageSize, newSize => {\n      localPageSize.value = newSize;\n    });\n\n    // 计算总页数\n    const totalPages = computed(() => {\n      return Math.max(1, Math.ceil(props.totalItems / props.pageSize));\n    });\n\n    // 计算要显示的页码\n    const displayedPages = computed(() => {\n      const pages = [];\n      const maxDisplayed = 5; // 最多显示5个页码\n\n      if (totalPages.value <= maxDisplayed) {\n        // 如果总页数小于等于最大显示数，则显示所有页码\n        for (let i = 1; i <= totalPages.value; i++) {\n          pages.push(i);\n        }\n      } else {\n        // 否则，显示当前页附近的页码\n        let start = Math.max(1, props.currentPage - Math.floor(maxDisplayed / 2));\n        let end = start + maxDisplayed - 1;\n        if (end > totalPages.value) {\n          end = totalPages.value;\n          start = Math.max(1, end - maxDisplayed + 1);\n        }\n        for (let i = start; i <= end; i++) {\n          pages.push(i);\n        }\n      }\n      return pages;\n    });\n\n    // 切换页码\n    const changePage = page => {\n      if (page < 1 || page > totalPages.value || page === props.currentPage) {\n        return;\n      }\n      emit('page-change', page);\n    };\n\n    // 更改每页显示数量\n    const changePageSize = () => {\n      emit('page-size-change', localPageSize.value);\n    };\n    return {\n      localPageSize,\n      totalPages,\n      displayedPages,\n      changePage,\n      changePageSize\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","name","props","currentPage","type","Number","required","pageSize","totalItems","emits","setup","emit","localPageSize","newSize","value","totalPages","Math","max","ceil","displayedPages","pages","maxDisplayed","i","push","start","floor","end","changePage","page","changePageSize"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/components/case/Pagination.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex flex-column flex-md-row justify-content-between align-items-center mt-5 pt-4 border-top\">\n    <div class=\"d-flex align-items-center text-muted mb-3 mb-md-0\">\n      <span class=\"badge bg-primary bg-opacity-10 text-primary me-2 p-2\">{{ totalItems }}</span>\n      条记录，当前第 <span class=\"fw-bold text-primary\">{{ currentPage }}</span> / {{ totalPages }} 页\n      \n      <div class=\"ms-3 d-flex align-items-center\">\n        <span class=\"me-2\">每页显示:</span>\n        <select class=\"form-select form-select-sm\" v-model.number=\"localPageSize\" @change=\"changePageSize\" style=\"width: 80px;\">\n          <option :value=\"5\">5</option>\n          <option :value=\"10\">10</option>\n          <option :value=\"20\">20</option>\n          <option :value=\"50\">50</option>\n          <option :value=\"100\">100</option>\n        </select>\n      </div>\n    </div>\n    <nav aria-label=\"Page navigation\" class=\"pagination-container\">\n      <ul class=\"pagination pagination-md\">\n        <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n          <a class=\"page-link rounded-start\" href=\"#\" @click.prevent=\"changePage(1)\" title=\"首页\">\n            <i class=\"bi bi-chevron-double-left\"></i>\n          </a>\n        </li>\n        <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\n          <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(currentPage - 1)\" title=\"上一页\">\n            <i class=\"bi bi-chevron-left\"></i>\n          </a>\n        </li>\n        <li v-for=\"page in displayedPages\" :key=\"page\" class=\"page-item\" :class=\"{ active: currentPage === page }\">\n          <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(page)\">{{ page }}</a>\n        </li>\n        <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n          <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(currentPage + 1)\" title=\"下一页\">\n            <i class=\"bi bi-chevron-right\"></i>\n          </a>\n        </li>\n        <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\n          <a class=\"page-link rounded-end\" href=\"#\" @click.prevent=\"changePage(totalPages)\" title=\"末页\">\n            <i class=\"bi bi-chevron-double-right\"></i>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch } from 'vue'\n\nexport default {\n  name: 'Pagination',\n  props: {\n    currentPage: {\n      type: Number,\n      required: true\n    },\n    pageSize: {\n      type: Number,\n      required: true\n    },\n    totalItems: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['page-change', 'page-size-change'],\n  setup(props, { emit }) {\n    const localPageSize = ref(props.pageSize)\n    \n    // 监听 pageSize 变化\n    watch(() => props.pageSize, (newSize) => {\n      localPageSize.value = newSize\n    })\n    \n    // 计算总页数\n    const totalPages = computed(() => {\n      return Math.max(1, Math.ceil(props.totalItems / props.pageSize))\n    })\n    \n    // 计算要显示的页码\n    const displayedPages = computed(() => {\n      const pages = []\n      const maxDisplayed = 5 // 最多显示5个页码\n      \n      if (totalPages.value <= maxDisplayed) {\n        // 如果总页数小于等于最大显示数，则显示所有页码\n        for (let i = 1; i <= totalPages.value; i++) {\n          pages.push(i)\n        }\n      } else {\n        // 否则，显示当前页附近的页码\n        let start = Math.max(1, props.currentPage - Math.floor(maxDisplayed / 2))\n        let end = start + maxDisplayed - 1\n        \n        if (end > totalPages.value) {\n          end = totalPages.value\n          start = Math.max(1, end - maxDisplayed + 1)\n        }\n        \n        for (let i = start; i <= end; i++) {\n          pages.push(i)\n        }\n      }\n      \n      return pages\n    })\n    \n    // 切换页码\n    const changePage = (page) => {\n      if (page < 1 || page > totalPages.value || page === props.currentPage) {\n        return\n      }\n      emit('page-change', page)\n    }\n    \n    // 更改每页显示数量\n    const changePageSize = () => {\n      emit('page-size-change', localPageSize.value)\n    }\n    \n    return {\n      localPageSize,\n      totalPages,\n      displayedPages,\n      changePage,\n      changePageSize\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 分页控件美化 */\n.pagination .page-link {\n  border-radius: 4px;\n  margin: 0 2px;\n  color: #4a6cf7;\n  border: 1px solid rgba(74, 108, 247, 0.2);\n}\n\n.pagination .page-item.active .page-link {\n  background: linear-gradient(to right, #4a6cf7, #2651f0);\n  border-color: #2651f0;\n}\n\n.pagination .page-item.disabled .page-link {\n  color: #6c757d;\n  pointer-events: none;\n  background-color: #fff;\n  border-color: #dee2e6;\n}\n\n.pagination .page-link:hover {\n  background-color: rgba(74, 108, 247, 0.1);\n  border-color: rgba(74, 108, 247, 0.3);\n}\n\n.pagination .page-item.active .page-link:hover {\n  background: linear-gradient(to right, #4a6cf7, #2651f0);\n}\n</style>"],"mappings":";AAgDA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAI,QAAS,KAAI;AAEzC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDE,UAAU,EAAE;MACVJ,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,KAAK,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC;EAC1CC,KAAKA,CAACR,KAAK,EAAE;IAAES;EAAK,CAAC,EAAE;IACrB,MAAMC,aAAY,GAAId,GAAG,CAACI,KAAK,CAACK,QAAQ;;IAExC;IACAP,KAAK,CAAC,MAAME,KAAK,CAACK,QAAQ,EAAGM,OAAO,IAAK;MACvCD,aAAa,CAACE,KAAI,GAAID,OAAM;IAC9B,CAAC;;IAED;IACA,MAAME,UAAS,GAAIhB,QAAQ,CAAC,MAAM;MAChC,OAAOiB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,IAAI,CAAChB,KAAK,CAACM,UAAS,GAAIN,KAAK,CAACK,QAAQ,CAAC;IACjE,CAAC;;IAED;IACA,MAAMY,cAAa,GAAIpB,QAAQ,CAAC,MAAM;MACpC,MAAMqB,KAAI,GAAI,EAAC;MACf,MAAMC,YAAW,GAAI,GAAE;;MAEvB,IAAIN,UAAU,CAACD,KAAI,IAAKO,YAAY,EAAE;QACpC;QACA,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAKP,UAAU,CAACD,KAAK,EAAEQ,CAAC,EAAE,EAAE;UAC1CF,KAAK,CAACG,IAAI,CAACD,CAAC;QACd;MACF,OAAO;QACL;QACA,IAAIE,KAAI,GAAIR,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEf,KAAK,CAACC,WAAU,GAAIa,IAAI,CAACS,KAAK,CAACJ,YAAW,GAAI,CAAC,CAAC;QACxE,IAAIK,GAAE,GAAIF,KAAI,GAAIH,YAAW,GAAI;QAEjC,IAAIK,GAAE,GAAIX,UAAU,CAACD,KAAK,EAAE;UAC1BY,GAAE,GAAIX,UAAU,CAACD,KAAI;UACrBU,KAAI,GAAIR,IAAI,CAACC,GAAG,CAAC,CAAC,EAAES,GAAE,GAAIL,YAAW,GAAI,CAAC;QAC5C;QAEA,KAAK,IAAIC,CAAA,GAAIE,KAAK,EAAEF,CAAA,IAAKI,GAAG,EAAEJ,CAAC,EAAE,EAAE;UACjCF,KAAK,CAACG,IAAI,CAACD,CAAC;QACd;MACF;MAEA,OAAOF,KAAI;IACb,CAAC;;IAED;IACA,MAAMO,UAAS,GAAKC,IAAI,IAAK;MAC3B,IAAIA,IAAG,GAAI,KAAKA,IAAG,GAAIb,UAAU,CAACD,KAAI,IAAKc,IAAG,KAAM1B,KAAK,CAACC,WAAW,EAAE;QACrE;MACF;MACAQ,IAAI,CAAC,aAAa,EAAEiB,IAAI;IAC1B;;IAEA;IACA,MAAMC,cAAa,GAAIA,CAAA,KAAM;MAC3BlB,IAAI,CAAC,kBAAkB,EAAEC,aAAa,CAACE,KAAK;IAC9C;IAEA,OAAO;MACLF,aAAa;MACbG,UAAU;MACVI,cAAc;MACdQ,UAAU;MACVE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}