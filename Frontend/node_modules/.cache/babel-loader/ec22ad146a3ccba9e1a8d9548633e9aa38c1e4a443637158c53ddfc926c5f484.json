{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport request from './request';\n\n/**\n * 案件管理相关API\n */\n\n// 获取案件列表\nexport function getCaseList() {\n  return request({\n    url: '/case/list',\n    method: 'get'\n  });\n}\n\n// 获取案件类型\nexport function getCaseTypes() {\n  return request({\n    url: '/case/types',\n    method: 'get'\n  });\n}\n\n// 获取案件状态\nexport function getCaseStatuses() {\n  return request({\n    url: '/case/statuses',\n    method: 'get'\n  });\n}\n\n// 搜索案件\nexport function searchCases(params) {\n  console.log('调用searchCases API，参数:', params);\n\n  // 确保参数格式正确\n  const cleanParams = {\n    ...params\n  };\n\n  // 移除空字符串参数\n  Object.keys(cleanParams).forEach(key => {\n    if (cleanParams[key] === '' || cleanParams[key] === undefined || cleanParams[key] === null) {\n      console.log(`移除空参数: ${key} = ${cleanParams[key]}`);\n      delete cleanParams[key];\n    }\n  });\n\n  // 确保日期格式正确\n  const dateFields = ['startDateFrom', 'startDateTo', 'createdAtFrom', 'createdAtTo'];\n  dateFields.forEach(field => {\n    if (cleanParams[field] && typeof cleanParams[field] === 'string') {\n      // 确保日期格式为YYYY-MM-DD\n      const originalValue = cleanParams[field];\n      cleanParams[field] = cleanParams[field].split('T')[0];\n      console.log(`处理日期字段: ${field}, 原值: ${originalValue}, 新值: ${cleanParams[field]}`);\n    }\n  });\n  console.log('优化后的API参数:', cleanParams);\n\n  // 构建完整URL用于调试\n  const baseUrl = process.env.NODE_ENV === 'development' ? '/api' : 'http://localhost:8080/api';\n  const queryString = Object.keys(cleanParams).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(cleanParams[key])}`).join('&');\n  const fullUrl = `${baseUrl}/case/search${queryString ? '?' + queryString : ''}`;\n  console.log('发送请求完整URL:', fullUrl);\n  return request({\n    url: '/case/search',\n    method: 'get',\n    params: cleanParams\n  });\n}\n\n// 获取案件详情\nexport function getCaseDetail(id) {\n  return request({\n    url: `/case/${id}`,\n    method: 'get'\n  });\n}\n\n// 添加案件\nexport function addCase(data) {\n  return request({\n    url: '/case/add',\n    method: 'post',\n    data\n  });\n}\n\n// 更新案件\nexport function updateCase(id, data) {\n  return request({\n    url: `/case/${id}`,\n    method: 'put',\n    data\n  });\n}\n\n// 删除案件\nexport function deleteCase(id) {\n  return request({\n    url: `/case/${id}`,\n    method: 'delete'\n  });\n}\n\n// 获取案件下的笔录列表\nexport function getCaseRecords(id) {\n  return request({\n    url: `/case/${id}/records`,\n    method: 'get'\n  });\n}\n\n// 打包案件笔录\nexport function packageCase(id) {\n  return request({\n    url: `/case/package/${id}`,\n    method: 'get',\n    responseType: 'blob'\n  });\n}\n\n// 打包选定笔录\nexport function packageSelectedRecords(id, recordIds) {\n  return request({\n    url: `/case/${id}/package-selected`,\n    method: 'post',\n    data: recordIds,\n    responseType: 'blob'\n  });\n}\n\n// 获取案件统计数据\nexport function getCaseStatistics() {\n  return request({\n    url: '/case/statistics',\n    method: 'get'\n  });\n}","map":{"version":3,"names":["request","getCaseList","url","method","getCaseTypes","getCaseStatuses","searchCases","params","console","log","cleanParams","Object","keys","forEach","key","undefined","dateFields","field","originalValue","split","baseUrl","process","env","NODE_ENV","queryString","map","encodeURIComponent","join","fullUrl","getCaseDetail","id","addCase","data","updateCase","deleteCase","getCaseRecords","packageCase","responseType","packageSelectedRecords","recordIds","getCaseStatistics"],"sources":["/Users/sunziang/IdeaProjects/backend_bilu/bilu_backend2/src/api/case.js"],"sourcesContent":["import request from './request'\n\n/**\n * 案件管理相关API\n */\n\n// 获取案件列表\nexport function getCaseList() {\n  return request({\n    url: '/case/list',\n    method: 'get'\n  })\n}\n\n// 获取案件类型\nexport function getCaseTypes() {\n  return request({\n    url: '/case/types',\n    method: 'get'\n  })\n}\n\n// 获取案件状态\nexport function getCaseStatuses() {\n  return request({\n    url: '/case/statuses',\n    method: 'get'\n  })\n}\n\n// 搜索案件\nexport function searchCases(params) {\n  console.log('调用searchCases API，参数:', params)\n  \n  // 确保参数格式正确\n  const cleanParams = { ...params }\n  \n  // 移除空字符串参数\n  Object.keys(cleanParams).forEach(key => {\n    if (cleanParams[key] === '' || cleanParams[key] === undefined || cleanParams[key] === null) {\n      console.log(`移除空参数: ${key} = ${cleanParams[key]}`)\n      delete cleanParams[key]\n    }\n  })\n  \n  // 确保日期格式正确\n  const dateFields = ['startDateFrom', 'startDateTo', 'createdAtFrom', 'createdAtTo']\n  dateFields.forEach(field => {\n    if (cleanParams[field] && typeof cleanParams[field] === 'string') {\n      // 确保日期格式为YYYY-MM-DD\n      const originalValue = cleanParams[field]\n      cleanParams[field] = cleanParams[field].split('T')[0]\n      console.log(`处理日期字段: ${field}, 原值: ${originalValue}, 新值: ${cleanParams[field]}`)\n    }\n  })\n  \n  console.log('优化后的API参数:', cleanParams)\n  \n  // 构建完整URL用于调试\n  const baseUrl = process.env.NODE_ENV === 'development' ? '/api' : 'http://localhost:8080/api'\n  const queryString = Object.keys(cleanParams)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(cleanParams[key])}`)\n    .join('&')\n  const fullUrl = `${baseUrl}/case/search${queryString ? '?' + queryString : ''}`\n  console.log('发送请求完整URL:', fullUrl)\n  \n  return request({\n    url: '/case/search',\n    method: 'get',\n    params: cleanParams\n  })\n}\n\n// 获取案件详情\nexport function getCaseDetail(id) {\n  return request({\n    url: `/case/${id}`,\n    method: 'get'\n  })\n}\n\n// 添加案件\nexport function addCase(data) {\n  return request({\n    url: '/case/add',\n    method: 'post',\n    data\n  })\n}\n\n// 更新案件\nexport function updateCase(id, data) {\n  return request({\n    url: `/case/${id}`,\n    method: 'put',\n    data\n  })\n}\n\n// 删除案件\nexport function deleteCase(id) {\n  return request({\n    url: `/case/${id}`,\n    method: 'delete'\n  })\n}\n\n// 获取案件下的笔录列表\nexport function getCaseRecords(id) {\n  return request({\n    url: `/case/${id}/records`,\n    method: 'get'\n  })\n}\n\n// 打包案件笔录\nexport function packageCase(id) {\n  return request({\n    url: `/case/package/${id}`,\n    method: 'get',\n    responseType: 'blob'\n  })\n}\n\n// 打包选定笔录\nexport function packageSelectedRecords(id, recordIds) {\n  return request({\n    url: `/case/${id}/package-selected`,\n    method: 'post',\n    data: recordIds,\n    responseType: 'blob'\n  });\n}\n\n// 获取案件统计数据\nexport function getCaseStatistics() {\n  return request({\n    url: '/case/statistics',\n    method: 'get'\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}